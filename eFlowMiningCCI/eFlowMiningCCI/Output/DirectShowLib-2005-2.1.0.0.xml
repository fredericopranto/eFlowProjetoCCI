<list>
  <assembly>
    <name>DirectShowLib-2005</name>
    <version>2.1.0.0</version>
    <createdAt>18/10/2013 15:29:50</createdAt>
    <language>C#.NET</language>
    <analyzer>false</analyzer>
    <assemblies>
      <assembly>
        <name>mscorlib</name>
        <version>2.0.0.0</version>
        <language>C#.NET</language>
        <analyzer>false</analyzer>
        <assemblies />
        <exceptions />
        <types />
        <methodCalls />
      </assembly>
      <assembly>
        <name>System.Drawing</name>
        <version>2.0.0.0</version>
        <language>C#.NET</language>
        <analyzer>false</analyzer>
        <assemblies />
        <exceptions />
        <types />
        <methodCalls />
      </assembly>
      <assembly>
        <name>System</name>
        <version>2.0.0.0</version>
        <language>C#.NET</language>
        <analyzer>false</analyzer>
        <assemblies />
        <exceptions />
        <types />
        <methodCalls />
      </assembly>
    </assemblies>
    <exceptions />
    <types>
      <type>
        <name>IPersistMediaPropertyBag</name>
        <fullName>DirectShowLib.IPersistMediaPropertyBag</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPersistMediaPropertyBag.GetClassID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IPersistMediaPropertyBag.GetClassID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistMediaPropertyBag.InitNew()</name>
            <fullName>System.Int32 DirectShowLib.IPersistMediaPropertyBag.InitNew()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistMediaPropertyBag.Load(IMediaPropertyBag, IErrorLog)</name>
            <fullName>System.Int32 DirectShowLib.IPersistMediaPropertyBag.Load(DirectShowLib.IMediaPropertyBag, DirectShowLib.IErrorLog)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistMediaPropertyBag.Save(IMediaPropertyBag, Boolean, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IPersistMediaPropertyBag.Save(DirectShowLib.IMediaPropertyBag, System.Boolean, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineTrack</name>
        <fullName>DirectShowLib.DES.IAMTimelineTrack</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineTrack.AreYouBlank(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.AreYouBlank(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.GetNextSrc(IAMTimelineObj, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.GetNextSrc(DirectShowLib.DES.IAMTimelineObj, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.GetNextSrc2(IAMTimelineObj, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.GetNextSrc2(DirectShowLib.DES.IAMTimelineObj, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.GetNextSrcEx(IAMTimelineObj, IAMTimelineObj)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.GetNextSrcEx(DirectShowLib.DES.IAMTimelineObj, DirectShowLib.DES.IAMTimelineObj)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.GetSourcesCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.GetSourcesCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.GetSrcAtTime(IAMTimelineObj, Int64, DexterFTrackSearchFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.GetSrcAtTime(DirectShowLib.DES.IAMTimelineObj, System.Int64, DirectShowLib.DES.DexterFTrackSearchFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.GetSrcAtTime2(IAMTimelineObj, Double, DexterFTrackSearchFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.GetSrcAtTime2(DirectShowLib.DES.IAMTimelineObj, System.Double, DirectShowLib.DES.DexterFTrackSearchFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.InsertSpace(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.InsertSpace(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.InsertSpace2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.InsertSpace2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.MoveEverythingBy(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.MoveEverythingBy(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.MoveEverythingBy2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.MoveEverythingBy2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.SrcAdd(IAMTimelineObj)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.SrcAdd(DirectShowLib.DES.IAMTimelineObj)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.ZeroBetween(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.ZeroBetween(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrack.ZeroBetween2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrack.ZeroBetween2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ConnectFDynamic</name>
        <fullName>DirectShowLib.DES.ConnectFDynamic</fullName>
        <methods />
      </type>
      <type>
        <name>SFNValidateFlags</name>
        <fullName>DirectShowLib.DES.SFNValidateFlags</fullName>
        <methods />
      </type>
      <type>
        <name>AMTimelineTrans</name>
        <fullName>DirectShowLib.DES.AMTimelineTrans</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMTimelineTrans..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.AMTimelineTrans..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineObj</name>
        <fullName>DirectShowLib.DES.IAMTimelineObj</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineObj.ClearDirty()</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.ClearDirty()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.FixTimes(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.FixTimes(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.FixTimes2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.FixTimes2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetDirtyRange(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetDirtyRange(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetDirtyRange2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetDirtyRange2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetEmbedDepth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetEmbedDepth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetGenID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetGenID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetGroupIBelongTo(IAMTimelineGroup)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetGroupIBelongTo(DirectShowLib.DES.IAMTimelineGroup)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetLocked(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetLocked(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetMuted(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetMuted(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetPropertySetter(IPropertySetter)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetPropertySetter(DirectShowLib.DES.IPropertySetter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetStartStop(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetStartStop(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetStartStop2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetStartStop2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetSubObject(Object)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetSubObject(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetSubObjectGUID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetSubObjectGUID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetSubObjectGUIDB(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetSubObjectGUIDB(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetSubObjectLoaded(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetSubObjectLoaded(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetTimelineNoRef(IAMTimeline)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetTimelineNoRef(DirectShowLib.DES.IAMTimeline)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetTimelineType(TimelineMajorType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetTimelineType(DirectShowLib.DES.TimelineMajorType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetUserData(IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetUserData(System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetUserID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetUserID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.GetUserName(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.GetUserName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.Remove()</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.Remove()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.RemoveAll()</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.RemoveAll()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetDirtyRange(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetDirtyRange(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetDirtyRange2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetDirtyRange2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetLocked(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetLocked(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetMuted(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetMuted(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetPropertySetter(IPropertySetter)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetPropertySetter(DirectShowLib.DES.IPropertySetter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetStartStop(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetStartStop(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetStartStop2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetStartStop2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetSubObject(Object)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetSubObject(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetSubObjectGUID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetSubObjectGUID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetSubObjectGUIDB(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetSubObjectGUIDB(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetTimelineType(TimelineMajorType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetTimelineType(DirectShowLib.DES.TimelineMajorType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetUserData(IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetUserData(System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetUserID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetUserID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineObj.SetUserName(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineObj.SetUserName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TimelineInsertMode</name>
        <fullName>DirectShowLib.DES.TimelineInsertMode</fullName>
        <methods />
      </type>
      <type>
        <name>AMTimelineSrc</name>
        <fullName>DirectShowLib.DES.AMTimelineSrc</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMTimelineSrc..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.AMTimelineSrc..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IXml2Dex</name>
        <fullName>DirectShowLib.DES.IXml2Dex</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IXml2Dex.CopyXML(Object, Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.CopyXML(System.Object, System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.CreateGraphFromFile(Object, Object, String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.CreateGraphFromFile(System.Object, System.Object, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.Delete(Object, Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.Delete(System.Object, System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.PasteXML(Object, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.PasteXML(System.Object, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.PasteXMLFile(Object, Double, String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.PasteXMLFile(System.Object, System.Double, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.ReadXML(Object, Object)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.ReadXML(System.Object, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.ReadXMLFile(Object, String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.ReadXMLFile(System.Object, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.Reset()</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.WriteGrfFile(Object, String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.WriteGrfFile(System.Object, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.WriteXML(Object, String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.WriteXML(System.Object, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.WriteXMLFile(Object, String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.WriteXMLFile(System.Object, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXml2Dex.WriteXMLPart(Object, Double, Double, String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IXml2Dex.WriteXMLPart(System.Object, System.Double, System.Double, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MediaDet</name>
        <fullName>DirectShowLib.DES.MediaDet</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MediaDet..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.MediaDet..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IResize</name>
        <fullName>DirectShowLib.DES.IResize</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IResize.get_InputSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IResize.get_InputSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IResize.get_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IResize.get_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IResize.get_Size(Int32, Int32, ResizeFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IResize.get_Size(System.Int32, System.Int32, DirectShowLib.DES.ResizeFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IResize.put_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IResize.put_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IResize.put_Size(Int32, Int32, ResizeFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IResize.put_Size(System.Int32, System.Int32, DirectShowLib.DES.ResizeFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IRenderEngine</name>
        <fullName>DirectShowLib.DES.IRenderEngine</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IRenderEngine.Commit()</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.Commit()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.ConnectFrontEnd()</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.ConnectFrontEnd()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.Decommit()</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.Decommit()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.DoSmartRecompression()</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.DoSmartRecompression()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.GetCaps(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.GetCaps(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.GetFilterGraph(IGraphBuilder)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.GetFilterGraph(DirectShowLib.IGraphBuilder)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.GetGroupOutputPin(Int32, IPin)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.GetGroupOutputPin(System.Int32, DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.GetTimelineObject(IAMTimeline)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.GetTimelineObject(DirectShowLib.DES.IAMTimeline)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.GetVendorString(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.GetVendorString(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.RenderOutputPins()</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.RenderOutputPins()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.ScrapIt()</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.ScrapIt()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.SetDynamicReconnectLevel(ConnectFDynamic)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.SetDynamicReconnectLevel(DirectShowLib.DES.ConnectFDynamic)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.SetFilterGraph(IGraphBuilder)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.SetFilterGraph(DirectShowLib.IGraphBuilder)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.SetInterestRange(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.SetInterestRange(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.SetInterestRange2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.SetInterestRange2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.SetRenderRange(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.SetRenderRange(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.SetRenderRange2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.SetRenderRange2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.SetSourceConnectCallback(Object)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.SetSourceConnectCallback(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.SetSourceNameValidation(String, IMediaLocator, SFNValidateFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.SetSourceNameValidation(System.String, DirectShowLib.DES.IMediaLocator, DirectShowLib.DES.SFNValidateFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.SetTimelineObject(IAMTimeline)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.SetTimelineObject(DirectShowLib.DES.IAMTimeline)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IRenderEngine.UseInSmartRecompressionGraph()</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine.UseInSmartRecompressionGraph()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMTimelineEffect</name>
        <fullName>DirectShowLib.DES.AMTimelineEffect</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMTimelineEffect..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.AMTimelineEffect..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TimelineMajorType</name>
        <fullName>DirectShowLib.DES.TimelineMajorType</fullName>
        <methods />
      </type>
      <type>
        <name>PropertySetter</name>
        <fullName>DirectShowLib.DES.PropertySetter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void PropertySetter..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.PropertySetter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ResizeFlags</name>
        <fullName>DirectShowLib.DES.ResizeFlags</fullName>
        <methods />
      </type>
      <type>
        <name>DxtJpeg</name>
        <fullName>DirectShowLib.DES.DxtJpeg</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DxtJpeg..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.DxtJpeg..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISmartRenderEngine</name>
        <fullName>DirectShowLib.DES.ISmartRenderEngine</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISmartRenderEngine.GetGroupCompressor(Int32, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.DES.ISmartRenderEngine.GetGroupCompressor(System.Int32, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISmartRenderEngine.SetFindCompressorCB(Object)</name>
            <fullName>System.Int32 DirectShowLib.DES.ISmartRenderEngine.SetFindCompressorCB(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISmartRenderEngine.SetGroupCompressor(Int32, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.DES.ISmartRenderEngine.SetGroupCompressor(System.Int32, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineComp</name>
        <fullName>DirectShowLib.DES.IAMTimelineComp</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineComp.GetCountOfType(Int32, Int32, TimelineMajorType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineComp.GetCountOfType(System.Int32, System.Int32, DirectShowLib.DES.TimelineMajorType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineComp.GetNextVTrack(IAMTimelineObj, IAMTimelineObj)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineComp.GetNextVTrack(DirectShowLib.DES.IAMTimelineObj, DirectShowLib.DES.IAMTimelineObj)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineComp.GetRecursiveLayerOfType(IAMTimelineObj, Int32, TimelineMajorType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineComp.GetRecursiveLayerOfType(DirectShowLib.DES.IAMTimelineObj, System.Int32, DirectShowLib.DES.TimelineMajorType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineComp.GetRecursiveLayerOfTypeI(IAMTimelineObj, Int32, TimelineMajorType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineComp.GetRecursiveLayerOfTypeI(DirectShowLib.DES.IAMTimelineObj, System.Int32, DirectShowLib.DES.TimelineMajorType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineComp.GetVTrack(IAMTimelineObj, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineComp.GetVTrack(DirectShowLib.DES.IAMTimelineObj, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineComp.VTrackGetCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineComp.VTrackGetCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineComp.VTrackInsBefore(IAMTimelineObj, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineComp.VTrackInsBefore(DirectShowLib.DES.IAMTimelineObj, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineComp.VTrackSwapPriorities(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineComp.VTrackSwapPriorities(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMTimeline</name>
        <fullName>DirectShowLib.DES.AMTimeline</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMTimeline..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.AMTimeline..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineEffectable</name>
        <fullName>DirectShowLib.DES.IAMTimelineEffectable</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineEffectable.EffectGetCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineEffectable.EffectGetCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineEffectable.EffectInsBefore(IAMTimelineObj, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineEffectable.EffectInsBefore(DirectShowLib.DES.IAMTimelineObj, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineEffectable.EffectSwapPriorities(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineEffectable.EffectSwapPriorities(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineEffectable.GetEffect(IAMTimelineObj, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineEffectable.GetEffect(DirectShowLib.DES.IAMTimelineObj, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMSetErrorLog</name>
        <fullName>DirectShowLib.DES.IAMSetErrorLog</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMSetErrorLog.get_ErrorLog(IAMErrorLog)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMSetErrorLog.get_ErrorLog(DirectShowLib.DES.IAMErrorLog)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMSetErrorLog.put_ErrorLog(IAMErrorLog)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMSetErrorLog.put_ErrorLog(DirectShowLib.DES.IAMErrorLog)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaDet</name>
        <fullName>DirectShowLib.DES.IMediaDet</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaDet.EnterBitmapGrabMode(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.EnterBitmapGrabMode(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.get_CurrentStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.get_CurrentStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.get_Filename(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.get_Filename(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.get_Filter(Object)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.get_Filter(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.get_FrameRate(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.get_FrameRate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.get_OutputStreams(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.get_OutputStreams(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.get_StreamLength(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.get_StreamLength(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.get_StreamMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.get_StreamMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.get_StreamType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.get_StreamType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.get_StreamTypeB(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.get_StreamTypeB(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.GetBitmapBits(Double, Int32, IntPtr, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.GetBitmapBits(System.Double, System.Int32, System.IntPtr, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.GetSampleGrabber(ISampleGrabber)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.GetSampleGrabber(DirectShowLib.ISampleGrabber)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.put_CurrentStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.put_CurrentStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.put_Filename(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.put_Filename(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.put_Filter(Object)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.put_Filter(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaDet.WriteBitmapBits(Double, Int32, Int32, String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaDet.WriteBitmapBits(System.Double, System.Int32, System.Int32, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineSplittable</name>
        <fullName>DirectShowLib.DES.IAMTimelineSplittable</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineSplittable.SplitAt(Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSplittable.SplitAt(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSplittable.SplitAt2(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSplittable.SplitAt2(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DESResults</name>
        <fullName>DirectShowLib.DES.DESResults</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DESResults..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.DESResults..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Dexterf</name>
        <fullName>DirectShowLib.DES.Dexterf</fullName>
        <methods />
      </type>
      <type>
        <name>IAMErrorLog</name>
        <fullName>DirectShowLib.DES.IAMErrorLog</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMErrorLog.LogError(Int32, String, Int32, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMErrorLog.LogError(System.Int32, System.String, System.Int32, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMTimelineGroup</name>
        <fullName>DirectShowLib.DES.AMTimelineGroup</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMTimelineGroup..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.AMTimelineGroup..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineEffect</name>
        <fullName>DirectShowLib.DES.IAMTimelineEffect</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineEffect.EffectGetPriority(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineEffect.EffectGetPriority(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMTimelineComp</name>
        <fullName>DirectShowLib.DES.AMTimelineComp</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMTimelineComp..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.AMTimelineComp..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DxtCompositor</name>
        <fullName>DirectShowLib.DES.DxtCompositor</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DxtCompositor..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.DxtCompositor..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMTimelineTrack</name>
        <fullName>DirectShowLib.DES.AMTimelineTrack</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMTimelineTrack..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.AMTimelineTrack..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SCompFmt0</name>
        <fullName>DirectShowLib.DES.SCompFmt0</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SCompFmt0..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.SCompFmt0..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMTimelineObj</name>
        <fullName>DirectShowLib.DES.AMTimelineObj</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMTimelineObj..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.AMTimelineObj..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>RenderEngine</name>
        <fullName>DirectShowLib.DES.RenderEngine</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void RenderEngine..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.RenderEngine..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DexterFTrackSearchFlags</name>
        <fullName>DirectShowLib.DES.DexterFTrackSearchFlags</fullName>
        <methods />
      </type>
      <type>
        <name>ColorSource</name>
        <fullName>DirectShowLib.DES.ColorSource</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ColorSource..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.ColorSource..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DESError</name>
        <fullName>DirectShowLib.DES.DESError</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DESError..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.DESError..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DESError.GetErrorText(Int32)</name>
            <fullName>System.String DirectShowLib.DES.DESError.GetErrorText(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DESError.ThrowExceptionForHR(Int32)</name>
            <fullName>System.Void DirectShowLib.DES.DESError.ThrowExceptionForHR(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DESErrorCode</name>
        <fullName>DirectShowLib.DES.DESErrorCode</fullName>
        <methods />
      </type>
      <type>
        <name>IMediaLocator</name>
        <fullName>DirectShowLib.DES.IMediaLocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaLocator.AddFoundLocation(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaLocator.AddFoundLocation(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaLocator.FindMediaFile(String, String, String, SFNValidateFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IMediaLocator.FindMediaFile(System.String, System.String, System.String, DirectShowLib.DES.SFNValidateFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SmartRenderEngine</name>
        <fullName>DirectShowLib.DES.SmartRenderEngine</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SmartRenderEngine..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.SmartRenderEngine..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AudMixer</name>
        <fullName>DirectShowLib.DES.AudMixer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AudMixer..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.AudMixer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DexterParam</name>
        <fullName>DirectShowLib.DES.DexterParam</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IAMTimelineTrans</name>
        <fullName>DirectShowLib.DES.IAMTimelineTrans</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineTrans.GetCutPoint(Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrans.GetCutPoint(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrans.GetCutPoint2(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrans.GetCutPoint2(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrans.GetCutsOnly(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrans.GetCutsOnly(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrans.GetSwapInputs(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrans.GetSwapInputs(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrans.SetCutPoint(Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrans.SetCutPoint(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrans.SetCutPoint2(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrans.SetCutPoint2(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrans.SetCutsOnly(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrans.SetCutsOnly(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTrans.SetSwapInputs(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTrans.SetSwapInputs(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimeline</name>
        <fullName>DirectShowLib.DES.IAMTimeline</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimeline.AddGroup(IAMTimelineObj)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.AddGroup(DirectShowLib.DES.IAMTimelineObj)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.ClearAllGroups()</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.ClearAllGroups()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.CreateEmptyNode(IAMTimelineObj, TimelineMajorType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.CreateEmptyNode(DirectShowLib.DES.IAMTimelineObj, DirectShowLib.DES.TimelineMajorType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.EffectsEnabled(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.EffectsEnabled(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.EnableEffects(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.EnableEffects(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.EnableTransitions(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.EnableTransitions(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetCountOfType(Int32, Int32, Int32, TimelineMajorType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetCountOfType(System.Int32, System.Int32, System.Int32, DirectShowLib.DES.TimelineMajorType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetDefaultEffect(Guid)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetDefaultEffect(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetDefaultEffectB(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetDefaultEffectB(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetDefaultFPS(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetDefaultFPS(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetDefaultTransition(Guid)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetDefaultTransition(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetDefaultTransitionB(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetDefaultTransitionB(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetDirtyRange(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetDirtyRange(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetDuration(Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetDuration(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetDuration2(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetDuration2(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetGroup(IAMTimelineObj, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetGroup(DirectShowLib.DES.IAMTimelineObj, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetGroupCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetGroupCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.GetInsertMode(TimelineInsertMode)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.GetInsertMode(DirectShowLib.DES.TimelineInsertMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.IsDirty(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.IsDirty(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.RemGroupFromList(IAMTimelineObj)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.RemGroupFromList(DirectShowLib.DES.IAMTimelineObj)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.SetDefaultEffect(Guid)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.SetDefaultEffect(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.SetDefaultEffectB(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.SetDefaultEffectB(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.SetDefaultFPS(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.SetDefaultFPS(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.SetDefaultTransition(Guid)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.SetDefaultTransition(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.SetDefaultTransitionB(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.SetDefaultTransitionB(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.SetInsertMode(TimelineInsertMode)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.SetInsertMode(DirectShowLib.DES.TimelineInsertMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.SetInterestRange(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.SetInterestRange(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.TransitionsEnabled(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.TransitionsEnabled(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimeline.ValidateSourceNames(SFNValidateFlags, IMediaLocator, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimeline.ValidateSourceNames(DirectShowLib.DES.SFNValidateFlags, DirectShowLib.DES.IMediaLocator, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DxtAlphaSetter</name>
        <fullName>DirectShowLib.DES.DxtAlphaSetter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DxtAlphaSetter..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.DxtAlphaSetter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DexterValue</name>
        <fullName>DirectShowLib.DES.DexterValue</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IPropertySetter</name>
        <fullName>DirectShowLib.DES.IPropertySetter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPropertySetter.AddProp(DexterParam, DexterValue[])</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.AddProp(DirectShowLib.DES.DexterParam, DirectShowLib.DES.DexterValue[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertySetter.ClearProps()</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.ClearProps()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertySetter.CloneProps(IPropertySetter, Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.CloneProps(DirectShowLib.DES.IPropertySetter, System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertySetter.FreeProps(Int32, IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.FreeProps(System.Int32, System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertySetter.GetProps(Int32, IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.GetProps(System.Int32, System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertySetter.LoadFromBlob(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.LoadFromBlob(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertySetter.LoadXML(Object)</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.LoadXML(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertySetter.PrintXML(StringBuilder, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.PrintXML(System.Text.StringBuilder, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertySetter.SaveToBlob(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.SaveToBlob(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertySetter.SetProps(Object, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IPropertySetter.SetProps(System.Object, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DxtKey</name>
        <fullName>DirectShowLib.DES.DxtKey</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DxtKey..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.DxtKey..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineTransable</name>
        <fullName>DirectShowLib.DES.IAMTimelineTransable</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineTransable.GetNextTrans(IAMTimelineObj, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTransable.GetNextTrans(DirectShowLib.DES.IAMTimelineObj, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTransable.GetNextTrans2(IAMTimelineObj, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTransable.GetNextTrans2(DirectShowLib.DES.IAMTimelineObj, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTransable.GetTransAtTime(IAMTimelineObj, Int64, DexterFTrackSearchFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTransable.GetTransAtTime(DirectShowLib.DES.IAMTimelineObj, System.Int64, DirectShowLib.DES.DexterFTrackSearchFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTransable.GetTransAtTime2(IAMTimelineObj, Double, DexterFTrackSearchFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTransable.GetTransAtTime2(DirectShowLib.DES.IAMTimelineObj, System.Double, DirectShowLib.DES.DexterFTrackSearchFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTransable.TransAdd(IAMTimelineObj)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTransable.TransAdd(DirectShowLib.DES.IAMTimelineObj)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineTransable.TransGetCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineTransable.TransGetCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineGroup</name>
        <fullName>DirectShowLib.DES.IAMTimelineGroup</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineGroup.ClearRecompressFormatDirty()</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.ClearRecompressFormatDirty()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.GetGroupName(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.GetGroupName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.GetMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.GetMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.GetOutputBuffering(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.GetOutputBuffering(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.GetOutputFPS(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.GetOutputFPS(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.GetPreviewMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.GetPreviewMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.GetPriority(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.GetPriority(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.GetSmartRecompressFormat(SCompFmt0)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.GetSmartRecompressFormat(DirectShowLib.DES.SCompFmt0)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.GetTimeline(IAMTimeline)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.GetTimeline(DirectShowLib.DES.IAMTimeline)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.IsRecompressFormatDirty(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.IsRecompressFormatDirty(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.IsSmartRecompressFormatSet(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.IsSmartRecompressFormatSet(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.SetGroupName(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.SetGroupName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.SetMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.SetMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.SetMediaTypeForVB(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.SetMediaTypeForVB(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.SetOutputBuffering(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.SetOutputBuffering(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.SetOutputFPS(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.SetOutputFPS(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.SetPreviewMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.SetPreviewMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.SetRecompFormatFromSource(IAMTimelineSrc)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.SetRecompFormatFromSource(DirectShowLib.DES.IAMTimelineSrc)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.SetSmartRecompressFormat(SCompFmt0)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.SetSmartRecompressFormat(DirectShowLib.DES.SCompFmt0)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineGroup.SetTimeline(IAMTimeline)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineGroup.SetTimeline(DirectShowLib.DES.IAMTimeline)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Xml2Dex</name>
        <fullName>DirectShowLib.DES.Xml2Dex</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Xml2Dex..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.Xml2Dex..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineVirtualTrack</name>
        <fullName>DirectShowLib.DES.IAMTimelineVirtualTrack</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineVirtualTrack.SetTrackDirty()</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineVirtualTrack.SetTrackDirty()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineVirtualTrack.TrackGetPriority(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineVirtualTrack.TrackGetPriority(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MediaLocator</name>
        <fullName>DirectShowLib.DES.MediaLocator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MediaLocator..ctor()</name>
            <fullName>System.Void DirectShowLib.DES.MediaLocator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IRenderEngine2</name>
        <fullName>DirectShowLib.DES.IRenderEngine2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IRenderEngine2.SetResizerGUID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.DES.IRenderEngine2.SetResizerGUID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTimelineSrc</name>
        <fullName>DirectShowLib.DES.IAMTimelineSrc</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTimelineSrc.FixMediaTimes(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.FixMediaTimes(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.FixMediaTimes2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.FixMediaTimes2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.GetDefaultFPS(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.GetDefaultFPS(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.GetMediaLength(Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.GetMediaLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.GetMediaLength2(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.GetMediaLength2(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.GetMediaName(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.GetMediaName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.GetMediaTimes(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.GetMediaTimes(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.GetMediaTimes2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.GetMediaTimes2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.GetStreamNumber(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.GetStreamNumber(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.GetStretchMode(ResizeFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.GetStretchMode(DirectShowLib.DES.ResizeFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.IsNormalRate(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.IsNormalRate(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.ModifyStopTime(Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.ModifyStopTime(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.ModifyStopTime2(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.ModifyStopTime2(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.SetDefaultFPS(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.SetDefaultFPS(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.SetMediaLength(Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.SetMediaLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.SetMediaLength2(Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.SetMediaLength2(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.SetMediaName(String)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.SetMediaName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.SetMediaTimes(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.SetMediaTimes(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.SetMediaTimes2(Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.SetMediaTimes2(System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.SetStreamNumber(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.SetStreamNumber(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.SetStretchMode(ResizeFlags)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.SetStretchMode(DirectShowLib.DES.ResizeFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTimelineSrc.SpliceWithNext(IAMTimelineObj)</name>
            <fullName>System.Int32 DirectShowLib.DES.IAMTimelineSrc.SpliceWithNext(DirectShowLib.DES.IAMTimelineObj)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRFilterConfig</name>
        <fullName>DirectShowLib.IVMRFilterConfig</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRFilterConfig.GetNumberOfStreams(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig.GetNumberOfStreams(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig.GetRenderingMode(VMRMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig.GetRenderingMode(DirectShowLib.VMRMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig.GetRenderingPrefs(VMRRenderPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig.GetRenderingPrefs(DirectShowLib.VMRRenderPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig.SetImageCompositor(IVMRImageCompositor)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig.SetImageCompositor(DirectShowLib.IVMRImageCompositor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig.SetNumberOfStreams(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig.SetNumberOfStreams(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig.SetRenderingMode(VMRMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig.SetRenderingMode(DirectShowLib.VMRMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig.SetRenderingPrefs(VMRRenderPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig.SetRenderingPrefs(DirectShowLib.VMRRenderPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WSTDrawBGMode</name>
        <fullName>DirectShowLib.WSTDrawBGMode</fullName>
        <methods />
      </type>
      <type>
        <name>IPersist</name>
        <fullName>DirectShowLib.IPersist</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPersist.GetClassID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IPersist.GetClassID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVRGB219</name>
        <fullName>DirectShowLib.IDVRGB219</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVRGB219.SetRGB219(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IDVRGB219.SetRGB219(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>QualityMessageType</name>
        <fullName>DirectShowLib.QualityMessageType</fullName>
        <methods />
      </type>
      <type>
        <name>FormatType</name>
        <fullName>DirectShowLib.FormatType</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>Dither</name>
        <fullName>DirectShowLib.Dither</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Dither..ctor()</name>
            <fullName>System.Void DirectShowLib.Dither..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMVideoCompression</name>
        <fullName>DirectShowLib.IAMVideoCompression</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMVideoCompression.get_KeyFrameRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.get_KeyFrameRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.get_PFramesPerKeyFrame(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.get_PFramesPerKeyFrame(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.get_Quality(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.get_Quality(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.get_WindowSize(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.get_WindowSize(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.GetInfo(StringBuilder, Int32, StringBuilder, Int32, Int32, Int32, Double, CompressionCaps)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.GetInfo(System.Text.StringBuilder, System.Int32, System.Text.StringBuilder, System.Int32, System.Int32, System.Int32, System.Double, DirectShowLib.CompressionCaps)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.OverrideFrameSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.OverrideFrameSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.OverrideKeyFrame(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.OverrideKeyFrame(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.put_KeyFrameRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.put_KeyFrameRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.put_PFramesPerKeyFrame(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.put_PFramesPerKeyFrame(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.put_Quality(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.put_Quality(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoCompression.put_WindowSize(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoCompression.put_WindowSize(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AudioStreamConfigCaps</name>
        <fullName>DirectShowLib.AudioStreamConfigCaps</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AudioStreamConfigCaps..ctor()</name>
            <fullName>System.Void DirectShowLib.AudioStreamConfigCaps..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEGAudioDual</name>
        <fullName>DirectShowLib.MPEGAudioDual</fullName>
        <methods />
      </type>
      <type>
        <name>AudioRecord</name>
        <fullName>DirectShowLib.AudioRecord</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AudioRecord..ctor()</name>
            <fullName>System.Void DirectShowLib.AudioRecord..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtDeviceBase</name>
        <fullName>DirectShowLib.ExtDeviceBase</fullName>
        <methods />
      </type>
      <type>
        <name>IAMVfwCompressDialogs</name>
        <fullName>DirectShowLib.IAMVfwCompressDialogs</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMVfwCompressDialogs.GetState(IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMVfwCompressDialogs.GetState(System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVfwCompressDialogs.SendDriverMessage(Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMVfwCompressDialogs.SendDriverMessage(System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVfwCompressDialogs.SetState(IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMVfwCompressDialogs.SetState(System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVfwCompressDialogs.ShowDialog(VfwCompressDialogs, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAMVfwCompressDialogs.ShowDialog(DirectShowLib.VfwCompressDialogs, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRDeinterlaceControl9</name>
        <fullName>DirectShowLib.IVMRDeinterlaceControl9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRDeinterlaceControl9.GetActualDeinterlaceMode(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl9.GetActualDeinterlaceMode(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl9.GetDeinterlaceMode(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl9.GetDeinterlaceMode(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl9.GetDeinterlaceModeCaps(Guid, VMR9VideoDesc, VMR9DeinterlaceCaps)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl9.GetDeinterlaceModeCaps(System.Guid, DirectShowLib.VMR9VideoDesc, DirectShowLib.VMR9DeinterlaceCaps)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl9.GetDeinterlacePrefs(VMR9DeinterlacePrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl9.GetDeinterlacePrefs(DirectShowLib.VMR9DeinterlacePrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl9.GetNumberOfDeinterlaceModes(VMR9VideoDesc, Int32, Guid[])</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl9.GetNumberOfDeinterlaceModes(DirectShowLib.VMR9VideoDesc, System.Int32, System.Guid[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl9.SetDeinterlaceMode(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl9.SetDeinterlaceMode(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl9.SetDeinterlacePrefs(VMR9DeinterlacePrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl9.SetDeinterlacePrefs(DirectShowLib.VMR9DeinterlacePrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEGContextUnion</name>
        <fullName>DirectShowLib.MPEGContextUnion</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>WindowState</name>
        <fullName>DirectShowLib.WindowState</fullName>
        <methods />
      </type>
      <type>
        <name>VMRClsId</name>
        <fullName>DirectShowLib.VMRClsId</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>IVMRAspectRatioControl</name>
        <fullName>DirectShowLib.IVMRAspectRatioControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRAspectRatioControl.GetAspectRatioMode(VMRAspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRAspectRatioControl.GetAspectRatioMode(DirectShowLib.VMRAspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRAspectRatioControl.SetAspectRatioMode(VMRAspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRAspectRatioControl.SetAspectRatioMode(DirectShowLib.VMRAspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMRVideoStreamInfo</name>
        <fullName>DirectShowLib.VMRVideoStreamInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IConfigAsfWriter2</name>
        <fullName>DirectShowLib.IConfigAsfWriter2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IConfigAsfWriter2.ConfigureFilterUsingProfile(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.ConfigureFilterUsingProfile(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.ConfigureFilterUsingProfileGuid(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.ConfigureFilterUsingProfileGuid(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.ConfigureFilterUsingProfileId(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.ConfigureFilterUsingProfileId(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.GetCurrentProfile(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.GetCurrentProfile(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.GetCurrentProfileGuid(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.GetCurrentProfileGuid(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.GetCurrentProfileId(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.GetCurrentProfileId(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.GetIndexMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.GetIndexMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.GetParam(ASFWriterConfig, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.GetParam(DirectShowLib.ASFWriterConfig, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.ResetMultiPassState()</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.ResetMultiPassState()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.SetIndexMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.SetIndexMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.SetParam(ASFWriterConfig, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.SetParam(DirectShowLib.ASFWriterConfig, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter2.StreamNumFromPin(IPin, Int16)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter2.StreamNumFromPin(DirectShowLib.IPin, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMTunerModeType</name>
        <fullName>DirectShowLib.AMTunerModeType</fullName>
        <methods />
      </type>
      <type>
        <name>BDANodeCategory</name>
        <fullName>DirectShowLib.BDANodeCategory</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>IMpeg2Data</name>
        <fullName>DirectShowLib.IMpeg2Data</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMpeg2Data.GetSection(Int16, Byte, MPEG2Filter, Int32, ISectionList)</name>
            <fullName>System.Int32 DirectShowLib.IMpeg2Data.GetSection(System.Int16, System.Byte, DirectShowLib.MPEG2Filter, System.Int32, DirectShowLib.ISectionList)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpeg2Data.GetStreamOfSections(Int16, Byte, MPEG2Filter, IntPtr, IMpeg2Stream)</name>
            <fullName>System.Int32 DirectShowLib.IMpeg2Data.GetStreamOfSections(System.Int16, System.Byte, DirectShowLib.MPEG2Filter, System.IntPtr, DirectShowLib.IMpeg2Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpeg2Data.GetTable(Int16, Byte, MPEG2Filter, Int32, ISectionList)</name>
            <fullName>System.Int32 DirectShowLib.IMpeg2Data.GetTable(System.Int16, System.Byte, DirectShowLib.MPEG2Filter, System.Int32, DirectShowLib.ISectionList)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CompletionStatusFlags</name>
        <fullName>DirectShowLib.MultimediaStreaming.CompletionStatusFlags</fullName>
        <methods />
      </type>
      <type>
        <name>MsResults</name>
        <fullName>DirectShowLib.MultimediaStreaming.MsResults</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MsResults..ctor()</name>
            <fullName>System.Void DirectShowLib.MultimediaStreaming.MsResults..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamState</name>
        <fullName>DirectShowLib.MultimediaStreaming.StreamState</fullName>
        <methods />
      </type>
      <type>
        <name>AMAudioData</name>
        <fullName>DirectShowLib.MultimediaStreaming.AMAudioData</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMAudioData..ctor()</name>
            <fullName>System.Void DirectShowLib.MultimediaStreaming.AMAudioData..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAudioMediaStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.IAudioMediaStream</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAudioMediaStream.AllocateSample(Int32, IStreamSample)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAudioMediaStream.AllocateSample(System.Int32, DirectShowLib.MultimediaStreaming.IStreamSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAudioMediaStream.CreateSample(Object, Int32, Object)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAudioMediaStream.CreateSample(System.Object, System.Int32, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAudioMediaStream.CreateSharedSample(IStreamSample, Int32, IStreamSample)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAudioMediaStream.CreateSharedSample(DirectShowLib.MultimediaStreaming.IStreamSample, System.Int32, DirectShowLib.MultimediaStreaming.IStreamSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAudioMediaStream.GetFormat(WaveFormatEx)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAudioMediaStream.GetFormat(DirectShowLib.WaveFormatEx)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAudioMediaStream.GetInformation(Guid, StreamType)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAudioMediaStream.GetInformation(System.Guid, DirectShowLib.MultimediaStreaming.StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAudioMediaStream.GetMultiMediaStream(IMultiMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAudioMediaStream.GetMultiMediaStream(DirectShowLib.MultimediaStreaming.IMultiMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAudioMediaStream.SendEndOfStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAudioMediaStream.SendEndOfStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAudioMediaStream.SetFormat(WaveFormatEx)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAudioMediaStream.SetFormat(DirectShowLib.WaveFormatEx)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAudioMediaStream.SetSameFormat(IMediaStream, Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAudioMediaStream.SetSameFormat(DirectShowLib.MultimediaStreaming.IMediaStream, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMMediaTypeStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.IAMMediaTypeStream</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMMediaTypeStream.AllocateSample(Int32, IStreamSample)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.AllocateSample(System.Int32, DirectShowLib.MultimediaStreaming.IStreamSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.CreateSample(Int32, IntPtr, Int32, Object, IAMMediaTypeSample)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.CreateSample(System.Int32, System.IntPtr, System.Int32, System.Object, DirectShowLib.MultimediaStreaming.IAMMediaTypeSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.CreateSharedSample(IStreamSample, Int32, IStreamSample)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.CreateSharedSample(DirectShowLib.MultimediaStreaming.IStreamSample, System.Int32, DirectShowLib.MultimediaStreaming.IStreamSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.GetFormat(AMMediaType, Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.GetFormat(DirectShowLib.AMMediaType, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.GetInformation(Guid, StreamType)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.GetInformation(System.Guid, DirectShowLib.MultimediaStreaming.StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.GetMultiMediaStream(IMultiMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.GetMultiMediaStream(DirectShowLib.MultimediaStreaming.IMultiMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.GetStreamAllocatorRequirements(AllocatorProperties)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.GetStreamAllocatorRequirements(DirectShowLib.AllocatorProperties)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.SendEndOfStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.SendEndOfStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.SetFormat(AMMediaType, Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.SetFormat(DirectShowLib.AMMediaType, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.SetSameFormat(IMediaStream, Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.SetSameFormat(DirectShowLib.MultimediaStreaming.IMediaStream, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeStream.SetStreamAllocatorRequirements(AllocatorProperties)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeStream.SetStreamAllocatorRequirements(DirectShowLib.AllocatorProperties)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MSPID</name>
        <fullName>DirectShowLib.MultimediaStreaming.MSPID</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MSPID..ctor()</name>
            <fullName>System.Void DirectShowLib.MultimediaStreaming.MSPID..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MMSSF</name>
        <fullName>DirectShowLib.MultimediaStreaming.MMSSF</fullName>
        <methods />
      </type>
      <type>
        <name>IAMMultiMediaStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.IAMMultiMediaStream</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMMultiMediaStream.AddMediaStream(Object, DsGuid, AMMStream, IMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.AddMediaStream(System.Object, DirectShowLib.DsGuid, DirectShowLib.MultimediaStreaming.AMMStream, DirectShowLib.MultimediaStreaming.IMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.EnumMediaStreams(Int32, IMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.EnumMediaStreams(System.Int32, DirectShowLib.MultimediaStreaming.IMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.GetDuration(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.GetDuration(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.GetEndOfStreamEventHandle(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.GetEndOfStreamEventHandle(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.GetFilter(IMediaStreamFilter)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.GetFilter(DirectShowLib.MultimediaStreaming.IMediaStreamFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.GetFilterGraph(IGraphBuilder)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.GetFilterGraph(DirectShowLib.IGraphBuilder)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.GetInformation(MMSSF, StreamType)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.GetInformation(DirectShowLib.MultimediaStreaming.MMSSF, DirectShowLib.MultimediaStreaming.StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.GetMediaStream(Guid, IMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.GetMediaStream(System.Guid, DirectShowLib.MultimediaStreaming.IMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.GetState(StreamState)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.GetState(DirectShowLib.MultimediaStreaming.StreamState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.GetTime(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.GetTime(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.Initialize(StreamType, AMMMultiStream, IGraphBuilder)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.Initialize(DirectShowLib.MultimediaStreaming.StreamType, DirectShowLib.MultimediaStreaming.AMMMultiStream, DirectShowLib.IGraphBuilder)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.OpenFile(String, AMOpenModes)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.OpenFile(System.String, DirectShowLib.MultimediaStreaming.AMOpenModes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.OpenMoniker(IBindCtx, IMoniker, AMOpenModes)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.OpenMoniker(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, DirectShowLib.MultimediaStreaming.AMOpenModes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.Render(AMOpenModes)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.Render(DirectShowLib.MultimediaStreaming.AMOpenModes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.Seek(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.Seek(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMultiMediaStream.SetState(StreamState)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMultiMediaStream.SetState(DirectShowLib.MultimediaStreaming.StreamState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SSUpdate</name>
        <fullName>DirectShowLib.MultimediaStreaming.SSUpdate</fullName>
        <methods />
      </type>
      <type>
        <name>AMMediaTypeStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.AMMediaTypeStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMMediaTypeStream..ctor()</name>
            <fullName>System.Void DirectShowLib.MultimediaStreaming.AMMediaTypeStream..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMAudioStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.AMAudioStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMAudioStream..ctor()</name>
            <fullName>System.Void DirectShowLib.MultimediaStreaming.AMAudioStream..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMMStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.AMMStream</fullName>
        <methods />
      </type>
      <type>
        <name>AMMultiMediaStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.AMMultiMediaStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMMultiMediaStream..ctor()</name>
            <fullName>System.Void DirectShowLib.MultimediaStreaming.AMMultiMediaStream..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMMediaStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.IAMMediaStream</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMMediaStream.AllocateSample(Int32, IStreamSample)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.AllocateSample(System.Int32, DirectShowLib.MultimediaStreaming.IStreamSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.CreateSharedSample(IStreamSample, Int32, IStreamSample)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.CreateSharedSample(DirectShowLib.MultimediaStreaming.IStreamSample, System.Int32, DirectShowLib.MultimediaStreaming.IStreamSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.GetInformation(Guid, StreamType)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.GetInformation(System.Guid, DirectShowLib.MultimediaStreaming.StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.GetMultiMediaStream(IMultiMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.GetMultiMediaStream(DirectShowLib.MultimediaStreaming.IMultiMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.Initialize(Object, AMMStream, Guid, StreamType)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.Initialize(System.Object, DirectShowLib.MultimediaStreaming.AMMStream, System.Guid, DirectShowLib.MultimediaStreaming.StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.JoinAMMultiMediaStream(IAMMultiMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.JoinAMMultiMediaStream(DirectShowLib.MultimediaStreaming.IAMMultiMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.JoinFilter(IMediaStreamFilter)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.JoinFilter(DirectShowLib.MultimediaStreaming.IMediaStreamFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.JoinFilterGraph(IFilterGraph)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.JoinFilterGraph(DirectShowLib.IFilterGraph)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.SendEndOfStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.SendEndOfStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.SetSameFormat(IMediaStream, Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.SetSameFormat(DirectShowLib.MultimediaStreaming.IMediaStream, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaStream.SetState(FilterState)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaStream.SetState(DirectShowLib.FilterState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMMediaTypeSample</name>
        <fullName>DirectShowLib.MultimediaStreaming.IAMMediaTypeSample</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMMediaTypeSample.CompletionStatus(CompletionStatusFlags, Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.CompletionStatus(DirectShowLib.MultimediaStreaming.CompletionStatusFlags, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.GetActualDataLength()</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.GetActualDataLength()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.GetMediaStream(IMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.GetMediaStream(DirectShowLib.MultimediaStreaming.IMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.GetMediaTime(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.GetMediaTime(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.GetMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.GetMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.GetPointer(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.GetPointer(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.GetSampleTimes(Int64, Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.GetSampleTimes(System.Int64, System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.GetSize()</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.GetSize()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.GetTime(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.GetTime(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.IsDiscontinuity()</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.IsDiscontinuity()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.IsPreroll()</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.IsPreroll()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.IsSyncPoint()</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.IsSyncPoint()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.SetActualDataLength(Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.SetActualDataLength(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.SetDiscontinuity(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.SetDiscontinuity(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.SetMediaTime(DsLong, DsLong)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.SetMediaTime(DirectShowLib.DsLong, DirectShowLib.DsLong)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.SetMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.SetMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.SetPointer(IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.SetPointer(System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.SetPreroll(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.SetPreroll(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.SetSampleTimes(DsLong, DsLong)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.SetSampleTimes(DirectShowLib.DsLong, DirectShowLib.DsLong)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.SetSyncPoint(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.SetSyncPoint(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.SetTime(DsLong, DsLong)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.SetTime(DirectShowLib.DsLong, DirectShowLib.DsLong)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaTypeSample.Update(SSUpdate, IntPtr, IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IAMMediaTypeSample.Update(DirectShowLib.MultimediaStreaming.SSUpdate, System.IntPtr, System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaStreamFilter</name>
        <fullName>DirectShowLib.MultimediaStreaming.IMediaStreamFilter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaStreamFilter.AddMediaStream(IAMMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.AddMediaStream(DirectShowLib.MultimediaStreaming.IAMMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.EndOfStream()</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.EndOfStream()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.EnumMediaStreams(Int32, IMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.EnumMediaStreams(System.Int32, DirectShowLib.MultimediaStreaming.IMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.EnumPins(IEnumPins)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.EnumPins(DirectShowLib.IEnumPins)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.FindPin(String, IPin)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.FindPin(System.String, DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.Flush(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.Flush(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.GetClassID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.GetClassID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.GetCurrentStreamTime(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.GetCurrentStreamTime(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.GetMediaStream(Guid, IMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.GetMediaStream(System.Guid, DirectShowLib.MultimediaStreaming.IMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.GetState(Int32, FilterState)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.GetState(System.Int32, DirectShowLib.FilterState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.GetSyncSource(IReferenceClock)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.GetSyncSource(DirectShowLib.IReferenceClock)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.JoinFilterGraph(IFilterGraph, String)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.JoinFilterGraph(DirectShowLib.IFilterGraph, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.Pause()</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.Pause()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.QueryFilterInfo(FilterInfo)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.QueryFilterInfo(DirectShowLib.FilterInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.QueryVendorInfo(String)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.QueryVendorInfo(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.ReferenceTimeToStreamTime(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.ReferenceTimeToStreamTime(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.Run(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.Run(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.SetSyncSource(IReferenceClock)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.SetSyncSource(DirectShowLib.IReferenceClock)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.Stop()</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.Stop()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.SupportSeeking(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.SupportSeeking(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStreamFilter.WaitUntil(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStreamFilter.WaitUntil(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamSample</name>
        <fullName>DirectShowLib.MultimediaStreaming.IStreamSample</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamSample.CompletionStatus(CompletionStatusFlags, Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IStreamSample.CompletionStatus(DirectShowLib.MultimediaStreaming.CompletionStatusFlags, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamSample.GetMediaStream(IMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IStreamSample.GetMediaStream(DirectShowLib.MultimediaStreaming.IMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamSample.GetSampleTimes(Int64, Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IStreamSample.GetSampleTimes(System.Int64, System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamSample.SetSampleTimes(DsLong, DsLong)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IStreamSample.SetSampleTimes(DirectShowLib.DsLong, DirectShowLib.DsLong)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamSample.Update(SSUpdate, IntPtr, IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IStreamSample.Update(DirectShowLib.MultimediaStreaming.SSUpdate, System.IntPtr, System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMMMultiStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.AMMMultiStream</fullName>
        <methods />
      </type>
      <type>
        <name>AMOpenModes</name>
        <fullName>DirectShowLib.MultimediaStreaming.AMOpenModes</fullName>
        <methods />
      </type>
      <type>
        <name>IMultiMediaStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.IMultiMediaStream</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMultiMediaStream.EnumMediaStreams(Int32, IMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMultiMediaStream.EnumMediaStreams(System.Int32, DirectShowLib.MultimediaStreaming.IMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMultiMediaStream.GetDuration(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMultiMediaStream.GetDuration(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMultiMediaStream.GetEndOfStreamEventHandle(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMultiMediaStream.GetEndOfStreamEventHandle(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMultiMediaStream.GetInformation(MMSSF, StreamType)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMultiMediaStream.GetInformation(DirectShowLib.MultimediaStreaming.MMSSF, DirectShowLib.MultimediaStreaming.StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMultiMediaStream.GetMediaStream(Guid, IMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMultiMediaStream.GetMediaStream(System.Guid, DirectShowLib.MultimediaStreaming.IMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMultiMediaStream.GetState(StreamState)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMultiMediaStream.GetState(DirectShowLib.MultimediaStreaming.StreamState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMultiMediaStream.GetTime(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMultiMediaStream.GetTime(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMultiMediaStream.Seek(Int64)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMultiMediaStream.Seek(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMultiMediaStream.SetState(StreamState)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMultiMediaStream.SetState(DirectShowLib.MultimediaStreaming.StreamState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MsError</name>
        <fullName>DirectShowLib.MultimediaStreaming.MsError</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MsError..ctor()</name>
            <fullName>System.Void DirectShowLib.MultimediaStreaming.MsError..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String MsError.GetErrorText(Int32)</name>
            <fullName>System.String DirectShowLib.MultimediaStreaming.MsError.GetErrorText(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void MsError.ThrowExceptionForHR(Int32)</name>
            <fullName>System.Void DirectShowLib.MultimediaStreaming.MsError.ThrowExceptionForHR(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamType</name>
        <fullName>DirectShowLib.MultimediaStreaming.StreamType</fullName>
        <methods />
      </type>
      <type>
        <name>AMDirectDrawStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.AMDirectDrawStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMDirectDrawStream..ctor()</name>
            <fullName>System.Void DirectShowLib.MultimediaStreaming.AMDirectDrawStream..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaStream</name>
        <fullName>DirectShowLib.MultimediaStreaming.IMediaStream</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaStream.AllocateSample(Int32, IStreamSample)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStream.AllocateSample(System.Int32, DirectShowLib.MultimediaStreaming.IStreamSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStream.CreateSharedSample(IStreamSample, Int32, IStreamSample)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStream.CreateSharedSample(DirectShowLib.MultimediaStreaming.IStreamSample, System.Int32, DirectShowLib.MultimediaStreaming.IStreamSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStream.GetInformation(Guid, StreamType)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStream.GetInformation(System.Guid, DirectShowLib.MultimediaStreaming.StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStream.GetMultiMediaStream(IMultiMediaStream)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStream.GetMultiMediaStream(DirectShowLib.MultimediaStreaming.IMultiMediaStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStream.SendEndOfStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStream.SendEndOfStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaStream.SetSameFormat(IMediaStream, Int32)</name>
            <fullName>System.Int32 DirectShowLib.MultimediaStreaming.IMediaStream.SetSameFormat(DirectShowLib.MultimediaStreaming.IMediaStream, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaSample</name>
        <fullName>DirectShowLib.IMediaSample</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaSample.GetActualDataLength()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.GetActualDataLength()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.GetMediaTime(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.GetMediaTime(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.GetMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.GetMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.GetPointer(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.GetPointer(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.GetSize()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.GetSize()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.GetTime(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.GetTime(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.IsDiscontinuity()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.IsDiscontinuity()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.IsPreroll()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.IsPreroll()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.IsSyncPoint()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.IsSyncPoint()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.SetActualDataLength(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.SetActualDataLength(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.SetDiscontinuity(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.SetDiscontinuity(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.SetMediaTime(DsLong, DsLong)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.SetMediaTime(DirectShowLib.DsLong, DirectShowLib.DsLong)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.SetMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.SetMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.SetPreroll(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.SetPreroll(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.SetSyncPoint(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.SetSyncPoint(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample.SetTime(DsLong, DsLong)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample.SetTime(DirectShowLib.DsLong, DirectShowLib.DsLong)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISampleGrabberCB</name>
        <fullName>DirectShowLib.ISampleGrabberCB</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISampleGrabberCB.BufferCB(Double, IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.ISampleGrabberCB.BufferCB(System.Double, System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISampleGrabberCB.SampleCB(Double, IMediaSample)</name>
            <fullName>System.Int32 DirectShowLib.ISampleGrabberCB.SampleCB(System.Double, DirectShowLib.IMediaSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISeekingPassThru</name>
        <fullName>DirectShowLib.ISeekingPassThru</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISeekingPassThru.Init(Boolean, IPin)</name>
            <fullName>System.Int32 DirectShowLib.ISeekingPassThru.Init(System.Boolean, DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MemoryAllocator</name>
        <fullName>DirectShowLib.MemoryAllocator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MemoryAllocator..ctor()</name>
            <fullName>System.Void DirectShowLib.MemoryAllocator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBasicVideo</name>
        <fullName>DirectShowLib.IBasicVideo</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBasicVideo.get_AvgTimePerFrame(Double)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_AvgTimePerFrame(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_BitErrorRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_BitErrorRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_BitRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_BitRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_DestinationHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_DestinationHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_DestinationLeft(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_DestinationLeft(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_DestinationTop(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_DestinationTop(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_DestinationWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_DestinationWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_SourceHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_SourceHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_SourceLeft(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_SourceLeft(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_SourceTop(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_SourceTop(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_SourceWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_SourceWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_VideoHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_VideoHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.get_VideoWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.get_VideoWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.GetCurrentImage(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.GetCurrentImage(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.GetDestinationPosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.GetDestinationPosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.GetSourcePosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.GetSourcePosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.GetVideoPaletteEntries(Int32, Int32, Int32, Int32[])</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.GetVideoPaletteEntries(System.Int32, System.Int32, System.Int32, System.Int32[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.GetVideoSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.GetVideoSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.IsUsingDefaultDestination()</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.IsUsingDefaultDestination()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.IsUsingDefaultSource()</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.IsUsingDefaultSource()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.put_DestinationHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.put_DestinationHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.put_DestinationLeft(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.put_DestinationLeft(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.put_DestinationTop(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.put_DestinationTop(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.put_DestinationWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.put_DestinationWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.put_SourceHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.put_SourceHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.put_SourceLeft(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.put_SourceLeft(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.put_SourceTop(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.put_SourceTop(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.put_SourceWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.put_SourceWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.SetDefaultDestinationPosition()</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.SetDefaultDestinationPosition()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.SetDefaultSourcePosition()</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.SetDefaultSourcePosition()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.SetDestinationPosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.SetDestinationPosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo.SetSourcePosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo.SetSourcePosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMOpenProgress</name>
        <fullName>DirectShowLib.IAMOpenProgress</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMOpenProgress.AbortOperation()</name>
            <fullName>System.Int32 DirectShowLib.IAMOpenProgress.AbortOperation()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMOpenProgress.QueryProgress(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IAMOpenProgress.QueryProgress(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ATSCFilterOptions</name>
        <fullName>DirectShowLib.ATSCFilterOptions</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>WSTPage</name>
        <fullName>DirectShowLib.WSTPage</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>ISpecifyPropertyPages</name>
        <fullName>DirectShowLib.ISpecifyPropertyPages</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISpecifyPropertyPages.GetPages(DsCAUUID)</name>
            <fullName>System.Int32 DirectShowLib.ISpecifyPropertyPages.GetPages(DirectShowLib.DsCAUUID)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SectionList</name>
        <fullName>DirectShowLib.SectionList</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SectionList..ctor()</name>
            <fullName>System.Void DirectShowLib.SectionList..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9AspectRatioMode</name>
        <fullName>DirectShowLib.VMR9AspectRatioMode</fullName>
        <methods />
      </type>
      <type>
        <name>OverlayMixer2</name>
        <fullName>DirectShowLib.OverlayMixer2</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void OverlayMixer2..ctor()</name>
            <fullName>System.Void DirectShowLib.OverlayMixer2..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsToString</name>
        <fullName>DirectShowLib.DsToString</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>String DsToString.AMMediaTypeToString(AMMediaType)</name>
            <fullName>System.String DirectShowLib.DsToString.AMMediaTypeToString(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsToString.MediaFormatTypeToString(Guid)</name>
            <fullName>System.String DirectShowLib.DsToString.MediaFormatTypeToString(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsToString.MediaSubTypeToString(Guid)</name>
            <fullName>System.String DirectShowLib.DsToString.MediaSubTypeToString(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsToString.MediaTypeToString(Guid)</name>
            <fullName>System.String DirectShowLib.DsToString.MediaTypeToString(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsToString.WalkClass(Type, Guid)</name>
            <fullName>System.String DirectShowLib.DsToString.WalkClass(System.Type, System.Guid)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVDNavigator</name>
        <fullName>DirectShowLib.DVDNavigator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVDNavigator..ctor()</name>
            <fullName>System.Void DirectShowLib.DVDNavigator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsROTEntry</name>
        <fullName>DirectShowLib.DsROTEntry</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>ROTFlags</name>
        <fullName>DirectShowLib.DsROTEntry.ROTFlags</fullName>
        <methods>
          <method>
            <name>Void DsROTEntry..ctor(IFilterGraph)</name>
            <fullName>System.Void DirectShowLib.DsROTEntry..ctor(DirectShowLib.IFilterGraph)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DsROTEntry.CreateItemMoniker(String, String, IMoniker)</name>
            <fullName>System.Int32 DirectShowLib.DsROTEntry.CreateItemMoniker(System.String, System.String, System.Runtime.InteropServices.ComTypes.IMoniker)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsROTEntry.Dispose()</name>
            <fullName>System.Void DirectShowLib.DsROTEntry.Dispose()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsROTEntry.Finalize()</name>
            <fullName>System.Void DirectShowLib.DsROTEntry.Finalize()</fullName>
            <visibility>protected</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DsROTEntry.GetRunningObjectTable(Int32, IRunningObjectTable)</name>
            <fullName>System.Int32 DirectShowLib.DsROTEntry.GetRunningObjectTable(System.Int32, System.Runtime.InteropServices.ComTypes.IRunningObjectTable)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMTunerSignalStrength</name>
        <fullName>DirectShowLib.AMTunerSignalStrength</fullName>
        <methods />
      </type>
      <type>
        <name>AMQueryDecoder</name>
        <fullName>DirectShowLib.AMQueryDecoder</fullName>
        <methods />
      </type>
      <type>
        <name>Mpeg2Data</name>
        <fullName>DirectShowLib.Mpeg2Data</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Mpeg2Data..ctor()</name>
            <fullName>System.Void DirectShowLib.Mpeg2Data..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVideoWindow</name>
        <fullName>DirectShowLib.IVideoWindow</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVideoWindow.get_AutoShow(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_AutoShow(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_BackgroundPalette(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_BackgroundPalette(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_BorderColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_BorderColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_Caption(String)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_Caption(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_FullScreenMode(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_FullScreenMode(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_Height(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_Height(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_Left(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_Left(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_MessageDrain(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_MessageDrain(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_Owner(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_Owner(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_Top(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_Top(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_Visible(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_Visible(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_Width(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_Width(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_WindowState(WindowState)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_WindowState(DirectShowLib.WindowState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_WindowStyle(WindowStyle)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_WindowStyle(DirectShowLib.WindowStyle)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.get_WindowStyleEx(WindowStyleEx)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.get_WindowStyleEx(DirectShowLib.WindowStyleEx)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.GetMaxIdealImageSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.GetMaxIdealImageSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.GetMinIdealImageSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.GetMinIdealImageSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.GetRestorePosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.GetRestorePosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.GetWindowPosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.GetWindowPosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.HideCursor(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.HideCursor(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.IsCursorHidden(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.IsCursorHidden(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.NotifyOwnerMessage(IntPtr, Int32, IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.NotifyOwnerMessage(System.IntPtr, System.Int32, System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_AutoShow(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_AutoShow(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_BackgroundPalette(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_BackgroundPalette(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_BorderColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_BorderColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_Caption(String)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_Caption(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_FullScreenMode(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_FullScreenMode(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_Height(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_Height(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_Left(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_Left(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_MessageDrain(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_MessageDrain(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_Owner(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_Owner(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_Top(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_Top(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_Visible(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_Visible(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_Width(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_Width(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_WindowState(WindowState)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_WindowState(DirectShowLib.WindowState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_WindowStyle(WindowStyle)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_WindowStyle(DirectShowLib.WindowStyle)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.put_WindowStyleEx(WindowStyleEx)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.put_WindowStyleEx(DirectShowLib.WindowStyleEx)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.SetWindowForeground(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.SetWindowForeground(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoWindow.SetWindowPosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVideoWindow.SetWindowPosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SubtitlesFilter</name>
        <fullName>DirectShowLib.SubtitlesFilter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SubtitlesFilter..ctor()</name>
            <fullName>System.Void DirectShowLib.SubtitlesFilter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMGBF</name>
        <fullName>DirectShowLib.AMGBF</fullName>
        <methods />
      </type>
      <type>
        <name>DsLong</name>
        <fullName>DirectShowLib.DsLong</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DsLong..ctor(Int64)</name>
            <fullName>System.Void DirectShowLib.DsLong..ctor(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DsLong DsLong.FromInt64(Int64)</name>
            <fullName>DirectShowLib.DsLong DirectShowLib.DsLong.FromInt64(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DsLong.GetHashCode()</name>
            <fullName>System.Int32 DirectShowLib.DsLong.GetHashCode()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int64 DsLong.ToInt64()</name>
            <fullName>System.Int64 DirectShowLib.DsLong.ToInt64()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsLong.ToString()</name>
            <fullName>System.String DirectShowLib.DsLong.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG2Program</name>
        <fullName>DirectShowLib.MPEG2Program</fullName>
        <methods />
      </type>
      <type>
        <name>VMRDeinterlacePrefs</name>
        <fullName>DirectShowLib.VMRDeinterlacePrefs</fullName>
        <methods />
      </type>
      <type>
        <name>AcmMpegHeadFlags</name>
        <fullName>DirectShowLib.AcmMpegHeadFlags</fullName>
        <methods />
      </type>
      <type>
        <name>AMCopyProtect</name>
        <fullName>DirectShowLib.AMCopyProtect</fullName>
        <methods />
      </type>
      <type>
        <name>DTAMarshaler</name>
        <fullName>DirectShowLib.DTAMarshaler</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DTAMarshaler..ctor(String)</name>
            <fullName>System.Void DirectShowLib.DTAMarshaler..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ICustomMarshaler DTAMarshaler.GetInstance(String)</name>
            <fullName>System.Runtime.InteropServices.ICustomMarshaler DirectShowLib.DTAMarshaler.GetInstance(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DTAMarshaler.GetNativeDataSize()</name>
            <fullName>System.Int32 DirectShowLib.DTAMarshaler.GetNativeDataSize()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Object DTAMarshaler.MarshalNativeToManaged(IntPtr)</name>
            <fullName>System.Object DirectShowLib.DTAMarshaler.MarshalNativeToManaged(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ColorKey</name>
        <fullName>DirectShowLib.ColorKey</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ColorKey..ctor()</name>
            <fullName>System.Void DirectShowLib.ColorKey..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVBSNetworkProvider</name>
        <fullName>DirectShowLib.DVBSNetworkProvider</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVBSNetworkProvider..ctor()</name>
            <fullName>System.Void DirectShowLib.DVBSNetworkProvider..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IPinConnection</name>
        <fullName>DirectShowLib.IPinConnection</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPinConnection.DynamicDisconnect()</name>
            <fullName>System.Int32 DirectShowLib.IPinConnection.DynamicDisconnect()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPinConnection.DynamicQueryAccept(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IPinConnection.DynamicQueryAccept(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPinConnection.IsEndPin()</name>
            <fullName>System.Int32 DirectShowLib.IPinConnection.IsEndPin()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPinConnection.NotifyEndOfStream(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IPinConnection.NotifyEndOfStream(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMFileSinkFlags</name>
        <fullName>DirectShowLib.AMFileSinkFlags</fullName>
        <methods />
      </type>
      <type>
        <name>MPEGRequestType</name>
        <fullName>DirectShowLib.MPEGRequestType</fullName>
        <methods />
      </type>
      <type>
        <name>ICreatePropBagOnRegKey</name>
        <fullName>DirectShowLib.ICreatePropBagOnRegKey</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ICreatePropBagOnRegKey.Create(IntPtr, String, Int32, Int32, Guid, Object)</name>
            <fullName>System.Int32 DirectShowLib.ICreatePropBagOnRegKey.Create(System.IntPtr, System.String, System.Int32, System.Int32, System.Guid, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMAudioRendererStatParam</name>
        <fullName>DirectShowLib.AMAudioRendererStatParam</fullName>
        <methods />
      </type>
      <type>
        <name>IVMRImagePresenterConfig</name>
        <fullName>DirectShowLib.IVMRImagePresenterConfig</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRImagePresenterConfig.GetRenderingPrefs(VMRRenderPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImagePresenterConfig.GetRenderingPrefs(DirectShowLib.VMRRenderPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImagePresenterConfig.SetRenderingPrefs(VMRRenderPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImagePresenterConfig.SetRenderingPrefs(DirectShowLib.VMRRenderPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMStreamInfoFlags</name>
        <fullName>DirectShowLib.AMStreamInfoFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IObjectWithSite</name>
        <fullName>DirectShowLib.IObjectWithSite</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IObjectWithSite.GetSite(DsGuid, Object)</name>
            <fullName>System.Int32 DirectShowLib.IObjectWithSite.GetSite(DirectShowLib.DsGuid, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IObjectWithSite.SetSite(Object)</name>
            <fullName>System.Int32 DirectShowLib.IObjectWithSite.SetSite(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WSTState</name>
        <fullName>DirectShowLib.WSTState</fullName>
        <methods />
      </type>
      <type>
        <name>MMSPLITTER</name>
        <fullName>DirectShowLib.MMSPLITTER</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MMSPLITTER..ctor()</name>
            <fullName>System.Void DirectShowLib.MMSPLITTER..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TVEClsId</name>
        <fullName>DirectShowLib.TVEClsId</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>NotifyFlags</name>
        <fullName>DirectShowLib.NotifyFlags</fullName>
        <methods />
      </type>
      <type>
        <name>OABool</name>
        <fullName>DirectShowLib.OABool</fullName>
        <methods />
      </type>
      <type>
        <name>CameraControlProperty</name>
        <fullName>DirectShowLib.CameraControlProperty</fullName>
        <methods />
      </type>
      <type>
        <name>IAMExtDevice</name>
        <fullName>DirectShowLib.IAMExtDevice</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMExtDevice.Calibrate(IntPtr, ExtTransportEdit, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtDevice.Calibrate(System.IntPtr, DirectShowLib.ExtTransportEdit, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtDevice.get_DevicePort(ExtDevicePort)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtDevice.get_DevicePort(DirectShowLib.ExtDevicePort)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtDevice.get_DevicePower(ExtDeviceCaps)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtDevice.get_DevicePower(DirectShowLib.ExtDeviceCaps)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtDevice.get_ExternalDeviceID(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtDevice.get_ExternalDeviceID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtDevice.get_ExternalDeviceVersion(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtDevice.get_ExternalDeviceVersion(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtDevice.GetCapability(ExtDeviceCaps, ExtDeviceCaps, Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtDevice.GetCapability(DirectShowLib.ExtDeviceCaps, DirectShowLib.ExtDeviceCaps, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtDevice.put_DevicePort(ExtDevicePort)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtDevice.put_DevicePort(DirectShowLib.ExtDevicePort)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtDevice.put_DevicePower(ExtDeviceCaps)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtDevice.put_DevicePower(DirectShowLib.ExtDeviceCaps)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>FilterInfo</name>
        <fullName>DirectShowLib.FilterInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>SBE2FileScan</name>
        <fullName>DirectShowLib.SBE2FileScan</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SBE2FileScan..ctor()</name>
            <fullName>System.Void DirectShowLib.SBE2FileScan..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>NullRenderer</name>
        <fullName>DirectShowLib.NullRenderer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void NullRenderer..ctor()</name>
            <fullName>System.Void DirectShowLib.NullRenderer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9SampleFormat</name>
        <fullName>DirectShowLib.VMR9SampleFormat</fullName>
        <methods />
      </type>
      <type>
        <name>IFilterGraph3</name>
        <fullName>DirectShowLib.IFilterGraph3</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFilterGraph3.Abort()</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.Abort()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.AddFilter(IBaseFilter, String)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.AddFilter(DirectShowLib.IBaseFilter, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.AddSourceFilter(String, String, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.AddSourceFilter(System.String, System.String, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.AddSourceFilterForMoniker(IMoniker, IBindCtx, String, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.AddSourceFilterForMoniker(System.Runtime.InteropServices.ComTypes.IMoniker, System.Runtime.InteropServices.ComTypes.IBindCtx, System.String, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.Connect(IPin, IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.Connect(DirectShowLib.IPin, DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.ConnectDirect(IPin, IPin, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.ConnectDirect(DirectShowLib.IPin, DirectShowLib.IPin, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.Disconnect(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.Disconnect(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.EnumFilters(IEnumFilters)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.EnumFilters(DirectShowLib.IEnumFilters)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.FindFilterByName(String, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.FindFilterByName(System.String, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.Reconnect(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.Reconnect(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.ReconnectEx(IPin, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.ReconnectEx(DirectShowLib.IPin, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.RemoveFilter(IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.RemoveFilter(DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.Render(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.Render(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.RenderEx(IPin, AMRenderExFlags, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.RenderEx(DirectShowLib.IPin, DirectShowLib.AMRenderExFlags, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.RenderFile(String, String)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.RenderFile(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.SetDefaultSyncSource()</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.SetDefaultSyncSource()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.SetLogFile(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.SetLogFile(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.SetSyncSourceEx(IReferenceClock, IReferenceClock, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.SetSyncSourceEx(DirectShowLib.IReferenceClock, DirectShowLib.IReferenceClock, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph3.ShouldOperationContinue()</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph3.ShouldOperationContinue()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMDroppedFrames</name>
        <fullName>DirectShowLib.IAMDroppedFrames</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMDroppedFrames.GetAverageFrameSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMDroppedFrames.GetAverageFrameSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDroppedFrames.GetDroppedInfo(Int32, Int32[], Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMDroppedFrames.GetDroppedInfo(System.Int32, System.Int32[], System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDroppedFrames.GetNumDropped(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMDroppedFrames.GetNumDropped(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDroppedFrames.GetNumNotDropped(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMDroppedFrames.GetNumNotDropped(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMMediaContent2</name>
        <fullName>DirectShowLib.IAMMediaContent2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMMediaContent2.get_MediaParameter(Int32, String, String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent2.get_MediaParameter(System.Int32, System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent2.get_MediaParameterName(Int32, Int32, String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent2.get_MediaParameterName(System.Int32, System.Int32, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent2.get_PlaylistCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent2.get_PlaylistCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CCAFilter</name>
        <fullName>DirectShowLib.CCAFilter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CCAFilter..ctor()</name>
            <fullName>System.Void DirectShowLib.CCAFilter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Mpeg2Stream</name>
        <fullName>DirectShowLib.Mpeg2Stream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Mpeg2Stream..ctor()</name>
            <fullName>System.Void DirectShowLib.Mpeg2Stream..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WMAsfReader</name>
        <fullName>DirectShowLib.WMAsfReader</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void WMAsfReader..ctor()</name>
            <fullName>System.Void DirectShowLib.WMAsfReader..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferComposeRecording</name>
        <fullName>DirectShowLib.StreamBufferComposeRecording</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void StreamBufferComposeRecording..ctor()</name>
            <fullName>System.Void DirectShowLib.StreamBufferComposeRecording..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CaptionsFilter</name>
        <fullName>DirectShowLib.CaptionsFilter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CaptionsFilter..ctor()</name>
            <fullName>System.Void DirectShowLib.CaptionsFilter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9DeinterlaceCaps</name>
        <fullName>DirectShowLib.VMR9DeinterlaceCaps</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>VMRVideoDesc</name>
        <fullName>DirectShowLib.VMRVideoDesc</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>AMSeekingSeekingCapabilities</name>
        <fullName>DirectShowLib.AMSeekingSeekingCapabilities</fullName>
        <methods />
      </type>
      <type>
        <name>AMFilterFlags</name>
        <fullName>DirectShowLib.AMFilterFlags</fullName>
        <methods />
      </type>
      <type>
        <name>MSTVCaptionFilter</name>
        <fullName>DirectShowLib.MSTVCaptionFilter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MSTVCaptionFilter..ctor()</name>
            <fullName>System.Void DirectShowLib.MSTVCaptionFilter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRVideoStreamControl</name>
        <fullName>DirectShowLib.IVMRVideoStreamControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRVideoStreamControl.GetColorKey(DDColorKey)</name>
            <fullName>System.Int32 DirectShowLib.IVMRVideoStreamControl.GetColorKey(DirectShowLib.DDColorKey)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRVideoStreamControl.GetStreamActiveState(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IVMRVideoStreamControl.GetStreamActiveState(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRVideoStreamControl.SetColorKey(DDColorKey)</name>
            <fullName>System.Int32 DirectShowLib.IVMRVideoStreamControl.SetColorKey(DirectShowLib.DDColorKey)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRVideoStreamControl.SetStreamActiveState(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IVMRVideoStreamControl.SetStreamActiveState(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG2Filter2</name>
        <fullName>DirectShowLib.MPEG2Filter2</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG2Filter2..ctor()</name>
            <fullName>System.Void DirectShowLib.MPEG2Filter2..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferSink</name>
        <fullName>DirectShowLib.StreamBufferSink</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void StreamBufferSink..ctor()</name>
            <fullName>System.Void DirectShowLib.StreamBufferSink..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IServiceProvider</name>
        <fullName>DirectShowLib.IServiceProvider</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IServiceProvider.QueryService(DsGuid, DsGuid, Object)</name>
            <fullName>System.Int32 DirectShowLib.IServiceProvider.QueryService(DirectShowLib.DsGuid, DirectShowLib.DsGuid, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>InterleavingMode</name>
        <fullName>DirectShowLib.InterleavingMode</fullName>
        <methods />
      </type>
      <type>
        <name>AMInterlace</name>
        <fullName>DirectShowLib.AMInterlace</fullName>
        <methods />
      </type>
      <type>
        <name>VBISurfaces</name>
        <fullName>DirectShowLib.VBISurfaces</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VBISurfaces..ctor()</name>
            <fullName>System.Void DirectShowLib.VBISurfaces..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WMAsfWriter</name>
        <fullName>DirectShowLib.WMAsfWriter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void WMAsfWriter..ctor()</name>
            <fullName>System.Void DirectShowLib.WMAsfWriter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEGAudioAccuracy</name>
        <fullName>DirectShowLib.MPEGAudioAccuracy</fullName>
        <methods />
      </type>
      <type>
        <name>IVMRMixerControl</name>
        <fullName>DirectShowLib.IVMRMixerControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRMixerControl.GetAlpha(Int32, Single)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.GetAlpha(System.Int32, System.Single)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl.GetBackgroundClr(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.GetBackgroundClr(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl.GetMixingPrefs(VMRMixerPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.GetMixingPrefs(DirectShowLib.VMRMixerPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl.GetOutputRect(Int32, NormalizedRect)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.GetOutputRect(System.Int32, DirectShowLib.NormalizedRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl.GetZOrder(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.GetZOrder(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl.SetAlpha(Int32, Single)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.SetAlpha(System.Int32, System.Single)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl.SetBackgroundClr(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.SetBackgroundClr(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl.SetMixingPrefs(VMRMixerPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.SetMixingPrefs(DirectShowLib.VMRMixerPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl.SetOutputRect(Int32, NormalizedRect)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.SetOutputRect(System.Int32, DirectShowLib.NormalizedRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl.SetZOrder(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl.SetZOrder(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMRMixerPrefs</name>
        <fullName>DirectShowLib.VMRMixerPrefs</fullName>
        <methods />
      </type>
      <type>
        <name>IAMVideoProcAmp</name>
        <fullName>DirectShowLib.IAMVideoProcAmp</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMVideoProcAmp.Get(VideoProcAmpProperty, Int32, VideoProcAmpFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoProcAmp.Get(DirectShowLib.VideoProcAmpProperty, System.Int32, DirectShowLib.VideoProcAmpFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoProcAmp.GetRange(VideoProcAmpProperty, Int32, Int32, Int32, Int32, VideoProcAmpFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoProcAmp.GetRange(DirectShowLib.VideoProcAmpProperty, System.Int32, System.Int32, System.Int32, System.Int32, DirectShowLib.VideoProcAmpFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoProcAmp.Set(VideoProcAmpProperty, Int32, VideoProcAmpFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoProcAmp.Set(DirectShowLib.VideoProcAmpProperty, System.Int32, DirectShowLib.VideoProcAmpFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVInfo</name>
        <fullName>DirectShowLib.DVInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IVPManager</name>
        <fullName>DirectShowLib.IVPManager</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVPManager.GetVideoPortIndex(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVPManager.GetVideoPortIndex(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVPManager.SetVideoPortIndex(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVPManager.SetVideoPortIndex(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBasicAudio</name>
        <fullName>DirectShowLib.IBasicAudio</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBasicAudio.get_Balance(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicAudio.get_Balance(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicAudio.get_Volume(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicAudio.get_Volume(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicAudio.put_Balance(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicAudio.put_Balance(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicAudio.put_Volume(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicAudio.put_Volume(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtTransportEdit</name>
        <fullName>DirectShowLib.ExtTransportEdit</fullName>
        <methods />
      </type>
      <type>
        <name>AMResCtlReserveFlags</name>
        <fullName>DirectShowLib.AMResCtlReserveFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IVMRSurfaceAllocatorEx9</name>
        <fullName>DirectShowLib.IVMRSurfaceAllocatorEx9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRSurfaceAllocatorEx9.AdviseNotify(IVMRSurfaceAllocatorNotify9)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorEx9.AdviseNotify(DirectShowLib.IVMRSurfaceAllocatorNotify9)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocatorEx9.GetSurface(IntPtr, Int32, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorEx9.GetSurface(System.IntPtr, System.Int32, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocatorEx9.GetSurfaceEx(IntPtr, Int32, Int32, IntPtr, DsRect)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorEx9.GetSurfaceEx(System.IntPtr, System.Int32, System.Int32, System.IntPtr, DirectShowLib.DsRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocatorEx9.InitializeDevice(IntPtr, VMR9AllocationInfo, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorEx9.InitializeDevice(System.IntPtr, DirectShowLib.VMR9AllocationInfo, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocatorEx9.TerminateDevice(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorEx9.TerminateDevice(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTunerNotification</name>
        <fullName>DirectShowLib.IAMTunerNotification</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTunerNotification.OnEvent(AMTunerEventType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTunerNotification.OnEvent(DirectShowLib.AMTunerEventType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRVideoStreamControl9</name>
        <fullName>DirectShowLib.IVMRVideoStreamControl9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRVideoStreamControl9.GetStreamActiveState(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IVMRVideoStreamControl9.GetStreamActiveState(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRVideoStreamControl9.SetStreamActiveState(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IVMRVideoStreamControl9.SetStreamActiveState(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IFileSinkFilter</name>
        <fullName>DirectShowLib.IFileSinkFilter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFileSinkFilter.GetCurFile(String, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFileSinkFilter.GetCurFile(System.String, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFileSinkFilter.SetFileName(String, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFileSinkFilter.SetFileName(System.String, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9VideoDesc</name>
        <fullName>DirectShowLib.VMR9VideoDesc</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DsResults</name>
        <fullName>DirectShowLib.DsResults</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>AVIMIDIRender</name>
        <fullName>DirectShowLib.AVIMIDIRender</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AVIMIDIRender..ctor()</name>
            <fullName>System.Void DirectShowLib.AVIMIDIRender..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMpeg2Demultiplexer</name>
        <fullName>DirectShowLib.IMpeg2Demultiplexer</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMpeg2Demultiplexer.CreateOutputPin(AMMediaType, String, IPin)</name>
            <fullName>System.Int32 DirectShowLib.IMpeg2Demultiplexer.CreateOutputPin(DirectShowLib.AMMediaType, System.String, DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpeg2Demultiplexer.DeleteOutputPin(String)</name>
            <fullName>System.Int32 DirectShowLib.IMpeg2Demultiplexer.DeleteOutputPin(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpeg2Demultiplexer.SetOutputPinMediaType(String, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IMpeg2Demultiplexer.SetOutputPinMediaType(System.String, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMAsyncReaderTimestampScaling</name>
        <fullName>DirectShowLib.IAMAsyncReaderTimestampScaling</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMAsyncReaderTimestampScaling.GetTimestampMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAsyncReaderTimestampScaling.GetTimestampMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAsyncReaderTimestampScaling.SetTimestampMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAsyncReaderTimestampScaling.SetTimestampMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DSoundRender</name>
        <fullName>DirectShowLib.DSoundRender</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DSoundRender..ctor()</name>
            <fullName>System.Void DirectShowLib.DSoundRender..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VideoProcAmpFlags</name>
        <fullName>DirectShowLib.VideoProcAmpFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IVMRImageCompositor</name>
        <fullName>DirectShowLib.IVMRImageCompositor</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRImageCompositor.CompositeImage(IntPtr, IntPtr, AMMediaType, Int64, Int64, Int32, VMRVideoStreamInfo[], Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImageCompositor.CompositeImage(System.IntPtr, System.IntPtr, DirectShowLib.AMMediaType, System.Int64, System.Int64, System.Int32, DirectShowLib.VMRVideoStreamInfo[], System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImageCompositor.InitCompositionTarget(IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImageCompositor.InitCompositionTarget(System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImageCompositor.SetStreamMediaType(Int32, AMMediaType, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImageCompositor.SetStreamMediaType(System.Int32, DirectShowLib.AMMediaType, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImageCompositor.TermCompositionTarget(IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImageCompositor.TermCompositionTarget(System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVEncoderResolution</name>
        <fullName>DirectShowLib.DVEncoderResolution</fullName>
        <methods />
      </type>
      <type>
        <name>AMStreamInfo</name>
        <fullName>DirectShowLib.AMStreamInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IEnumPins</name>
        <fullName>DirectShowLib.IEnumPins</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IEnumPins.Clone(IEnumPins)</name>
            <fullName>System.Int32 DirectShowLib.IEnumPins.Clone(DirectShowLib.IEnumPins)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumPins.Next(Int32, IPin[], IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IEnumPins.Next(System.Int32, DirectShowLib.IPin[], System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumPins.Reset()</name>
            <fullName>System.Int32 DirectShowLib.IEnumPins.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumPins.Skip(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IEnumPins.Skip(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMClockAdjust</name>
        <fullName>DirectShowLib.IAMClockAdjust</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMClockAdjust.SetClockDelta(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IAMClockAdjust.SetClockDelta(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMControl</name>
        <fullName>DirectShowLib.AMControl</fullName>
        <methods />
      </type>
      <type>
        <name>FindDirection</name>
        <fullName>DirectShowLib.FindDirection</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>AtscPsipParser</name>
        <fullName>DirectShowLib.AtscPsipParser</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AtscPsipParser..ctor()</name>
            <fullName>System.Void DirectShowLib.AtscPsipParser..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SBE2File</name>
        <fullName>DirectShowLib.SBE2File</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SBE2File..ctor()</name>
            <fullName>System.Void DirectShowLib.SBE2File..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DSAttrib</name>
        <fullName>DirectShowLib.DSAttrib</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>VMR9RenderPrefs</name>
        <fullName>DirectShowLib.VMR9RenderPrefs</fullName>
        <methods />
      </type>
      <type>
        <name>IGraphConfigCallback</name>
        <fullName>DirectShowLib.IGraphConfigCallback</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IGraphConfigCallback.Reconfigure(IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfigCallback.Reconfigure(System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WaveMask</name>
        <fullName>DirectShowLib.WaveMask</fullName>
        <methods />
      </type>
      <type>
        <name>IReferenceClockTimerControl</name>
        <fullName>DirectShowLib.IReferenceClockTimerControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IReferenceClockTimerControl.GetDefaultTimerResolution(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IReferenceClockTimerControl.GetDefaultTimerResolution(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IReferenceClockTimerControl.SetDefaultTimerResolution(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IReferenceClockTimerControl.SetDefaultTimerResolution(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMLine21CCLevel</name>
        <fullName>DirectShowLib.AMLine21CCLevel</fullName>
        <methods />
      </type>
      <type>
        <name>FilterState</name>
        <fullName>DirectShowLib.FilterState</fullName>
        <methods />
      </type>
      <type>
        <name>VideoMixingRenderer9</name>
        <fullName>DirectShowLib.VideoMixingRenderer9</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VideoMixingRenderer9..ctor()</name>
            <fullName>System.Void DirectShowLib.VideoMixingRenderer9..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsCAUUID</name>
        <fullName>DirectShowLib.DsCAUUID</fullName>
        <kind>struct</kind>
        <methods>
          <method>
            <name>Guid[] DsCAUUID.ToGuidArray()</name>
            <fullName>System.Guid[] DirectShowLib.DsCAUUID.ToGuidArray()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMCopyCaptureFileProgress</name>
        <fullName>DirectShowLib.IAMCopyCaptureFileProgress</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMCopyCaptureFileProgress.Progress(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMCopyCaptureFileProgress.Progress(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IEnumFilters</name>
        <fullName>DirectShowLib.IEnumFilters</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IEnumFilters.Clone(IEnumFilters)</name>
            <fullName>System.Int32 DirectShowLib.IEnumFilters.Clone(DirectShowLib.IEnumFilters)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumFilters.Next(Int32, IBaseFilter[], IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IEnumFilters.Next(System.Int32, DirectShowLib.IBaseFilter[], System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumFilters.Reset()</name>
            <fullName>System.Int32 DirectShowLib.IEnumFilters.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumFilters.Skip(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IEnumFilters.Skip(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MjpegDec</name>
        <fullName>DirectShowLib.MjpegDec</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MjpegDec..ctor()</name>
            <fullName>System.Void DirectShowLib.MjpegDec..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>RemFilterFlags</name>
        <fullName>DirectShowLib.RemFilterFlags</fullName>
        <methods />
      </type>
      <type>
        <name>VideoInfoHeader2</name>
        <fullName>DirectShowLib.VideoInfoHeader2</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VideoInfoHeader2..ctor()</name>
            <fullName>System.Void DirectShowLib.VideoInfoHeader2..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TVAudioMode</name>
        <fullName>DirectShowLib.TVAudioMode</fullName>
        <methods />
      </type>
      <type>
        <name>DVBTNetworkProvider</name>
        <fullName>DirectShowLib.DVBTNetworkProvider</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVBTNetworkProvider..ctor()</name>
            <fullName>System.Void DirectShowLib.DVBTNetworkProvider..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMpeg2Stream</name>
        <fullName>DirectShowLib.IMpeg2Stream</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMpeg2Stream.Initialize(MPEGRequestType, IMpeg2Data, MPEGContext, Int16, Byte, MPEG2Filter, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMpeg2Stream.Initialize(DirectShowLib.MPEGRequestType, DirectShowLib.IMpeg2Data, DirectShowLib.MPEGContext, System.Int16, System.Byte, DirectShowLib.MPEG2Filter, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpeg2Stream.SupplyDataBuffer(MPEGStreamBuffer)</name>
            <fullName>System.Int32 DirectShowLib.IMpeg2Stream.SupplyDataBuffer(DirectShowLib.MPEGStreamBuffer)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AllocatorProperties</name>
        <fullName>DirectShowLib.AllocatorProperties</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AllocatorProperties..ctor()</name>
            <fullName>System.Void DirectShowLib.AllocatorProperties..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMRMode</name>
        <fullName>DirectShowLib.VMRMode</fullName>
        <methods />
      </type>
      <type>
        <name>OverlayMixer</name>
        <fullName>DirectShowLib.OverlayMixer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void OverlayMixer..ctor()</name>
            <fullName>System.Void DirectShowLib.OverlayMixer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMStreamSelectEnableFlags</name>
        <fullName>DirectShowLib.AMStreamSelectEnableFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IGraphConfig</name>
        <fullName>DirectShowLib.IGraphConfig</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IGraphConfig.AddFilterToCache(IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.AddFilterToCache(DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphConfig.EnumCacheFilter(IEnumFilters)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.EnumCacheFilter(DirectShowLib.IEnumFilters)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphConfig.GetFilterFlags(IBaseFilter, AMFilterFlags)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.GetFilterFlags(DirectShowLib.IBaseFilter, DirectShowLib.AMFilterFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphConfig.GetStartTime(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.GetStartTime(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphConfig.PushThroughData(IPin, IPinConnection, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.PushThroughData(DirectShowLib.IPin, DirectShowLib.IPinConnection, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphConfig.Reconfigure(IGraphConfigCallback, IntPtr, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.Reconfigure(DirectShowLib.IGraphConfigCallback, System.IntPtr, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphConfig.Reconnect(IPin, IPin, AMMediaType, IBaseFilter, IntPtr, AMGraphConfigReconnect)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.Reconnect(DirectShowLib.IPin, DirectShowLib.IPin, DirectShowLib.AMMediaType, DirectShowLib.IBaseFilter, System.IntPtr, DirectShowLib.AMGraphConfigReconnect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphConfig.RemoveFilterEx(IBaseFilter, RemFilterFlags)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.RemoveFilterEx(DirectShowLib.IBaseFilter, DirectShowLib.RemFilterFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphConfig.RemoveFilterFromCache(IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.RemoveFilterFromCache(DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphConfig.SetFilterFlags(IBaseFilter, AMFilterFlags)</name>
            <fullName>System.Int32 DirectShowLib.IGraphConfig.SetFilterFlags(DirectShowLib.IBaseFilter, DirectShowLib.AMFilterFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVVideoEnc</name>
        <fullName>DirectShowLib.DVVideoEnc</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVVideoEnc..ctor()</name>
            <fullName>System.Void DirectShowLib.DVVideoEnc..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVSplitter</name>
        <fullName>DirectShowLib.DVSplitter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVSplitter..ctor()</name>
            <fullName>System.Void DirectShowLib.DVSplitter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>InfTee</name>
        <fullName>DirectShowLib.InfTee</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void InfTee..ctor()</name>
            <fullName>System.Void DirectShowLib.InfTee..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMLine21CCState</name>
        <fullName>DirectShowLib.AMLine21CCState</fullName>
        <methods />
      </type>
      <type>
        <name>QTDec</name>
        <fullName>DirectShowLib.QTDec</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void QTDec..ctor()</name>
            <fullName>System.Void DirectShowLib.QTDec..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG2Demultiplexer</name>
        <fullName>DirectShowLib.MPEG2Demultiplexer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG2Demultiplexer..ctor()</name>
            <fullName>System.Void DirectShowLib.MPEG2Demultiplexer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferConfig</name>
        <fullName>DirectShowLib.StreamBufferConfig</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void StreamBufferConfig..ctor()</name>
            <fullName>System.Void DirectShowLib.StreamBufferConfig..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AcmMpegHeadLayer</name>
        <fullName>DirectShowLib.AcmMpegHeadLayer</fullName>
        <methods />
      </type>
      <type>
        <name>MixerState</name>
        <fullName>DirectShowLib.MixerState</fullName>
        <methods />
      </type>
      <type>
        <name>IErrorLog</name>
        <fullName>DirectShowLib.IErrorLog</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IErrorLog.AddError(String, EXCEPINFO)</name>
            <fullName>System.Int32 DirectShowLib.IErrorLog.AddError(System.String, System.Runtime.InteropServices.ComTypes.EXCEPINFO)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtTransportModes</name>
        <fullName>DirectShowLib.ExtTransportModes</fullName>
        <methods />
      </type>
      <type>
        <name>AMGraphConfigReconnect</name>
        <fullName>DirectShowLib.AMGraphConfigReconnect</fullName>
        <methods />
      </type>
      <type>
        <name>AMDvdRenderStatus</name>
        <fullName>DirectShowLib.Dvd.AMDvdRenderStatus</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>SPRMArray</name>
        <fullName>DirectShowLib.Dvd.SPRMArray</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DvdKaraokeAssignment</name>
        <fullName>DirectShowLib.Dvd.DvdKaraokeAssignment</fullName>
        <methods />
      </type>
      <type>
        <name>DvdTimeCodeFlags</name>
        <fullName>DirectShowLib.Dvd.DvdTimeCodeFlags</fullName>
        <methods />
      </type>
      <type>
        <name>DvdHMSFTimeCode</name>
        <fullName>DirectShowLib.Dvd.DvdHMSFTimeCode</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DvdHMSFTimeCode..ctor()</name>
            <fullName>System.Void DirectShowLib.Dvd.DvdHMSFTimeCode..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DvdPlaybackLocation2</name>
        <fullName>DirectShowLib.Dvd.DvdPlaybackLocation2</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DvdMultichannelAudioAttributes</name>
        <fullName>DirectShowLib.Dvd.DvdMultichannelAudioAttributes</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DvdAudioCaps</name>
        <fullName>DirectShowLib.Dvd.DvdAudioCaps</fullName>
        <methods />
      </type>
      <type>
        <name>ValidUOPFlag</name>
        <fullName>DirectShowLib.Dvd.ValidUOPFlag</fullName>
        <methods />
      </type>
      <type>
        <name>AMOverlayNotifyFlags</name>
        <fullName>DirectShowLib.Dvd.AMOverlayNotifyFlags</fullName>
        <methods />
      </type>
      <type>
        <name>DvdKaraokeContents</name>
        <fullName>DirectShowLib.Dvd.DvdKaraokeContents</fullName>
        <methods />
      </type>
      <type>
        <name>DvdTitleAppMode</name>
        <fullName>DirectShowLib.Dvd.DvdTitleAppMode</fullName>
        <methods />
      </type>
      <type>
        <name>DvdDiscSide</name>
        <fullName>DirectShowLib.Dvd.DvdDiscSide</fullName>
        <methods />
      </type>
      <type>
        <name>DvdTitleAttributes</name>
        <fullName>DirectShowLib.Dvd.DvdTitleAttributes</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DvdTitleAttributes..ctor()</name>
            <fullName>System.Void DirectShowLib.Dvd.DvdTitleAttributes..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMDvdGraphFlags</name>
        <fullName>DirectShowLib.Dvd.AMDvdGraphFlags</fullName>
        <methods />
      </type>
      <type>
        <name>DvdVideoCompression</name>
        <fullName>DirectShowLib.Dvd.DvdVideoCompression</fullName>
        <methods />
      </type>
      <type>
        <name>DvdTextCharSet</name>
        <fullName>DirectShowLib.Dvd.DvdTextCharSet</fullName>
        <methods />
      </type>
      <type>
        <name>DvdRelativeButton</name>
        <fullName>DirectShowLib.Dvd.DvdRelativeButton</fullName>
        <methods />
      </type>
      <type>
        <name>DvdCmdFlags</name>
        <fullName>DirectShowLib.Dvd.DvdCmdFlags</fullName>
        <methods />
      </type>
      <type>
        <name>DvdVideoAttributes</name>
        <fullName>DirectShowLib.Dvd.DvdVideoAttributes</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IDvdGraphBuilder</name>
        <fullName>DirectShowLib.Dvd.IDvdGraphBuilder</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDvdGraphBuilder.GetDvdInterface(Guid, Object)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdGraphBuilder.GetDvdInterface(System.Guid, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdGraphBuilder.GetFiltergraph(IGraphBuilder)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdGraphBuilder.GetFiltergraph(DirectShowLib.IGraphBuilder)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdGraphBuilder.RenderDvdVideoVolume(String, AMDvdGraphFlags, AMDvdRenderStatus)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdGraphBuilder.RenderDvdVideoVolume(System.String, DirectShowLib.Dvd.AMDvdGraphFlags, DirectShowLib.Dvd.AMDvdRenderStatus)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDvdCmd</name>
        <fullName>DirectShowLib.Dvd.IDvdCmd</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDvdCmd.WaitForEnd()</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdCmd.WaitForEnd()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdCmd.WaitForStart()</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdCmd.WaitForStart()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DvdPreferredDisplayMode</name>
        <fullName>DirectShowLib.Dvd.DvdPreferredDisplayMode</fullName>
        <methods />
      </type>
      <type>
        <name>DvdSubPictureCoding</name>
        <fullName>DirectShowLib.Dvd.DvdSubPictureCoding</fullName>
        <methods />
      </type>
      <type>
        <name>DvdAudioFormat</name>
        <fullName>DirectShowLib.Dvd.DvdAudioFormat</fullName>
        <methods />
      </type>
      <type>
        <name>DvdOptionFlag</name>
        <fullName>DirectShowLib.Dvd.DvdOptionFlag</fullName>
        <methods />
      </type>
      <type>
        <name>IDvdState</name>
        <fullName>DirectShowLib.Dvd.IDvdState</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDvdState.GetDiscID(Int64)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdState.GetDiscID(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdState.GetParentalLevel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdState.GetParentalLevel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DvdSubPictureLangExt</name>
        <fullName>DirectShowLib.Dvd.DvdSubPictureLangExt</fullName>
        <methods />
      </type>
      <type>
        <name>DvdMUACoeff</name>
        <fullName>DirectShowLib.Dvd.DvdMUACoeff</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DvdFrameRate</name>
        <fullName>DirectShowLib.Dvd.DvdFrameRate</fullName>
        <methods />
      </type>
      <type>
        <name>DvdTextStringType</name>
        <fullName>DirectShowLib.Dvd.DvdTextStringType</fullName>
        <methods />
      </type>
      <type>
        <name>DvdSubPictureType</name>
        <fullName>DirectShowLib.Dvd.DvdSubPictureType</fullName>
        <methods />
      </type>
      <type>
        <name>DvdMenuAttributes</name>
        <fullName>DirectShowLib.Dvd.DvdMenuAttributes</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>GPRMArray</name>
        <fullName>DirectShowLib.Dvd.GPRMArray</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DvdSubpictureAttributes</name>
        <fullName>DirectShowLib.Dvd.DvdSubpictureAttributes</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DvdKaraokeAttributes</name>
        <fullName>DirectShowLib.Dvd.DvdKaraokeAttributes</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DvdKaraokeAttributes..ctor()</name>
            <fullName>System.Void DirectShowLib.Dvd.DvdKaraokeAttributes..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DvdAudioAttributes</name>
        <fullName>DirectShowLib.Dvd.DvdAudioAttributes</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DvdKaraokeDownMix</name>
        <fullName>DirectShowLib.Dvd.DvdKaraokeDownMix</fullName>
        <methods />
      </type>
      <type>
        <name>IDvdControl2</name>
        <fullName>DirectShowLib.Dvd.IDvdControl2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDvdControl2.AcceptParentalLevelChange(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.AcceptParentalLevelChange(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.ActivateAtPosition(Point)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.ActivateAtPosition(System.Drawing.Point)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.ActivateButton()</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.ActivateButton()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.Pause(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.Pause(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayAtTime(DvdHMSFTimeCode, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayAtTime(DirectShowLib.Dvd.DvdHMSFTimeCode, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayAtTimeInTitle(Int32, DvdHMSFTimeCode, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayAtTimeInTitle(System.Int32, DirectShowLib.Dvd.DvdHMSFTimeCode, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayBackwards(Double, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayBackwards(System.Double, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayChapter(Int32, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayChapter(System.Int32, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayChapterInTitle(Int32, Int32, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayChapterInTitle(System.Int32, System.Int32, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayChaptersAutoStop(Int32, Int32, Int32, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayChaptersAutoStop(System.Int32, System.Int32, System.Int32, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayForwards(Double, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayForwards(System.Double, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayNextChapter(DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayNextChapter(DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayPeriodInTitleAutoStop(Int32, DvdHMSFTimeCode, DvdHMSFTimeCode, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayPeriodInTitleAutoStop(System.Int32, DirectShowLib.Dvd.DvdHMSFTimeCode, DirectShowLib.Dvd.DvdHMSFTimeCode, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayPrevChapter(DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayPrevChapter(DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.PlayTitle(Int32, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.PlayTitle(System.Int32, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.ReplayChapter(DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.ReplayChapter(DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.Resume(DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.Resume(DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.ReturnFromSubmenu(DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.ReturnFromSubmenu(DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectAndActivateButton(Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectAndActivateButton(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectAngle(Int32, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectAngle(System.Int32, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectAtPosition(Point)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectAtPosition(System.Drawing.Point)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectAudioStream(Int32, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectAudioStream(System.Int32, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectButton(Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectButton(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectDefaultAudioLanguage(Int32, DvdAudioLangExt)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectDefaultAudioLanguage(System.Int32, DirectShowLib.Dvd.DvdAudioLangExt)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectDefaultMenuLanguage(Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectDefaultMenuLanguage(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectDefaultSubpictureLanguage(Int32, DvdSubPictureLangExt)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectDefaultSubpictureLanguage(System.Int32, DirectShowLib.Dvd.DvdSubPictureLangExt)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectKaraokeAudioPresentationMode(DvdKaraokeDownMix)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectKaraokeAudioPresentationMode(DirectShowLib.Dvd.DvdKaraokeDownMix)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectParentalCountry(Byte[])</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectParentalCountry(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectParentalLevel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectParentalLevel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectRelativeButton(DvdRelativeButton)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectRelativeButton(DirectShowLib.Dvd.DvdRelativeButton)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectSubpictureStream(Int32, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectSubpictureStream(System.Int32, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SelectVideoModePreference(DvdPreferredDisplayMode)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SelectVideoModePreference(DirectShowLib.Dvd.DvdPreferredDisplayMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SetDVDDirectory(String)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SetDVDDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SetGPRM(Int32, Int16, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SetGPRM(System.Int32, System.Int16, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SetOption(DvdOptionFlag, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SetOption(DirectShowLib.Dvd.DvdOptionFlag, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SetState(IDvdState, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SetState(DirectShowLib.Dvd.IDvdState, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.SetSubpictureState(Boolean, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.SetSubpictureState(System.Boolean, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.ShowMenu(DvdMenuId, DvdCmdFlags, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.ShowMenu(DirectShowLib.Dvd.DvdMenuId, DirectShowLib.Dvd.DvdCmdFlags, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.StillOff()</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.StillOff()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdControl2.Stop()</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdControl2.Stop()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMDvdStreamFlags</name>
        <fullName>DirectShowLib.Dvd.AMDvdStreamFlags</fullName>
        <methods />
      </type>
      <type>
        <name>DvdMUAMixingInfo</name>
        <fullName>DirectShowLib.Dvd.DvdMUAMixingInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DvdMenuId</name>
        <fullName>DirectShowLib.Dvd.DvdMenuId</fullName>
        <methods />
      </type>
      <type>
        <name>DvdDomain</name>
        <fullName>DirectShowLib.Dvd.DvdDomain</fullName>
        <methods />
      </type>
      <type>
        <name>IDvdInfo2</name>
        <fullName>DirectShowLib.Dvd.IDvdInfo2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDvdInfo2.GetAllGPRMs(GPRMArray)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetAllGPRMs(DirectShowLib.Dvd.GPRMArray)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetAllSPRMs(SPRMArray)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetAllSPRMs(DirectShowLib.Dvd.SPRMArray)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetAudioAttributes(Int32, DvdAudioAttributes)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetAudioAttributes(System.Int32, DirectShowLib.Dvd.DvdAudioAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetAudioLanguage(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetAudioLanguage(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetButtonAtPosition(Point, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetButtonAtPosition(System.Drawing.Point, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetButtonRect(Int32, DsRect)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetButtonRect(System.Int32, DirectShowLib.DsRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetCmdFromEvent(IntPtr, IDvdCmd)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetCmdFromEvent(System.IntPtr, DirectShowLib.Dvd.IDvdCmd)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetCurrentAngle(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetCurrentAngle(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetCurrentAudio(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetCurrentAudio(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetCurrentButton(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetCurrentButton(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetCurrentDomain(DvdDomain)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetCurrentDomain(DirectShowLib.Dvd.DvdDomain)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetCurrentLocation(DvdPlaybackLocation2)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetCurrentLocation(DirectShowLib.Dvd.DvdPlaybackLocation2)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetCurrentSubpicture(Int32, Int32, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetCurrentSubpicture(System.Int32, System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetCurrentUOPS(ValidUOPFlag)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetCurrentUOPS(DirectShowLib.Dvd.ValidUOPFlag)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetCurrentVideoAttributes(DvdVideoAttributes)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetCurrentVideoAttributes(DirectShowLib.Dvd.DvdVideoAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDecoderCaps(DvdDecoderCaps)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDecoderCaps(DirectShowLib.Dvd.DvdDecoderCaps)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDefaultAudioLanguage(Int32, DvdAudioLangExt)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDefaultAudioLanguage(System.Int32, DirectShowLib.Dvd.DvdAudioLangExt)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDefaultMenuLanguage(Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDefaultMenuLanguage(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDefaultSubpictureLanguage(Int32, DvdSubPictureLangExt)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDefaultSubpictureLanguage(System.Int32, DirectShowLib.Dvd.DvdSubPictureLangExt)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDiscID(String, Int64)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDiscID(System.String, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDVDDirectory(StringBuilder, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDVDDirectory(System.Text.StringBuilder, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDVDTextLanguageInfo(Int32, Int32, Int32, DvdTextCharSet)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDVDTextLanguageInfo(System.Int32, System.Int32, System.Int32, DirectShowLib.Dvd.DvdTextCharSet)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDVDTextNumberOfLanguages(Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDVDTextNumberOfLanguages(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDVDTextStringAsNative(Int32, Int32, StringBuilder, Int32, Int32, DvdTextStringType)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDVDTextStringAsNative(System.Int32, System.Int32, System.Text.StringBuilder, System.Int32, System.Int32, DirectShowLib.Dvd.DvdTextStringType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDVDTextStringAsUnicode(Int32, Int32, StringBuilder, Int32, Int32, DvdTextStringType)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDVDTextStringAsUnicode(System.Int32, System.Int32, System.Text.StringBuilder, System.Int32, System.Int32, DirectShowLib.Dvd.DvdTextStringType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetDVDVolumeInfo(Int32, Int32, DvdDiscSide, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetDVDVolumeInfo(System.Int32, System.Int32, DirectShowLib.Dvd.DvdDiscSide, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetKaraokeAttributes(Int32, DvdKaraokeAttributes)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetKaraokeAttributes(System.Int32, DirectShowLib.Dvd.DvdKaraokeAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetMenuLanguages(Int32[], Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetMenuLanguages(System.Int32[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetNumberOfChapters(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetNumberOfChapters(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetPlayerParentalLevel(Int32, Byte[])</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetPlayerParentalLevel(System.Int32, System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetState(IDvdState)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetState(DirectShowLib.Dvd.IDvdState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetSubpictureAttributes(Int32, DvdSubpictureAttributes)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetSubpictureAttributes(System.Int32, DirectShowLib.Dvd.DvdSubpictureAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetSubpictureLanguage(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetSubpictureLanguage(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetTitleAttributes(Int32, DvdMenuAttributes, DvdTitleAttributes)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetTitleAttributes(System.Int32, DirectShowLib.Dvd.DvdMenuAttributes, DirectShowLib.Dvd.DvdTitleAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetTitleParentalLevels(Int32, DvdParentalLevel)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetTitleParentalLevels(System.Int32, DirectShowLib.Dvd.DvdParentalLevel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetTotalTitleTime(DvdHMSFTimeCode, DvdTimeCodeFlags)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetTotalTitleTime(DirectShowLib.Dvd.DvdHMSFTimeCode, DirectShowLib.Dvd.DvdTimeCodeFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.GetVMGAttributes(DvdMenuAttributes)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.GetVMGAttributes(DirectShowLib.Dvd.DvdMenuAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.IsAudioStreamEnabled(Int32, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.IsAudioStreamEnabled(System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvdInfo2.IsSubpictureStreamEnabled(Int32, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.Dvd.IDvdInfo2.IsSubpictureStreamEnabled(System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DvdParentalLevel</name>
        <fullName>DirectShowLib.Dvd.DvdParentalLevel</fullName>
        <methods />
      </type>
      <type>
        <name>DvdAudioAppMode</name>
        <fullName>DirectShowLib.Dvd.DvdAudioAppMode</fullName>
        <methods />
      </type>
      <type>
        <name>DvdAudioLangExt</name>
        <fullName>DirectShowLib.Dvd.DvdAudioLangExt</fullName>
        <methods />
      </type>
      <type>
        <name>DvdDecoderCaps</name>
        <fullName>DirectShowLib.Dvd.DvdDecoderCaps</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>PinInfo</name>
        <fullName>DirectShowLib.PinInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>MPEGContextType</name>
        <fullName>DirectShowLib.MPEGContextType</fullName>
        <methods />
      </type>
      <type>
        <name>ISampleGrabber</name>
        <fullName>DirectShowLib.ISampleGrabber</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISampleGrabber.GetConnectedMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.ISampleGrabber.GetConnectedMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISampleGrabber.GetCurrentBuffer(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.ISampleGrabber.GetCurrentBuffer(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISampleGrabber.GetCurrentSample(IMediaSample)</name>
            <fullName>System.Int32 DirectShowLib.ISampleGrabber.GetCurrentSample(DirectShowLib.IMediaSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISampleGrabber.SetBufferSamples(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.ISampleGrabber.SetBufferSamples(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISampleGrabber.SetCallback(ISampleGrabberCB, Int32)</name>
            <fullName>System.Int32 DirectShowLib.ISampleGrabber.SetCallback(DirectShowLib.ISampleGrabberCB, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISampleGrabber.SetMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.ISampleGrabber.SetMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISampleGrabber.SetOneShot(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.ISampleGrabber.SetOneShot(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVPNotify</name>
        <fullName>DirectShowLib.IVPNotify</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVPNotify.GetDeinterlaceMode(AMVP_Mode)</name>
            <fullName>System.Int32 DirectShowLib.IVPNotify.GetDeinterlaceMode(DirectShowLib.AMVP_Mode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVPNotify.RenegotiateVPParameters()</name>
            <fullName>System.Int32 DirectShowLib.IVPNotify.RenegotiateVPParameters()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVPNotify.SetDeinterlaceMode(AMVP_Mode)</name>
            <fullName>System.Int32 DirectShowLib.IVPNotify.SetDeinterlaceMode(DirectShowLib.AMVP_Mode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DecoderCap</name>
        <fullName>DirectShowLib.DecoderCap</fullName>
        <methods />
      </type>
      <type>
        <name>AMStreamSelectInfoFlags</name>
        <fullName>DirectShowLib.AMStreamSelectInfoFlags</fullName>
        <methods />
      </type>
      <type>
        <name>VideoStreamConfigCaps</name>
        <fullName>DirectShowLib.VideoStreamConfigCaps</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VideoStreamConfigCaps..ctor()</name>
            <fullName>System.Void DirectShowLib.VideoStreamConfigCaps..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9Mode</name>
        <fullName>DirectShowLib.VMR9Mode</fullName>
        <methods />
      </type>
      <type>
        <name>AVIDoc</name>
        <fullName>DirectShowLib.AVIDoc</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AVIDoc..ctor()</name>
            <fullName>System.Void DirectShowLib.AVIDoc..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WSTDecoder</name>
        <fullName>DirectShowLib.WSTDecoder</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void WSTDecoder..ctor()</name>
            <fullName>System.Void DirectShowLib.WSTDecoder..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AVICo</name>
        <fullName>DirectShowLib.AVICo</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AVICo..ctor()</name>
            <fullName>System.Void DirectShowLib.AVICo..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRImageCompositor9</name>
        <fullName>DirectShowLib.IVMRImageCompositor9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRImageCompositor9.CompositeImage(IntPtr, IntPtr, AMMediaType, Int64, Int64, Int32, VMR9VideoStreamInfo[], Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImageCompositor9.CompositeImage(System.IntPtr, System.IntPtr, DirectShowLib.AMMediaType, System.Int64, System.Int64, System.Int32, DirectShowLib.VMR9VideoStreamInfo[], System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImageCompositor9.InitCompositionDevice(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImageCompositor9.InitCompositionDevice(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImageCompositor9.SetStreamMediaType(Int32, AMMediaType, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImageCompositor9.SetStreamMediaType(System.Int32, DirectShowLib.AMMediaType, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImageCompositor9.TermCompositionDevice(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImageCompositor9.TermCompositionDevice(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CreateDevEnum</name>
        <fullName>DirectShowLib.CreateDevEnum</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CreateDevEnum..ctor()</name>
            <fullName>System.Void DirectShowLib.CreateDevEnum..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>FileSource</name>
        <fullName>DirectShowLib.FileSource</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void FileSource..ctor()</name>
            <fullName>System.Void DirectShowLib.FileSource..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IGraphBuilder</name>
        <fullName>DirectShowLib.IGraphBuilder</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IGraphBuilder.Abort()</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.Abort()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.AddFilter(IBaseFilter, String)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.AddFilter(DirectShowLib.IBaseFilter, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.AddSourceFilter(String, String, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.AddSourceFilter(System.String, System.String, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.Connect(IPin, IPin)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.Connect(DirectShowLib.IPin, DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.ConnectDirect(IPin, IPin, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.ConnectDirect(DirectShowLib.IPin, DirectShowLib.IPin, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.Disconnect(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.Disconnect(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.EnumFilters(IEnumFilters)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.EnumFilters(DirectShowLib.IEnumFilters)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.FindFilterByName(String, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.FindFilterByName(System.String, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.Reconnect(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.Reconnect(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.RemoveFilter(IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.RemoveFilter(DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.Render(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.Render(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.RenderFile(String, String)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.RenderFile(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.SetDefaultSyncSource()</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.SetDefaultSyncSource()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.SetLogFile(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.SetLogFile(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGraphBuilder.ShouldOperationContinue()</name>
            <fullName>System.Int32 DirectShowLib.IGraphBuilder.ShouldOperationContinue()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>KSTopologyConnection</name>
        <fullName>DirectShowLib.KSTopologyConnection</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>VMR9SurfaceAllocationFlags</name>
        <fullName>DirectShowLib.VMR9SurfaceAllocationFlags</fullName>
        <methods />
      </type>
      <type>
        <name>VPVBIObject</name>
        <fullName>DirectShowLib.VPVBIObject</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VPVBIObject..ctor()</name>
            <fullName>System.Void DirectShowLib.VPVBIObject..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>InternalScriptCommandRenderer</name>
        <fullName>DirectShowLib.InternalScriptCommandRenderer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void InternalScriptCommandRenderer..ctor()</name>
            <fullName>System.Void DirectShowLib.InternalScriptCommandRenderer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMStats</name>
        <fullName>DirectShowLib.IAMStats</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMStats.AddValue(Int32, Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMStats.AddValue(System.Int32, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStats.get_Count(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMStats.get_Count(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStats.GetIndex(String, Boolean, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMStats.GetIndex(System.String, System.Boolean, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStats.GetValueByIndex(Int32, String, Int32, Double, Double, Double, Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMStats.GetValueByIndex(System.Int32, System.String, System.Int32, System.Double, System.Double, System.Double, System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStats.GetValueByName(String, Int32, Int32, Double, Double, Double, Double, Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMStats.GetValueByName(System.String, System.Int32, System.Int32, System.Double, System.Double, System.Double, System.Double, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStats.Reset()</name>
            <fullName>System.Int32 DirectShowLib.IAMStats.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CompressionCaps</name>
        <fullName>DirectShowLib.CompressionCaps</fullName>
        <methods />
      </type>
      <type>
        <name>WaveFormatExtensible</name>
        <fullName>DirectShowLib.WaveFormatExtensible</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void WaveFormatExtensible..ctor()</name>
            <fullName>System.Void DirectShowLib.WaveFormatExtensible..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISectionList</name>
        <fullName>DirectShowLib.ISectionList</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISectionList.CancelPendingRequest()</name>
            <fullName>System.Int32 DirectShowLib.ISectionList.CancelPendingRequest()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISectionList.GetNumberOfSections(Int16)</name>
            <fullName>System.Int32 DirectShowLib.ISectionList.GetNumberOfSections(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISectionList.GetProgramIdentifier(Int16)</name>
            <fullName>System.Int32 DirectShowLib.ISectionList.GetProgramIdentifier(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISectionList.GetSectionData(Int16, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.ISectionList.GetSectionData(System.Int16, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISectionList.GetTableIdentifier(Byte)</name>
            <fullName>System.Int32 DirectShowLib.ISectionList.GetTableIdentifier(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISectionList.Initialize(MPEGRequestType, IMpeg2Data, MPEGContext, Int16, Byte, MPEG2Filter, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.ISectionList.Initialize(DirectShowLib.MPEGRequestType, DirectShowLib.IMpeg2Data, DirectShowLib.MPEGContext, System.Int16, System.Byte, DirectShowLib.MPEG2Filter, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISectionList.InitializeWithRawSections(MPEGPacketList)</name>
            <fullName>System.Int32 DirectShowLib.ISectionList.InitializeWithRawSections(DirectShowLib.MPEGPacketList)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRImagePresenter9</name>
        <fullName>DirectShowLib.IVMRImagePresenter9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRImagePresenter9.PresentImage(IntPtr, VMR9PresentationInfo)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImagePresenter9.PresentImage(System.IntPtr, DirectShowLib.VMR9PresentationInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImagePresenter9.StartPresenting(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImagePresenter9.StartPresenting(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImagePresenter9.StopPresenting(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImagePresenter9.StopPresenting(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDMOWrapperFilter</name>
        <fullName>DirectShowLib.IDMOWrapperFilter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDMOWrapperFilter.Init(Guid, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IDMOWrapperFilter.Init(System.Guid, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVDState</name>
        <fullName>DirectShowLib.DVDState</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVDState..ctor()</name>
            <fullName>System.Void DirectShowLib.DVDState..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMIntfSearchFlags</name>
        <fullName>DirectShowLib.AMIntfSearchFlags</fullName>
        <methods />
      </type>
      <type>
        <name>AMSeekingSeekingFlags</name>
        <fullName>DirectShowLib.AMSeekingSeekingFlags</fullName>
        <methods />
      </type>
      <type>
        <name>VideoRenderer</name>
        <fullName>DirectShowLib.VideoRenderer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VideoRenderer..ctor()</name>
            <fullName>System.Void DirectShowLib.VideoRenderer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DecimationUsage</name>
        <fullName>DirectShowLib.DecimationUsage</fullName>
        <methods />
      </type>
      <type>
        <name>IAMVideoControl</name>
        <fullName>DirectShowLib.IAMVideoControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMVideoControl.GetCaps(IPin, VideoControlFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoControl.GetCaps(DirectShowLib.IPin, DirectShowLib.VideoControlFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoControl.GetCurrentActualFrameRate(IPin, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoControl.GetCurrentActualFrameRate(DirectShowLib.IPin, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoControl.GetFrameRateList(IPin, Int32, Size, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoControl.GetFrameRateList(DirectShowLib.IPin, System.Int32, System.Drawing.Size, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoControl.GetMaxAvailableFrameRate(IPin, Int32, Size, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoControl.GetMaxAvailableFrameRate(DirectShowLib.IPin, System.Int32, System.Drawing.Size, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoControl.GetMode(IPin, VideoControlFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoControl.GetMode(DirectShowLib.IPin, DirectShowLib.VideoControlFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoControl.SetMode(IPin, VideoControlFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoControl.SetMode(DirectShowLib.IPin, DirectShowLib.VideoControlFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IFileSourceFilter</name>
        <fullName>DirectShowLib.IFileSourceFilter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFileSourceFilter.GetCurFile(String, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFileSourceFilter.GetCurFile(System.String, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFileSourceFilter.Load(String, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFileSourceFilter.Load(System.String, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRImagePresenterConfig9</name>
        <fullName>DirectShowLib.IVMRImagePresenterConfig9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRImagePresenterConfig9.GetRenderingPrefs(VMR9RenderPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImagePresenterConfig9.GetRenderingPrefs(DirectShowLib.VMR9RenderPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRImagePresenterConfig9.SetRenderingPrefs(VMR9RenderPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRImagePresenterConfig9.SetRenderingPrefs(DirectShowLib.VMR9RenderPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IEnumMediaTypes</name>
        <fullName>DirectShowLib.IEnumMediaTypes</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IEnumMediaTypes.Clone(IEnumMediaTypes)</name>
            <fullName>System.Int32 DirectShowLib.IEnumMediaTypes.Clone(DirectShowLib.IEnumMediaTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumMediaTypes.Next(Int32, AMMediaType[], IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IEnumMediaTypes.Next(System.Int32, DirectShowLib.AMMediaType[], System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumMediaTypes.Reset()</name>
            <fullName>System.Int32 DirectShowLib.IEnumMediaTypes.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumMediaTypes.Skip(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IEnumMediaTypes.Skip(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MediaType</name>
        <fullName>DirectShowLib.MediaType</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>VMR9ProcAmpControlRange</name>
        <fullName>DirectShowLib.VMR9ProcAmpControlRange</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>CMpegAudioCodec</name>
        <fullName>DirectShowLib.CMpegAudioCodec</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CMpegAudioCodec..ctor()</name>
            <fullName>System.Void DirectShowLib.CMpegAudioCodec..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMRMonitorInfo</name>
        <fullName>DirectShowLib.VMRMonitorInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IMixerOCX</name>
        <fullName>DirectShowLib.IMixerOCX</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMixerOCX.Advise(IMixerOCXNotify)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCX.Advise(DirectShowLib.IMixerOCXNotify)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerOCX.GetAspectRatio(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCX.GetAspectRatio(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerOCX.GetStatus(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCX.GetStatus(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerOCX.GetVideoSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCX.GetVideoSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerOCX.OnDisplayChange(Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCX.OnDisplayChange(System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerOCX.OnDraw(IntPtr, DsRect)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCX.OnDraw(System.IntPtr, DirectShowLib.DsRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerOCX.SetDrawRegion(IntPtr, DsRect, DsRect)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCX.SetDrawRegion(System.IntPtr, DirectShowLib.DsRect, DirectShowLib.DsRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerOCX.UnAdvise()</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCX.UnAdvise()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IFilterGraph</name>
        <fullName>DirectShowLib.IFilterGraph</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFilterGraph.AddFilter(IBaseFilter, String)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph.AddFilter(DirectShowLib.IBaseFilter, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph.ConnectDirect(IPin, IPin, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph.ConnectDirect(DirectShowLib.IPin, DirectShowLib.IPin, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph.Disconnect(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph.Disconnect(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph.EnumFilters(IEnumFilters)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph.EnumFilters(DirectShowLib.IEnumFilters)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph.FindFilterByName(String, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph.FindFilterByName(System.String, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph.Reconnect(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph.Reconnect(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph.RemoveFilter(IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph.RemoveFilter(DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph.SetDefaultSyncSource()</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph.SetDefaultSyncSource()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IConfigAviMux</name>
        <fullName>DirectShowLib.IConfigAviMux</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IConfigAviMux.GetMasterStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAviMux.GetMasterStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAviMux.GetOutputCompatibilityIndex(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAviMux.GetOutputCompatibilityIndex(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAviMux.SetMasterStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAviMux.SetMasterStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAviMux.SetOutputCompatibilityIndex(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAviMux.SetOutputCompatibilityIndex(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>NormalizedRect</name>
        <fullName>DirectShowLib.NormalizedRect</fullName>
        <kind>struct</kind>
        <methods>
          <method>
            <name>Void NormalizedRect..ctor(RectangleF)</name>
            <fullName>System.Void DirectShowLib.NormalizedRect..ctor(System.Drawing.RectangleF)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void NormalizedRect..ctor(Single, Single, Single, Single)</name>
            <fullName>System.Void DirectShowLib.NormalizedRect..ctor(System.Single, System.Single, System.Single, System.Single)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Boolean NormalizedRect.Equals(Object)</name>
            <fullName>System.Boolean DirectShowLib.NormalizedRect.Equals(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>NormalizedRect NormalizedRect.FromRectangle(RectangleF)</name>
            <fullName>DirectShowLib.NormalizedRect DirectShowLib.NormalizedRect.FromRectangle(System.Drawing.RectangleF)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 NormalizedRect.GetHashCode()</name>
            <fullName>System.Int32 DirectShowLib.NormalizedRect.GetHashCode()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>RectangleF NormalizedRect.ToRectangleF()</name>
            <fullName>System.Drawing.RectangleF DirectShowLib.NormalizedRect.ToRectangleF()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String NormalizedRect.ToString()</name>
            <fullName>System.String DirectShowLib.NormalizedRect.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SBE2MediaTypeProfile</name>
        <fullName>DirectShowLib.SBE2MediaTypeProfile</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SBE2MediaTypeProfile..ctor()</name>
            <fullName>System.Void DirectShowLib.SBE2MediaTypeProfile..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMixerPinConfig</name>
        <fullName>DirectShowLib.IMixerPinConfig</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMixerPinConfig.GetAspectRatioMode(AspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.GetAspectRatioMode(DirectShowLib.AspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.GetBlendingParameter(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.GetBlendingParameter(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.GetColorKey(ColorKey, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.GetColorKey(DirectShowLib.ColorKey, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.GetRelativePosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.GetRelativePosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.GetStreamTransparent(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.GetStreamTransparent(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.GetZOrder(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.GetZOrder(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.SetAspectRatioMode(AspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.SetAspectRatioMode(DirectShowLib.AspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.SetBlendingParameter(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.SetBlendingParameter(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.SetColorKey(ColorKey)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.SetColorKey(DirectShowLib.ColorKey)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.SetRelativePosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.SetRelativePosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.SetStreamTransparent(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.SetStreamTransparent(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig.SetZOrder(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig.SetZOrder(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVEncoderVideoFormat</name>
        <fullName>DirectShowLib.DVEncoderVideoFormat</fullName>
        <methods />
      </type>
      <type>
        <name>MPEG1Doc</name>
        <fullName>DirectShowLib.MPEG1Doc</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG1Doc..ctor()</name>
            <fullName>System.Void DirectShowLib.MPEG1Doc..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtTransportCaps</name>
        <fullName>DirectShowLib.ExtTransportCaps</fullName>
        <methods />
      </type>
      <type>
        <name>AviReader</name>
        <fullName>DirectShowLib.AviReader</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AviReader..ctor()</name>
            <fullName>System.Void DirectShowLib.AviReader..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaEventEx</name>
        <fullName>DirectShowLib.IMediaEventEx</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaEventEx.CancelDefaultHandling(EventCode)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventEx.CancelDefaultHandling(DirectShowLib.EventCode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEventEx.FreeEventParams(EventCode, IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventEx.FreeEventParams(DirectShowLib.EventCode, System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEventEx.GetEvent(EventCode, IntPtr, IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventEx.GetEvent(DirectShowLib.EventCode, System.IntPtr, System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEventEx.GetEventHandle(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventEx.GetEventHandle(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEventEx.GetNotifyFlags(NotifyFlags)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventEx.GetNotifyFlags(DirectShowLib.NotifyFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEventEx.RestoreDefaultHandling(EventCode)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventEx.RestoreDefaultHandling(DirectShowLib.EventCode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEventEx.SetNotifyFlags(NotifyFlags)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventEx.SetNotifyFlags(DirectShowLib.NotifyFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEventEx.SetNotifyWindow(IntPtr, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventEx.SetNotifyWindow(System.IntPtr, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEventEx.WaitForCompletion(Int32, EventCode)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventEx.WaitForCompletion(System.Int32, DirectShowLib.EventCode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IKsPropertySet</name>
        <fullName>DirectShowLib.IKsPropertySet</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IKsPropertySet.Get(Guid, Int32, IntPtr, Int32, IntPtr, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IKsPropertySet.Get(System.Guid, System.Int32, System.IntPtr, System.Int32, System.IntPtr, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IKsPropertySet.QuerySupported(Guid, Int32, KSPropertySupport)</name>
            <fullName>System.Int32 DirectShowLib.IKsPropertySet.QuerySupported(System.Guid, System.Int32, DirectShowLib.KSPropertySupport)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IKsPropertySet.Set(Guid, Int32, IntPtr, Int32, IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IKsPropertySet.Set(System.Guid, System.Int32, System.IntPtr, System.Int32, System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMLine21Decoder</name>
        <fullName>DirectShowLib.IAMLine21Decoder</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMLine21Decoder.GetBackgroundColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.GetBackgroundColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.GetCurrentService(AMLine21CCService)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.GetCurrentService(DirectShowLib.AMLine21CCService)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.GetDecoderLevel(AMLine21CCLevel)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.GetDecoderLevel(DirectShowLib.AMLine21CCLevel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.GetDrawBackgroundMode(AMLine21DrawBGMode)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.GetDrawBackgroundMode(DirectShowLib.AMLine21DrawBGMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.GetOutputFormat(BitmapInfoHeader)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.GetOutputFormat(DirectShowLib.BitmapInfoHeader)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.GetRedrawAlways(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.GetRedrawAlways(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.GetServiceState(AMLine21CCState)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.GetServiceState(DirectShowLib.AMLine21CCState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.SetBackgroundColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.SetBackgroundColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.SetCurrentService(AMLine21CCService)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.SetCurrentService(DirectShowLib.AMLine21CCService)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.SetDrawBackgroundMode(AMLine21DrawBGMode)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.SetDrawBackgroundMode(DirectShowLib.AMLine21DrawBGMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.SetOutputFormat(BitmapInfoHeader)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.SetOutputFormat(DirectShowLib.BitmapInfoHeader)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.SetRedrawAlways(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.SetRedrawAlways(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMLine21Decoder.SetServiceState(AMLine21CCState)</name>
            <fullName>System.Int32 DirectShowLib.IAMLine21Decoder.SetServiceState(DirectShowLib.AMLine21CCState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VfwCaptureDialogs</name>
        <fullName>DirectShowLib.VfwCaptureDialogs</fullName>
        <methods />
      </type>
      <type>
        <name>VMR9DeinterlaceTech</name>
        <fullName>DirectShowLib.VMR9DeinterlaceTech</fullName>
        <methods />
      </type>
      <type>
        <name>DTFilter</name>
        <fullName>DirectShowLib.DTFilter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DTFilter..ctor()</name>
            <fullName>System.Void DirectShowLib.DTFilter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AviSplitter</name>
        <fullName>DirectShowLib.AviSplitter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AviSplitter..ctor()</name>
            <fullName>System.Void DirectShowLib.AviSplitter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>FilterMapper</name>
        <fullName>DirectShowLib.FilterMapper</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void FilterMapper..ctor()</name>
            <fullName>System.Void DirectShowLib.FilterMapper..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AviDest</name>
        <fullName>DirectShowLib.AviDest</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AviDest..ctor()</name>
            <fullName>System.Void DirectShowLib.AviDest..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AVIDec</name>
        <fullName>DirectShowLib.AVIDec</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AVIDec..ctor()</name>
            <fullName>System.Void DirectShowLib.AVIDec..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsUtils</name>
        <fullName>DirectShowLib.DsUtils</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DsUtils.FreeAMMediaType(AMMediaType)</name>
            <fullName>System.Void DirectShowLib.DsUtils.FreeAMMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsUtils.FreePinInfo(PinInfo)</name>
            <fullName>System.Void DirectShowLib.DsUtils.FreePinInfo(DirectShowLib.PinInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Guid DsUtils.GetPinCategory(IPin)</name>
            <fullName>System.Guid DirectShowLib.DsUtils.GetPinCategory(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Line21Decoder</name>
        <fullName>DirectShowLib.Line21Decoder</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Line21Decoder..ctor()</name>
            <fullName>System.Void DirectShowLib.Line21Decoder..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMRAlphaBitmap</name>
        <fullName>DirectShowLib.VMRAlphaBitmap</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>NetworkProvider</name>
        <fullName>DirectShowLib.NetworkProvider</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void NetworkProvider..ctor()</name>
            <fullName>System.Void DirectShowLib.NetworkProvider..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IPropertyBag</name>
        <fullName>DirectShowLib.IPropertyBag</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPropertyBag.Read(String, Object, IErrorLog)</name>
            <fullName>System.Int32 DirectShowLib.IPropertyBag.Read(System.String, System.Object, DirectShowLib.IErrorLog)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPropertyBag.Write(String, Object)</name>
            <fullName>System.Int32 DirectShowLib.IPropertyBag.Write(System.String, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMAudioRendererStats</name>
        <fullName>DirectShowLib.IAMAudioRendererStats</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMAudioRendererStats.GetStatParam(AMAudioRendererStatParam, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioRendererStats.GetStatParam(DirectShowLib.AMAudioRendererStatParam, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMPEG2StreamIdMap</name>
        <fullName>DirectShowLib.IMPEG2StreamIdMap</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMPEG2StreamIdMap.EnumStreamIdMap(Object)</name>
            <fullName>System.Int32 DirectShowLib.IMPEG2StreamIdMap.EnumStreamIdMap(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2StreamIdMap.MapStreamId(Int32, MPEG2Program, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMPEG2StreamIdMap.MapStreamId(System.Int32, DirectShowLib.MPEG2Program, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2StreamIdMap.UnmapStreamId(Int32, Int32[])</name>
            <fullName>System.Int32 DirectShowLib.IMPEG2StreamIdMap.UnmapStreamId(System.Int32, System.Int32[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMGraphStreams</name>
        <fullName>DirectShowLib.IAMGraphStreams</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMGraphStreams.FindUpstreamInterface(IPin, Guid, Object, AMIntfSearchFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMGraphStreams.FindUpstreamInterface(DirectShowLib.IPin, System.Guid, System.Object, DirectShowLib.AMIntfSearchFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMGraphStreams.SetMaxGraphLatency(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IAMGraphStreams.SetMaxGraphLatency(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMGraphStreams.SyncUsingStreamOffset(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMGraphStreams.SyncUsingStreamOffset(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMMediaType</name>
        <fullName>DirectShowLib.AMMediaType</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMMediaType..ctor()</name>
            <fullName>System.Void DirectShowLib.AMMediaType..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VideoRendererDefault</name>
        <fullName>DirectShowLib.VideoRendererDefault</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VideoRendererDefault..ctor()</name>
            <fullName>System.Void DirectShowLib.VideoRendererDefault..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVBCNetworkProvider</name>
        <fullName>DirectShowLib.DVBCNetworkProvider</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVBCNetworkProvider..ctor()</name>
            <fullName>System.Void DirectShowLib.DVBCNetworkProvider..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DDColor</name>
        <fullName>DirectShowLib.DDColor</fullName>
        <methods />
      </type>
      <type>
        <name>IDVSplitter</name>
        <fullName>DirectShowLib.IDVSplitter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVSplitter.DiscardAlternateVideoFrames(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IDVSplitter.DiscardAlternateVideoFrames(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9ProcAmpControlFlags</name>
        <fullName>DirectShowLib.VMR9ProcAmpControlFlags</fullName>
        <methods />
      </type>
      <type>
        <name>FilterGraphPrivateThread</name>
        <fullName>DirectShowLib.FilterGraphPrivateThread</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void FilterGraphPrivateThread..ctor()</name>
            <fullName>System.Void DirectShowLib.FilterGraphPrivateThread..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VfwCapture</name>
        <fullName>DirectShowLib.VfwCapture</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VfwCapture..ctor()</name>
            <fullName>System.Void DirectShowLib.VfwCapture..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>PhysicalConnectorType</name>
        <fullName>DirectShowLib.PhysicalConnectorType</fullName>
        <methods />
      </type>
      <type>
        <name>DsGuid</name>
        <fullName>DirectShowLib.DsGuid</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DsGuid..ctor(Guid)</name>
            <fullName>System.Void DirectShowLib.DsGuid..ctor(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsGuid..ctor(String)</name>
            <fullName>System.Void DirectShowLib.DsGuid..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsGuid..ctor()</name>
            <fullName>System.Void DirectShowLib.DsGuid..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DsGuid DsGuid.FromGuid(Guid)</name>
            <fullName>DirectShowLib.DsGuid DirectShowLib.DsGuid.FromGuid(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DsGuid.GetHashCode()</name>
            <fullName>System.Int32 DirectShowLib.DsGuid.GetHashCode()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Guid DsGuid.ToGuid()</name>
            <fullName>System.Guid DirectShowLib.DsGuid.ToGuid()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsGuid.ToString(String)</name>
            <fullName>System.String DirectShowLib.DsGuid.ToString(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsGuid.ToString()</name>
            <fullName>System.String DirectShowLib.DsGuid.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WindowStyle</name>
        <fullName>DirectShowLib.WindowStyle</fullName>
        <methods />
      </type>
      <type>
        <name>IVMRMixerBitmap9</name>
        <fullName>DirectShowLib.IVMRMixerBitmap9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRMixerBitmap9.GetAlphaBitmapParameters(VMR9AlphaBitmap)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerBitmap9.GetAlphaBitmapParameters(DirectShowLib.VMR9AlphaBitmap)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerBitmap9.SetAlphaBitmap(VMR9AlphaBitmap)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerBitmap9.SetAlphaBitmap(DirectShowLib.VMR9AlphaBitmap)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerBitmap9.UpdateAlphaBitmapParameters(VMR9AlphaBitmap)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerBitmap9.UpdateAlphaBitmapParameters(DirectShowLib.VMR9AlphaBitmap)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaFilter</name>
        <fullName>DirectShowLib.IMediaFilter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaFilter.GetClassID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IMediaFilter.GetClassID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaFilter.GetState(Int32, FilterState)</name>
            <fullName>System.Int32 DirectShowLib.IMediaFilter.GetState(System.Int32, DirectShowLib.FilterState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaFilter.GetSyncSource(IReferenceClock)</name>
            <fullName>System.Int32 DirectShowLib.IMediaFilter.GetSyncSource(DirectShowLib.IReferenceClock)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaFilter.Pause()</name>
            <fullName>System.Int32 DirectShowLib.IMediaFilter.Pause()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaFilter.Run(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaFilter.Run(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaFilter.SetSyncSource(IReferenceClock)</name>
            <fullName>System.Int32 DirectShowLib.IMediaFilter.SetSyncSource(DirectShowLib.IReferenceClock)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaFilter.Stop()</name>
            <fullName>System.Int32 DirectShowLib.IMediaFilter.Stop()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTuner</name>
        <fullName>DirectShowLib.IAMTuner</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTuner.ChannelMinMax(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.ChannelMinMax(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.get_Channel(Int32, AMTunerSubChannel, AMTunerSubChannel)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.get_Channel(System.Int32, DirectShowLib.AMTunerSubChannel, DirectShowLib.AMTunerSubChannel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.get_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.get_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.get_Mode(AMTunerModeType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.get_Mode(DirectShowLib.AMTunerModeType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.get_TuningSpace(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.get_TuningSpace(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.GetAvailableModes(AMTunerModeType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.GetAvailableModes(DirectShowLib.AMTunerModeType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.Logon(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.Logon(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.Logout()</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.Logout()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.put_Channel(Int32, AMTunerSubChannel, AMTunerSubChannel)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.put_Channel(System.Int32, DirectShowLib.AMTunerSubChannel, DirectShowLib.AMTunerSubChannel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.put_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.put_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.put_Mode(AMTunerModeType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.put_Mode(DirectShowLib.AMTunerModeType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.put_TuningSpace(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.put_TuningSpace(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.RegisterNotificationCallBack(IAMTunerNotification, AMTunerEventType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.RegisterNotificationCallBack(DirectShowLib.IAMTunerNotification, DirectShowLib.AMTunerEventType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.SignalPresent(AMTunerSignalStrength)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.SignalPresent(DirectShowLib.AMTunerSignalStrength)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTuner.UnRegisterNotificationCallBack(IAMTunerNotification)</name>
            <fullName>System.Int32 DirectShowLib.IAMTuner.UnRegisterNotificationCallBack(DirectShowLib.IAMTunerNotification)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IQueueCommand</name>
        <fullName>DirectShowLib.IQueueCommand</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IQueueCommand.InvokeAtPresentationTime(IDeferredCommand, Double, Guid, Int32, DispatchFlags, Int32, Object[], IntPtr, Int16)</name>
            <fullName>System.Int32 DirectShowLib.IQueueCommand.InvokeAtPresentationTime(DirectShowLib.IDeferredCommand, System.Double, System.Guid, System.Int32, DirectShowLib.DispatchFlags, System.Int32, System.Object[], System.IntPtr, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IQueueCommand.InvokeAtStreamTime(IDeferredCommand, Double, Guid, Int32, DispatchFlags, Int32, Object[], IntPtr, Int16)</name>
            <fullName>System.Int32 DirectShowLib.IQueueCommand.InvokeAtStreamTime(DirectShowLib.IDeferredCommand, System.Double, System.Guid, System.Int32, DirectShowLib.DispatchFlags, System.Int32, System.Object[], System.IntPtr, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>FilterMapper2</name>
        <fullName>DirectShowLib.FilterMapper2</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void FilterMapper2..ctor()</name>
            <fullName>System.Void DirectShowLib.FilterMapper2..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IKsTopologyInfo</name>
        <fullName>DirectShowLib.IKsTopologyInfo</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IKsTopologyInfo.CreateNodeInstance(Int32, Guid, Object)</name>
            <fullName>System.Int32 DirectShowLib.IKsTopologyInfo.CreateNodeInstance(System.Int32, System.Guid, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IKsTopologyInfo.get_Category(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IKsTopologyInfo.get_Category(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IKsTopologyInfo.get_ConnectionInfo(Int32, KSTopologyConnection)</name>
            <fullName>System.Int32 DirectShowLib.IKsTopologyInfo.get_ConnectionInfo(System.Int32, DirectShowLib.KSTopologyConnection)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IKsTopologyInfo.get_NodeName(Int32, IntPtr, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IKsTopologyInfo.get_NodeName(System.Int32, System.IntPtr, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IKsTopologyInfo.get_NodeType(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IKsTopologyInfo.get_NodeType(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IKsTopologyInfo.get_NumCategories(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IKsTopologyInfo.get_NumCategories(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IKsTopologyInfo.get_NumConnections(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IKsTopologyInfo.get_NumConnections(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IKsTopologyInfo.get_NumNodes(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IKsTopologyInfo.get_NumNodes(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVDecoderResolution</name>
        <fullName>DirectShowLib.DVDecoderResolution</fullName>
        <methods />
      </type>
      <type>
        <name>AMOverlayFX</name>
        <fullName>DirectShowLib.AMOverlayFX</fullName>
        <methods />
      </type>
      <type>
        <name>SmartTee</name>
        <fullName>DirectShowLib.SmartTee</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SmartTee..ctor()</name>
            <fullName>System.Void DirectShowLib.SmartTee..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRSurfaceAllocatorNotify9</name>
        <fullName>DirectShowLib.IVMRSurfaceAllocatorNotify9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRSurfaceAllocatorNotify9.AdviseSurfaceAllocator(IntPtr, IVMRSurfaceAllocator9)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorNotify9.AdviseSurfaceAllocator(System.IntPtr, DirectShowLib.IVMRSurfaceAllocator9)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocatorNotify9.AllocateSurfaceHelper(VMR9AllocationInfo, Int32, IntPtr[])</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorNotify9.AllocateSurfaceHelper(DirectShowLib.VMR9AllocationInfo, System.Int32, System.IntPtr[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocatorNotify9.ChangeD3DDevice(IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorNotify9.ChangeD3DDevice(System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocatorNotify9.NotifyEvent(EventCode, IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorNotify9.NotifyEvent(DirectShowLib.EventCode, System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocatorNotify9.SetD3DDevice(IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocatorNotify9.SetD3DDevice(System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BCSDeMux</name>
        <fullName>DirectShowLib.BCSDeMux</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>AMFilterMiscFlags</name>
        <fullName>DirectShowLib.AMFilterMiscFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IAMMediaContent</name>
        <fullName>DirectShowLib.IAMMediaContent</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMMediaContent.get_AuthorName(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_AuthorName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_BaseURL(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_BaseURL(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_Copyright(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_Copyright(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_Description(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_Description(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_LogoIconURL(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_LogoIconURL(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_LogoURL(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_LogoURL(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_MoreInfoBannerImage(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_MoreInfoBannerImage(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_MoreInfoBannerURL(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_MoreInfoBannerURL(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_MoreInfoText(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_MoreInfoText(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_MoreInfoURL(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_MoreInfoURL(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_Rating(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_Rating(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_Title(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_Title(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMMediaContent.get_WatermarkURL(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMMediaContent.get_WatermarkURL(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMStreamSelect</name>
        <fullName>DirectShowLib.IAMStreamSelect</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMStreamSelect.Count(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamSelect.Count(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStreamSelect.Enable(Int32, AMStreamSelectEnableFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamSelect.Enable(System.Int32, DirectShowLib.AMStreamSelectEnableFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStreamSelect.Info(Int32, AMMediaType, AMStreamSelectInfoFlags, Int32, Int32, String, Object, Object)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamSelect.Info(System.Int32, DirectShowLib.AMMediaType, DirectShowLib.AMStreamSelectInfoFlags, System.Int32, System.Int32, System.String, System.Object, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AVIDraw</name>
        <fullName>DirectShowLib.AVIDraw</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AVIDraw..ctor()</name>
            <fullName>System.Void DirectShowLib.AVIDraw..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IFilterGraph2</name>
        <fullName>DirectShowLib.IFilterGraph2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFilterGraph2.Abort()</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.Abort()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.AddFilter(IBaseFilter, String)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.AddFilter(DirectShowLib.IBaseFilter, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.AddSourceFilter(String, String, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.AddSourceFilter(System.String, System.String, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.AddSourceFilterForMoniker(IMoniker, IBindCtx, String, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.AddSourceFilterForMoniker(System.Runtime.InteropServices.ComTypes.IMoniker, System.Runtime.InteropServices.ComTypes.IBindCtx, System.String, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.Connect(IPin, IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.Connect(DirectShowLib.IPin, DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.ConnectDirect(IPin, IPin, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.ConnectDirect(DirectShowLib.IPin, DirectShowLib.IPin, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.Disconnect(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.Disconnect(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.EnumFilters(IEnumFilters)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.EnumFilters(DirectShowLib.IEnumFilters)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.FindFilterByName(String, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.FindFilterByName(System.String, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.Reconnect(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.Reconnect(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.ReconnectEx(IPin, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.ReconnectEx(DirectShowLib.IPin, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.RemoveFilter(IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.RemoveFilter(DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.Render(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.Render(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.RenderEx(IPin, AMRenderExFlags, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.RenderEx(DirectShowLib.IPin, DirectShowLib.AMRenderExFlags, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.RenderFile(String, String)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.RenderFile(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.SetDefaultSyncSource()</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.SetDefaultSyncSource()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.SetLogFile(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.SetLogFile(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterGraph2.ShouldOperationContinue()</name>
            <fullName>System.Int32 DirectShowLib.IFilterGraph2.ShouldOperationContinue()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VfwCompressDialogs</name>
        <fullName>DirectShowLib.VfwCompressDialogs</fullName>
        <methods />
      </type>
      <type>
        <name>IMediaEvent</name>
        <fullName>DirectShowLib.IMediaEvent</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaEvent.CancelDefaultHandling(EventCode)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEvent.CancelDefaultHandling(DirectShowLib.EventCode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEvent.FreeEventParams(EventCode, IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEvent.FreeEventParams(DirectShowLib.EventCode, System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEvent.GetEvent(EventCode, IntPtr, IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEvent.GetEvent(DirectShowLib.EventCode, System.IntPtr, System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEvent.GetEventHandle(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEvent.GetEventHandle(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEvent.RestoreDefaultHandling(EventCode)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEvent.RestoreDefaultHandling(DirectShowLib.EventCode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaEvent.WaitForCompletion(Int32, EventCode)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEvent.WaitForCompletion(System.Int32, DirectShowLib.EventCode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMDirectSound</name>
        <fullName>DirectShowLib.IAMDirectSound</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMDirectSound.GetDirectSoundInterface(Object)</name>
            <fullName>System.Int32 DirectShowLib.IAMDirectSound.GetDirectSoundInterface(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDirectSound.GetFocusWindow(IntPtr, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMDirectSound.GetFocusWindow(System.IntPtr, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDirectSound.GetPrimaryBufferInterface(Object)</name>
            <fullName>System.Int32 DirectShowLib.IAMDirectSound.GetPrimaryBufferInterface(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDirectSound.GetSecondaryBufferInterface(Object)</name>
            <fullName>System.Int32 DirectShowLib.IAMDirectSound.GetSecondaryBufferInterface(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDirectSound.ReleaseDirectSoundInterface(Object)</name>
            <fullName>System.Int32 DirectShowLib.IAMDirectSound.ReleaseDirectSoundInterface(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDirectSound.ReleasePrimaryBufferInterface(Object)</name>
            <fullName>System.Int32 DirectShowLib.IAMDirectSound.ReleasePrimaryBufferInterface(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDirectSound.ReleaseSecondaryBufferInterface(Object)</name>
            <fullName>System.Int32 DirectShowLib.IAMDirectSound.ReleaseSecondaryBufferInterface(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMDirectSound.SetFocusWindow(IntPtr, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMDirectSound.SetFocusWindow(System.IntPtr, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMRRenderPrefs</name>
        <fullName>DirectShowLib.VMRRenderPrefs</fullName>
        <methods />
      </type>
      <type>
        <name>FilterGraph</name>
        <fullName>DirectShowLib.FilterGraph</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void FilterGraph..ctor()</name>
            <fullName>System.Void DirectShowLib.FilterGraph..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMExtendedSeekingCapabilities</name>
        <fullName>DirectShowLib.AMExtendedSeekingCapabilities</fullName>
        <methods />
      </type>
      <type>
        <name>TextRender</name>
        <fullName>DirectShowLib.TextRender</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void TextRender..ctor()</name>
            <fullName>System.Void DirectShowLib.TextRender..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>PropertyPages</name>
        <fullName>DirectShowLib.PropertyPages</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>IVMRMixerBitmap</name>
        <fullName>DirectShowLib.IVMRMixerBitmap</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRMixerBitmap.GetAlphaBitmapParameters(VMRAlphaBitmap)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerBitmap.GetAlphaBitmapParameters(DirectShowLib.VMRAlphaBitmap)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerBitmap.SetAlphaBitmap(VMRAlphaBitmap)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerBitmap.SetAlphaBitmap(DirectShowLib.VMRAlphaBitmap)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerBitmap.UpdateAlphaBitmapParameters(VMRAlphaBitmap)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerBitmap.UpdateAlphaBitmapParameters(DirectShowLib.VMRAlphaBitmap)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TimeFormat</name>
        <fullName>DirectShowLib.TimeFormat</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>EventCode</name>
        <fullName>DirectShowLib.EventCode</fullName>
        <methods />
      </type>
      <type>
        <name>VMRGuid</name>
        <fullName>DirectShowLib.VMRGuid</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IAMGraphBuilderCallback</name>
        <fullName>DirectShowLib.IAMGraphBuilderCallback</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMGraphBuilderCallback.CreatedFilter(IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IAMGraphBuilderCallback.CreatedFilter(DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMGraphBuilderCallback.SelectedFilter(IMoniker)</name>
            <fullName>System.Int32 DirectShowLib.IAMGraphBuilderCallback.SelectedFilter(System.Runtime.InteropServices.ComTypes.IMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CMpegVideoCodec</name>
        <fullName>DirectShowLib.CMpegVideoCodec</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CMpegVideoCodec..ctor()</name>
            <fullName>System.Void DirectShowLib.CMpegVideoCodec..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9AlphaBitmap</name>
        <fullName>DirectShowLib.VMR9AlphaBitmap</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DirectShowPluginControl</name>
        <fullName>DirectShowLib.DirectShowPluginControl</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DirectShowPluginControl..ctor()</name>
            <fullName>System.Void DirectShowLib.DirectShowPluginControl..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IGetCapabilitiesKey</name>
        <fullName>DirectShowLib.IGetCapabilitiesKey</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IGetCapabilitiesKey.GetCapabilitiesKey(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IGetCapabilitiesKey.GetCapabilitiesKey(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>KSPropertySupport</name>
        <fullName>DirectShowLib.KSPropertySupport</fullName>
        <methods />
      </type>
      <type>
        <name>VMRDeinterlaceTech</name>
        <fullName>DirectShowLib.VMRDeinterlaceTech</fullName>
        <methods />
      </type>
      <type>
        <name>IAMResourceControl</name>
        <fullName>DirectShowLib.IAMResourceControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMResourceControl.Reserve(AMResCtlReserveFlags, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAMResourceControl.Reserve(DirectShowLib.AMResCtlReserveFlags, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>PTFilter</name>
        <fullName>DirectShowLib.PTFilter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void PTFilter..ctor()</name>
            <fullName>System.Void DirectShowLib.PTFilter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMPinFlowControl</name>
        <fullName>DirectShowLib.AMPinFlowControl</fullName>
        <methods />
      </type>
      <type>
        <name>DsFindPin</name>
        <fullName>DirectShowLib.DsFindPin</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>IPin DsFindPin.ByCategory(IBaseFilter, Guid, Int32)</name>
            <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByCategory(DirectShowLib.IBaseFilter, System.Guid, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IPin DsFindPin.ByConnectionStatus(IBaseFilter, PinConnectedStatus, Int32)</name>
            <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByConnectionStatus(DirectShowLib.IBaseFilter, DirectShowLib.PinConnectedStatus, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IPin DsFindPin.ByDirection(IBaseFilter, PinDirection, Int32)</name>
            <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByDirection(DirectShowLib.IBaseFilter, DirectShowLib.PinDirection, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IPin DsFindPin.ByName(IBaseFilter, String)</name>
            <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByName(DirectShowLib.IBaseFilter, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TAGTables</name>
        <fullName>DirectShowLib.TAGTables</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>MPEG2Filter</name>
        <fullName>DirectShowLib.MPEG2Filter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG2Filter..ctor()</name>
            <fullName>System.Void DirectShowLib.MPEG2Filter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMCameraControl</name>
        <fullName>DirectShowLib.IAMCameraControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMCameraControl.Get(CameraControlProperty, Int32, CameraControlFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMCameraControl.Get(DirectShowLib.CameraControlProperty, System.Int32, DirectShowLib.CameraControlFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMCameraControl.GetRange(CameraControlProperty, Int32, Int32, Int32, Int32, CameraControlFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMCameraControl.GetRange(DirectShowLib.CameraControlProperty, System.Int32, System.Int32, System.Int32, System.Int32, DirectShowLib.CameraControlFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMCameraControl.Set(CameraControlProperty, Int32, CameraControlFlags)</name>
            <fullName>System.Int32 DirectShowLib.IAMCameraControl.Set(DirectShowLib.CameraControlProperty, System.Int32, DirectShowLib.CameraControlFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SAMIParser</name>
        <fullName>DirectShowLib.SAMIParser</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SAMIParser..ctor()</name>
            <fullName>System.Void DirectShowLib.SAMIParser..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG2Demultiplexer_NoClock</name>
        <fullName>DirectShowLib.MPEG2Demultiplexer_NoClock</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG2Demultiplexer_NoClock..ctor()</name>
            <fullName>System.Void DirectShowLib.MPEG2Demultiplexer_NoClock..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVVideoCodec</name>
        <fullName>DirectShowLib.DVVideoCodec</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVVideoCodec..ctor()</name>
            <fullName>System.Void DirectShowLib.DVVideoCodec..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaSeeking</name>
        <fullName>DirectShowLib.IMediaSeeking</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaSeeking.CheckCapabilities(AMSeekingSeekingCapabilities)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.CheckCapabilities(DirectShowLib.AMSeekingSeekingCapabilities)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.ConvertTimeFormat(Int64, DsGuid, Int64, DsGuid)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.ConvertTimeFormat(System.Int64, DirectShowLib.DsGuid, System.Int64, DirectShowLib.DsGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.GetAvailable(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.GetAvailable(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.GetCapabilities(AMSeekingSeekingCapabilities)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.GetCapabilities(DirectShowLib.AMSeekingSeekingCapabilities)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.GetCurrentPosition(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.GetCurrentPosition(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.GetDuration(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.GetDuration(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.GetPositions(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.GetPositions(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.GetPreroll(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.GetPreroll(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.GetRate(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.GetRate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.GetStopPosition(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.GetStopPosition(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.GetTimeFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.GetTimeFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.IsFormatSupported(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.IsFormatSupported(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.IsUsingTimeFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.IsUsingTimeFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.QueryPreferredFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.QueryPreferredFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.SetPositions(DsLong, AMSeekingSeekingFlags, DsLong, AMSeekingSeekingFlags)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.SetPositions(DirectShowLib.DsLong, DirectShowLib.AMSeekingSeekingFlags, DirectShowLib.DsLong, DirectShowLib.AMSeekingSeekingFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.SetRate(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.SetRate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSeeking.SetTimeFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSeeking.SetTimeFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>PinCategory</name>
        <fullName>DirectShowLib.PinCategory</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>IMediaSample2</name>
        <fullName>DirectShowLib.IMediaSample2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaSample2.GetActualDataLength()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.GetActualDataLength()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.GetMediaTime(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.GetMediaTime(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.GetMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.GetMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.GetPointer(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.GetPointer(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.GetProperties(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.GetProperties(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.GetSize()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.GetSize()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.GetTime(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.GetTime(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.IsDiscontinuity()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.IsDiscontinuity()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.IsPreroll()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.IsPreroll()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.IsSyncPoint()</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.IsSyncPoint()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.SetActualDataLength(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.SetActualDataLength(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.SetDiscontinuity(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.SetDiscontinuity(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.SetMediaTime(DsLong, DsLong)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.SetMediaTime(DirectShowLib.DsLong, DirectShowLib.DsLong)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.SetMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.SetMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.SetPreroll(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.SetPreroll(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.SetProperties(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.SetProperties(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.SetSyncPoint(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.SetSyncPoint(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaSample2.SetTime(DsLong, DsLong)</name>
            <fullName>System.Int32 DirectShowLib.IMediaSample2.SetTime(DirectShowLib.DsLong, DirectShowLib.DsLong)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IFilterChain</name>
        <fullName>DirectShowLib.IFilterChain</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFilterChain.PauseChain(IBaseFilter, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterChain.PauseChain(DirectShowLib.IBaseFilter, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterChain.RemoveChain(IBaseFilter, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterChain.RemoveChain(DirectShowLib.IBaseFilter, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterChain.StartChain(IBaseFilter, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterChain.StartChain(DirectShowLib.IBaseFilter, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterChain.StopChain(IBaseFilter, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.IFilterChain.StopChain(DirectShowLib.IBaseFilter, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMemAllocatorNotifyCallbackTemp</name>
        <fullName>DirectShowLib.IMemAllocatorNotifyCallbackTemp</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMemAllocatorNotifyCallbackTemp.NotifyRelease()</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocatorNotifyCallbackTemp.NotifyRelease()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRFilterConfig9</name>
        <fullName>DirectShowLib.IVMRFilterConfig9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRFilterConfig9.GetNumberOfStreams(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig9.GetNumberOfStreams(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig9.GetRenderingMode(VMR9Mode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig9.GetRenderingMode(DirectShowLib.VMR9Mode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig9.GetRenderingPrefs(VMR9RenderPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig9.GetRenderingPrefs(DirectShowLib.VMR9RenderPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig9.SetImageCompositor(IVMRImageCompositor9)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig9.SetImageCompositor(DirectShowLib.IVMRImageCompositor9)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig9.SetNumberOfStreams(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig9.SetNumberOfStreams(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig9.SetRenderingMode(VMR9Mode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig9.SetRenderingMode(DirectShowLib.VMR9Mode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRFilterConfig9.SetRenderingPrefs(VMR9RenderPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRFilterConfig9.SetRenderingPrefs(DirectShowLib.VMR9RenderPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtDeviceCaps</name>
        <fullName>DirectShowLib.ExtDeviceCaps</fullName>
        <methods />
      </type>
      <type>
        <name>IPin</name>
        <fullName>DirectShowLib.IPin</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPin.BeginFlush()</name>
            <fullName>System.Int32 DirectShowLib.IPin.BeginFlush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.Connect(IPin, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IPin.Connect(DirectShowLib.IPin, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.ConnectedTo(IPin)</name>
            <fullName>System.Int32 DirectShowLib.IPin.ConnectedTo(DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.ConnectionMediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IPin.ConnectionMediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.Disconnect()</name>
            <fullName>System.Int32 DirectShowLib.IPin.Disconnect()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.EndFlush()</name>
            <fullName>System.Int32 DirectShowLib.IPin.EndFlush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.EndOfStream()</name>
            <fullName>System.Int32 DirectShowLib.IPin.EndOfStream()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.EnumMediaTypes(IEnumMediaTypes)</name>
            <fullName>System.Int32 DirectShowLib.IPin.EnumMediaTypes(DirectShowLib.IEnumMediaTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.NewSegment(Int64, Int64, Double)</name>
            <fullName>System.Int32 DirectShowLib.IPin.NewSegment(System.Int64, System.Int64, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.QueryAccept(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IPin.QueryAccept(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.QueryDirection(PinDirection)</name>
            <fullName>System.Int32 DirectShowLib.IPin.QueryDirection(DirectShowLib.PinDirection)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.QueryId(String)</name>
            <fullName>System.Int32 DirectShowLib.IPin.QueryId(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.QueryInternalConnections(IPin[], Int32)</name>
            <fullName>System.Int32 DirectShowLib.IPin.QueryInternalConnections(DirectShowLib.IPin[], System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.QueryPinInfo(PinInfo)</name>
            <fullName>System.Int32 DirectShowLib.IPin.QueryPinInfo(DirectShowLib.PinInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPin.ReceiveConnection(IPin, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IPin.ReceiveConnection(DirectShowLib.IPin, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DispatchFlags</name>
        <fullName>DirectShowLib.DispatchFlags</fullName>
        <methods />
      </type>
      <type>
        <name>VMR9VideoStreamInfo</name>
        <fullName>DirectShowLib.VMR9VideoStreamInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>EMTMarshaler</name>
        <fullName>DirectShowLib.EMTMarshaler</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void EMTMarshaler..ctor(String)</name>
            <fullName>System.Void DirectShowLib.EMTMarshaler..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ICustomMarshaler EMTMarshaler.GetInstance(String)</name>
            <fullName>System.Runtime.InteropServices.ICustomMarshaler DirectShowLib.EMTMarshaler.GetInstance(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 EMTMarshaler.GetNativeDataSize()</name>
            <fullName>System.Int32 DirectShowLib.EMTMarshaler.GetNativeDataSize()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Object EMTMarshaler.MarshalNativeToManaged(IntPtr)</name>
            <fullName>System.Object DirectShowLib.EMTMarshaler.MarshalNativeToManaged(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MixerData</name>
        <fullName>DirectShowLib.MixerData</fullName>
        <methods />
      </type>
      <type>
        <name>IAMStreamControl</name>
        <fullName>DirectShowLib.IAMStreamControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMStreamControl.GetInfo(AMStreamInfo)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamControl.GetInfo(DirectShowLib.AMStreamInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStreamControl.StartAt(DsLong, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamControl.StartAt(DirectShowLib.DsLong, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStreamControl.StopAt(DsLong, Boolean, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamControl.StopAt(DirectShowLib.DsLong, System.Boolean, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9MixerPrefs</name>
        <fullName>DirectShowLib.VMR9MixerPrefs</fullName>
        <methods />
      </type>
      <type>
        <name>DvbSiParser</name>
        <fullName>DirectShowLib.DvbSiParser</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DvbSiParser..ctor()</name>
            <fullName>System.Void DirectShowLib.DvbSiParser..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMAudioInputMixer</name>
        <fullName>DirectShowLib.IAMAudioInputMixer</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMAudioInputMixer.get_Bass(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.get_Bass(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.get_BassRange(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.get_BassRange(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.get_Enable(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.get_Enable(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.get_Loudness(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.get_Loudness(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.get_MixLevel(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.get_MixLevel(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.get_Mono(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.get_Mono(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.get_Pan(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.get_Pan(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.get_Treble(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.get_Treble(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.get_TrebleRange(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.get_TrebleRange(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.put_Bass(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.put_Bass(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.put_Enable(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.put_Enable(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.put_Loudness(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.put_Loudness(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.put_MixLevel(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.put_MixLevel(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.put_Mono(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.put_Mono(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.put_Pan(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.put_Pan(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAudioInputMixer.put_Treble(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMAudioInputMixer.put_Treble(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TunerInputType</name>
        <fullName>DirectShowLib.TunerInputType</fullName>
        <methods />
      </type>
      <type>
        <name>FGControl</name>
        <fullName>DirectShowLib.FGControl</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void FGControl..ctor()</name>
            <fullName>System.Void DirectShowLib.FGControl..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9AlphaBitmapFlags</name>
        <fullName>DirectShowLib.VMR9AlphaBitmapFlags</fullName>
        <methods />
      </type>
      <type>
        <name>AsyncReader</name>
        <fullName>DirectShowLib.AsyncReader</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AsyncReader..ctor()</name>
            <fullName>System.Void DirectShowLib.AsyncReader..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDeferredCommand</name>
        <fullName>DirectShowLib.IDeferredCommand</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDeferredCommand.Cancel()</name>
            <fullName>System.Int32 DirectShowLib.IDeferredCommand.Cancel()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDeferredCommand.Confidence(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IDeferredCommand.Confidence(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDeferredCommand.GetHResult(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IDeferredCommand.GetHResult(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDeferredCommand.Postpone(Double)</name>
            <fullName>System.Int32 DirectShowLib.IDeferredCommand.Postpone(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>KSMultipleItem</name>
        <fullName>DirectShowLib.KSMultipleItem</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void KSMultipleItem..ctor()</name>
            <fullName>System.Void DirectShowLib.KSMultipleItem..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IIPDVDec</name>
        <fullName>DirectShowLib.IIPDVDec</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IIPDVDec.get_IPDisplay(DVDecoderResolution)</name>
            <fullName>System.Int32 DirectShowLib.IIPDVDec.get_IPDisplay(DirectShowLib.DVDecoderResolution)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IIPDVDec.put_IPDisplay(DVDecoderResolution)</name>
            <fullName>System.Int32 DirectShowLib.IIPDVDec.put_IPDisplay(DirectShowLib.DVDecoderResolution)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVPNotify2</name>
        <fullName>DirectShowLib.IVPNotify2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVPNotify2.GetDeinterlaceMode(AMVP_Mode)</name>
            <fullName>System.Int32 DirectShowLib.IVPNotify2.GetDeinterlaceMode(DirectShowLib.AMVP_Mode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVPNotify2.GetVPSyncMaster(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IVPNotify2.GetVPSyncMaster(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVPNotify2.RenegotiateVPParameters()</name>
            <fullName>System.Int32 DirectShowLib.IVPNotify2.RenegotiateVPParameters()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVPNotify2.SetDeinterlaceMode(AMVP_Mode)</name>
            <fullName>System.Int32 DirectShowLib.IVPNotify2.SetDeinterlaceMode(DirectShowLib.AMVP_Mode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVPNotify2.SetVPSyncMaster(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IVPNotify2.SetVPSyncMaster(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMExtendedSeeking</name>
        <fullName>DirectShowLib.IAMExtendedSeeking</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMExtendedSeeking.get_CurrentMarker(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtendedSeeking.get_CurrentMarker(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtendedSeeking.get_ExSeekCapabilities(AMExtendedSeekingCapabilities)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtendedSeeking.get_ExSeekCapabilities(DirectShowLib.AMExtendedSeekingCapabilities)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtendedSeeking.get_MarkerCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtendedSeeking.get_MarkerCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtendedSeeking.get_PlaybackSpeed(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtendedSeeking.get_PlaybackSpeed(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtendedSeeking.GetMarkerName(Int32, String)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtendedSeeking.GetMarkerName(System.Int32, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtendedSeeking.GetMarkerTime(Int32, Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtendedSeeking.GetMarkerTime(System.Int32, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtendedSeeking.put_PlaybackSpeed(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtendedSeeking.put_PlaybackSpeed(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRSurfaceAllocator9</name>
        <fullName>DirectShowLib.IVMRSurfaceAllocator9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRSurfaceAllocator9.AdviseNotify(IVMRSurfaceAllocatorNotify9)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocator9.AdviseNotify(DirectShowLib.IVMRSurfaceAllocatorNotify9)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocator9.GetSurface(IntPtr, Int32, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocator9.GetSurface(System.IntPtr, System.Int32, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocator9.InitializeDevice(IntPtr, VMR9AllocationInfo, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocator9.InitializeDevice(System.IntPtr, DirectShowLib.VMR9AllocationInfo, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRSurfaceAllocator9.TerminateDevice(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRSurfaceAllocator9.TerminateDevice(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMOverlayFX</name>
        <fullName>DirectShowLib.IAMOverlayFX</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMOverlayFX.GetOverlayFX(AMOverlayFX)</name>
            <fullName>System.Int32 DirectShowLib.IAMOverlayFX.GetOverlayFX(DirectShowLib.AMOverlayFX)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMOverlayFX.QueryOverlayFXCaps(AMOverlayFX)</name>
            <fullName>System.Int32 DirectShowLib.IAMOverlayFX.QueryOverlayFXCaps(DirectShowLib.AMOverlayFX)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMOverlayFX.SetOverlayFX(AMOverlayFX)</name>
            <fullName>System.Int32 DirectShowLib.IAMOverlayFX.SetOverlayFX(DirectShowLib.AMOverlayFX)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Merit</name>
        <fullName>DirectShowLib.Merit</fullName>
        <methods />
      </type>
      <type>
        <name>IMediaEventSink</name>
        <fullName>DirectShowLib.IMediaEventSink</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaEventSink.Notify(EventCode, IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IMediaEventSink.Notify(DirectShowLib.EventCode, System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MediaPropertyBag</name>
        <fullName>DirectShowLib.MediaPropertyBag</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MediaPropertyBag..ctor()</name>
            <fullName>System.Void DirectShowLib.MediaPropertyBag..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CaptureGraphBuilder2</name>
        <fullName>DirectShowLib.CaptureGraphBuilder2</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CaptureGraphBuilder2..ctor()</name>
            <fullName>System.Void DirectShowLib.CaptureGraphBuilder2..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVEnc</name>
        <fullName>DirectShowLib.IDVEnc</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVEnc.get_IFormatResolution(DVEncoderVideoFormat, DVEncoderFormat, DVEncoderResolution, OABool, DVInfo)</name>
            <fullName>System.Int32 DirectShowLib.IDVEnc.get_IFormatResolution(DirectShowLib.DVEncoderVideoFormat, DirectShowLib.DVEncoderFormat, DirectShowLib.DVEncoderResolution, DirectShowLib.OABool, DirectShowLib.DVInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVEnc.put_IFormatResolution(DVEncoderVideoFormat, DVEncoderFormat, DVEncoderResolution, OABool, DVInfo)</name>
            <fullName>System.Int32 DirectShowLib.IDVEnc.put_IFormatResolution(DirectShowLib.DVEncoderVideoFormat, DirectShowLib.DVEncoderFormat, DirectShowLib.DVEncoderResolution, DirectShowLib.OABool, DirectShowLib.DVInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMRenderExFlags</name>
        <fullName>DirectShowLib.AMRenderExFlags</fullName>
        <methods />
      </type>
      <type>
        <name>Line21Decoder2</name>
        <fullName>DirectShowLib.Line21Decoder2</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Line21Decoder2..ctor()</name>
            <fullName>System.Void DirectShowLib.Line21Decoder2..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMLine21CCService</name>
        <fullName>DirectShowLib.AMLine21CCService</fullName>
        <methods />
      </type>
      <type>
        <name>DvdGraphBuilder</name>
        <fullName>DirectShowLib.DvdGraphBuilder</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DvdGraphBuilder..ctor()</name>
            <fullName>System.Void DirectShowLib.DvdGraphBuilder..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMSample2Properties</name>
        <fullName>DirectShowLib.AMSample2Properties</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AMSample2Properties..ctor()</name>
            <fullName>System.Void DirectShowLib.AMSample2Properties..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMemAllocator</name>
        <fullName>DirectShowLib.IMemAllocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMemAllocator.Commit()</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocator.Commit()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocator.Decommit()</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocator.Decommit()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocator.GetBuffer(IMediaSample, Int64, Int64, AMGBF)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocator.GetBuffer(DirectShowLib.IMediaSample, System.Int64, System.Int64, DirectShowLib.AMGBF)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocator.GetProperties(AllocatorProperties)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocator.GetProperties(DirectShowLib.AllocatorProperties)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocator.ReleaseBuffer(IMediaSample)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocator.ReleaseBuffer(DirectShowLib.IMediaSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocator.SetProperties(AllocatorProperties, AllocatorProperties)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocator.SetProperties(DirectShowLib.AllocatorProperties, DirectShowLib.AllocatorProperties)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMVideoFlag</name>
        <fullName>DirectShowLib.AMVideoFlag</fullName>
        <methods />
      </type>
      <type>
        <name>DSMCCFilterOptions</name>
        <fullName>DirectShowLib.DSMCCFilterOptions</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>ICreateDevEnum</name>
        <fullName>DirectShowLib.ICreateDevEnum</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ICreateDevEnum.CreateClassEnumerator(Guid, IEnumMoniker, CDef)</name>
            <fullName>System.Int32 DirectShowLib.ICreateDevEnum.CreateClassEnumerator(System.Guid, System.Runtime.InteropServices.ComTypes.IEnumMoniker, DirectShowLib.CDef)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VideoPortManager</name>
        <fullName>DirectShowLib.VideoPortManager</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VideoPortManager..ctor()</name>
            <fullName>System.Void DirectShowLib.VideoPortManager..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsInt</name>
        <fullName>DirectShowLib.DsInt</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DsInt..ctor(Int32)</name>
            <fullName>System.Void DirectShowLib.DsInt..ctor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DsInt DsInt.FromInt32(Int32)</name>
            <fullName>DirectShowLib.DsInt DirectShowLib.DsInt.FromInt32(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DsInt.GetHashCode()</name>
            <fullName>System.Int32 DirectShowLib.DsInt.GetHashCode()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DsInt.ToInt32()</name>
            <fullName>System.Int32 DirectShowLib.DsInt.ToInt32()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsInt.ToString()</name>
            <fullName>System.String DirectShowLib.DsInt.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMFilterMiscFlags</name>
        <fullName>DirectShowLib.IAMFilterMiscFlags</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMFilterMiscFlags.GetMiscFlags()</name>
            <fullName>System.Int32 DirectShowLib.IAMFilterMiscFlags.GetMiscFlags()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVB_EIT_FILTER_OPTIONS</name>
        <fullName>DirectShowLib.DVB_EIT_FILTER_OPTIONS</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVB_EIT_FILTER_OPTIONS..ctor()</name>
            <fullName>System.Void DirectShowLib.DVB_EIT_FILTER_OPTIONS..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferPropertyHandler</name>
        <fullName>DirectShowLib.StreamBufferPropertyHandler</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void StreamBufferPropertyHandler..ctor()</name>
            <fullName>System.Void DirectShowLib.StreamBufferPropertyHandler..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsDevice</name>
        <fullName>DirectShowLib.DsDevice</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DsDevice..ctor(IMoniker)</name>
            <fullName>System.Void DirectShowLib.DsDevice..ctor(System.Runtime.InteropServices.ComTypes.IMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsDevice.Dispose()</name>
            <fullName>System.Void DirectShowLib.DsDevice.Dispose()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DsDevice[] DsDevice.GetDevicesOfCat(Guid)</name>
            <fullName>DirectShowLib.DsDevice[] DirectShowLib.DsDevice.GetDevicesOfCat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsDevice.GetPropBagValue(String)</name>
            <fullName>System.String DirectShowLib.DsDevice.GetPropBagValue(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>Object</name>
                  <baseName>System.Object</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>77</startOffSet>
                <endOffSet>82</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
        </methods>
      </type>
      <type>
        <name>ICaptureGraphBuilder2</name>
        <fullName>DirectShowLib.ICaptureGraphBuilder2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ICaptureGraphBuilder2.AllocCapFile(String, Int64)</name>
            <fullName>System.Int32 DirectShowLib.ICaptureGraphBuilder2.AllocCapFile(System.String, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICaptureGraphBuilder2.ControlStream(Guid, DsGuid, IBaseFilter, DsLong, DsLong, Int16, Int16)</name>
            <fullName>System.Int32 DirectShowLib.ICaptureGraphBuilder2.ControlStream(System.Guid, DirectShowLib.DsGuid, DirectShowLib.IBaseFilter, DirectShowLib.DsLong, DirectShowLib.DsLong, System.Int16, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICaptureGraphBuilder2.CopyCaptureFile(String, String, Boolean, IAMCopyCaptureFileProgress)</name>
            <fullName>System.Int32 DirectShowLib.ICaptureGraphBuilder2.CopyCaptureFile(System.String, System.String, System.Boolean, DirectShowLib.IAMCopyCaptureFileProgress)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICaptureGraphBuilder2.FindInterface(DsGuid, DsGuid, IBaseFilter, Guid, Object)</name>
            <fullName>System.Int32 DirectShowLib.ICaptureGraphBuilder2.FindInterface(DirectShowLib.DsGuid, DirectShowLib.DsGuid, DirectShowLib.IBaseFilter, System.Guid, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICaptureGraphBuilder2.FindPin(Object, PinDirection, DsGuid, DsGuid, Boolean, Int32, IPin)</name>
            <fullName>System.Int32 DirectShowLib.ICaptureGraphBuilder2.FindPin(System.Object, DirectShowLib.PinDirection, DirectShowLib.DsGuid, DirectShowLib.DsGuid, System.Boolean, System.Int32, DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICaptureGraphBuilder2.GetFiltergraph(IGraphBuilder)</name>
            <fullName>System.Int32 DirectShowLib.ICaptureGraphBuilder2.GetFiltergraph(DirectShowLib.IGraphBuilder)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICaptureGraphBuilder2.RenderStream(DsGuid, DsGuid, Object, IBaseFilter, IBaseFilter)</name>
            <fullName>System.Int32 DirectShowLib.ICaptureGraphBuilder2.RenderStream(DirectShowLib.DsGuid, DirectShowLib.DsGuid, System.Object, DirectShowLib.IBaseFilter, DirectShowLib.IBaseFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICaptureGraphBuilder2.SetFiltergraph(IGraphBuilder)</name>
            <fullName>System.Int32 DirectShowLib.ICaptureGraphBuilder2.SetFiltergraph(DirectShowLib.IGraphBuilder)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICaptureGraphBuilder2.SetOutputFileName(Guid, String, IBaseFilter, IFileSinkFilter)</name>
            <fullName>System.Int32 DirectShowLib.ICaptureGraphBuilder2.SetOutputFileName(System.Guid, System.String, DirectShowLib.IBaseFilter, DirectShowLib.IFileSinkFilter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ASFWriterConfig</name>
        <fullName>DirectShowLib.ASFWriterConfig</fullName>
        <methods />
      </type>
      <type>
        <name>AMPropertyPin</name>
        <fullName>DirectShowLib.AMPropertyPin</fullName>
        <methods />
      </type>
      <type>
        <name>MPEGContext</name>
        <fullName>DirectShowLib.MPEGContext</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEGContext..ctor()</name>
            <fullName>System.Void DirectShowLib.MPEGContext..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MOVReader</name>
        <fullName>DirectShowLib.MOVReader</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MOVReader..ctor()</name>
            <fullName>System.Void DirectShowLib.MOVReader..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEGWinSock</name>
        <fullName>DirectShowLib.MPEGWinSock</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>VMR9DeinterlacePrefs</name>
        <fullName>DirectShowLib.VMR9DeinterlacePrefs</fullName>
        <methods />
      </type>
      <type>
        <name>PinDirection</name>
        <fullName>DirectShowLib.PinDirection</fullName>
        <methods />
      </type>
      <type>
        <name>DsMarshaler</name>
        <fullName>DirectShowLib.DsMarshaler</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DsMarshaler..ctor(String)</name>
            <fullName>System.Void DirectShowLib.DsMarshaler..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsMarshaler.CleanUpManagedData(Object)</name>
            <fullName>System.Void DirectShowLib.DsMarshaler.CleanUpManagedData(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsMarshaler.CleanUpNativeData(IntPtr)</name>
            <fullName>System.Void DirectShowLib.DsMarshaler.CleanUpNativeData(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DsMarshaler.GetNativeDataSize()</name>
            <fullName>System.Int32 DirectShowLib.DsMarshaler.GetNativeDataSize()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IntPtr DsMarshaler.MarshalManagedToNative(Object)</name>
            <fullName>System.IntPtr DirectShowLib.DsMarshaler.MarshalManagedToNative(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Object DsMarshaler.MarshalNativeToManaged(IntPtr)</name>
            <fullName>System.Object DirectShowLib.DsMarshaler.MarshalNativeToManaged(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtDevicePort</name>
        <fullName>DirectShowLib.ExtDevicePort</fullName>
        <methods />
      </type>
      <type>
        <name>FilterCategory</name>
        <fullName>DirectShowLib.FilterCategory</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>IKsPin</name>
        <fullName>DirectShowLib.IKsPin</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IKsPin.KsQueryMediums(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IKsPin.KsQueryMediums(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>URLReader</name>
        <fullName>DirectShowLib.URLReader</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void URLReader..ctor()</name>
            <fullName>System.Void DirectShowLib.URLReader..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferSource</name>
        <fullName>DirectShowLib.StreamBufferSource</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void StreamBufferSource..ctor()</name>
            <fullName>System.Void DirectShowLib.StreamBufferSource..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IConfigInterleaving</name>
        <fullName>DirectShowLib.IConfigInterleaving</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IConfigInterleaving.get_Interleaving(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IConfigInterleaving.get_Interleaving(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigInterleaving.get_Mode(InterleavingMode)</name>
            <fullName>System.Int32 DirectShowLib.IConfigInterleaving.get_Mode(DirectShowLib.InterleavingMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigInterleaving.put_Interleaving(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IConfigInterleaving.put_Interleaving(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigInterleaving.put_Mode(InterleavingMode)</name>
            <fullName>System.Int32 DirectShowLib.IConfigInterleaving.put_Mode(DirectShowLib.InterleavingMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ModexRenderer</name>
        <fullName>DirectShowLib.ModexRenderer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ModexRenderer..ctor()</name>
            <fullName>System.Void DirectShowLib.ModexRenderer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaPropertyBag</name>
        <fullName>DirectShowLib.IMediaPropertyBag</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaPropertyBag.EnumProperty(Int32, Object, Object)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPropertyBag.EnumProperty(System.Int32, System.Object, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPropertyBag.Read(String, Object, IErrorLog)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPropertyBag.Read(System.String, System.Object, DirectShowLib.IErrorLog)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPropertyBag.Write(String, Object)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPropertyBag.Write(System.String, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AnalogVideoStandard</name>
        <fullName>DirectShowLib.AnalogVideoStandard</fullName>
        <methods />
      </type>
      <type>
        <name>VPObject</name>
        <fullName>DirectShowLib.VPObject</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VPObject..ctor()</name>
            <fullName>System.Void DirectShowLib.VPObject..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMTVAudio</name>
        <fullName>DirectShowLib.IAMTVAudio</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTVAudio.get_TVAudioMode(TVAudioMode)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVAudio.get_TVAudioMode(DirectShowLib.TVAudioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVAudio.GetAvailableTVAudioModes(TVAudioMode)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVAudio.GetAvailableTVAudioModes(DirectShowLib.TVAudioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVAudio.GetHardwareSupportedTVAudioModes(TVAudioMode)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVAudio.GetHardwareSupportedTVAudioModes(DirectShowLib.TVAudioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVAudio.put_TVAudioMode(TVAudioMode)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVAudio.put_TVAudioMode(DirectShowLib.TVAudioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVAudio.RegisterNotificationCallBack(IAMTunerNotification, AMTVAudioEventType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVAudio.RegisterNotificationCallBack(DirectShowLib.IAMTunerNotification, DirectShowLib.AMTVAudioEventType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVAudio.UnRegisterNotificationCallBack(IAMTunerNotification)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVAudio.UnRegisterNotificationCallBack(DirectShowLib.IAMTunerNotification)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DtvCcFilter</name>
        <fullName>DirectShowLib.DtvCcFilter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DtvCcFilter..ctor()</name>
            <fullName>System.Void DirectShowLib.DtvCcFilter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CameraControlFlags</name>
        <fullName>DirectShowLib.CameraControlFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IVMRMixerControl9</name>
        <fullName>DirectShowLib.IVMRMixerControl9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRMixerControl9.GetAlpha(Int32, Single)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.GetAlpha(System.Int32, System.Single)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.GetBackgroundClr(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.GetBackgroundClr(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.GetMixingPrefs(VMR9MixerPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.GetMixingPrefs(DirectShowLib.VMR9MixerPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.GetOutputRect(Int32, NormalizedRect)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.GetOutputRect(System.Int32, DirectShowLib.NormalizedRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.GetProcAmpControl(Int32, VMR9ProcAmpControl)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.GetProcAmpControl(System.Int32, DirectShowLib.VMR9ProcAmpControl)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.GetProcAmpControlRange(Int32, VMR9ProcAmpControlRange)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.GetProcAmpControlRange(System.Int32, DirectShowLib.VMR9ProcAmpControlRange)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.GetZOrder(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.GetZOrder(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.SetAlpha(Int32, Single)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.SetAlpha(System.Int32, System.Single)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.SetBackgroundClr(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.SetBackgroundClr(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.SetMixingPrefs(VMR9MixerPrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.SetMixingPrefs(DirectShowLib.VMR9MixerPrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.SetOutputRect(Int32, NormalizedRect)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.SetOutputRect(System.Int32, DirectShowLib.NormalizedRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.SetProcAmpControl(Int32, VMR9ProcAmpControl)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.SetProcAmpControl(System.Int32, DirectShowLib.VMR9ProcAmpControl)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMixerControl9.SetZOrder(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMixerControl9.SetZOrder(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>PinConnectedStatus</name>
        <fullName>DirectShowLib.PinConnectedStatus</fullName>
        <methods />
      </type>
      <type>
        <name>IMediaControl</name>
        <fullName>DirectShowLib.IMediaControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaControl.AddSourceFilter(String, Object)</name>
            <fullName>System.Int32 DirectShowLib.IMediaControl.AddSourceFilter(System.String, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaControl.get_FilterCollection(Object)</name>
            <fullName>System.Int32 DirectShowLib.IMediaControl.get_FilterCollection(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaControl.get_RegFilterCollection(Object)</name>
            <fullName>System.Int32 DirectShowLib.IMediaControl.get_RegFilterCollection(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaControl.GetState(Int32, FilterState)</name>
            <fullName>System.Int32 DirectShowLib.IMediaControl.GetState(System.Int32, DirectShowLib.FilterState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaControl.Pause()</name>
            <fullName>System.Int32 DirectShowLib.IMediaControl.Pause()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaControl.RenderFile(String)</name>
            <fullName>System.Int32 DirectShowLib.IMediaControl.RenderFile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaControl.Run()</name>
            <fullName>System.Int32 DirectShowLib.IMediaControl.Run()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaControl.Stop()</name>
            <fullName>System.Int32 DirectShowLib.IMediaControl.Stop()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaControl.StopWhenReady()</name>
            <fullName>System.Int32 DirectShowLib.IMediaControl.StopWhenReady()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsShort</name>
        <fullName>DirectShowLib.DsShort</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DsShort..ctor(Int16)</name>
            <fullName>System.Void DirectShowLib.DsShort..ctor(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DsShort DsShort.FromInt16(Int16)</name>
            <fullName>DirectShowLib.DsShort DirectShowLib.DsShort.FromInt16(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DsShort.GetHashCode()</name>
            <fullName>System.Int32 DirectShowLib.DsShort.GetHashCode()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int16 DsShort.ToInt16()</name>
            <fullName>System.Int16 DirectShowLib.DsShort.ToInt16()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsShort.ToString()</name>
            <fullName>System.String DirectShowLib.DsShort.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VideoControlFlags</name>
        <fullName>DirectShowLib.VideoControlFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IAMExtTransport</name>
        <fullName>DirectShowLib.IAMExtTransport</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMExtTransport.get_AntiClogControl(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.get_AntiClogControl(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.get_EditStart(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.get_EditStart(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.get_LocalControl(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.get_LocalControl(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.get_MediaState(ExtTransportMediaStates)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.get_MediaState(DirectShowLib.ExtTransportMediaStates)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.get_Mode(ExtTransportModes)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.get_Mode(DirectShowLib.ExtTransportModes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.get_Rate(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.get_Rate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.GetBump(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.GetBump(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.GetCapability(ExtTransportCaps, Int32, Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.GetCapability(DirectShowLib.ExtTransportCaps, System.Int32, System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.GetChase(Int32, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.GetChase(System.Int32, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.GetEditProperty(Int32, ExtTransportEdit, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.GetEditProperty(System.Int32, DirectShowLib.ExtTransportEdit, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.GetEditPropertySet(Int32, ExtTransportEdit)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.GetEditPropertySet(System.Int32, DirectShowLib.ExtTransportEdit)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.GetStatus(ExtTransportStatus, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.GetStatus(DirectShowLib.ExtTransportStatus, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.GetTransportAudioParameters(ExtTransportParameters, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.GetTransportAudioParameters(DirectShowLib.ExtTransportParameters, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.GetTransportBasicParameters(ExtTransportParameters, Int32, String)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.GetTransportBasicParameters(DirectShowLib.ExtTransportParameters, System.Int32, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.GetTransportVideoParameters(ExtTransportParameters, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.GetTransportVideoParameters(DirectShowLib.ExtTransportParameters, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.put_AntiClogControl(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.put_AntiClogControl(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.put_EditStart(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.put_EditStart(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.put_LocalControl(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.put_LocalControl(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.put_MediaState(ExtTransportMediaStates)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.put_MediaState(DirectShowLib.ExtTransportMediaStates)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.put_Mode(ExtTransportModes)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.put_Mode(DirectShowLib.ExtTransportModes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.put_Rate(Double)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.put_Rate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.SetBump(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.SetBump(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.SetChase(Int32, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.SetChase(System.Int32, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.SetEditProperty(Int32, ExtTransportEdit, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.SetEditProperty(System.Int32, DirectShowLib.ExtTransportEdit, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.SetEditPropertySet(Int32, ExtTransportEdit)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.SetEditPropertySet(System.Int32, DirectShowLib.ExtTransportEdit)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.SetTransportAudioParameters(ExtTransportParameters, ExtTransportAudio)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.SetTransportAudioParameters(DirectShowLib.ExtTransportParameters, DirectShowLib.ExtTransportAudio)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.SetTransportBasicParameters(ExtTransportParameters, Int32, String)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.SetTransportBasicParameters(DirectShowLib.ExtTransportParameters, System.Int32, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMExtTransport.SetTransportVideoParameters(ExtTransportParameters, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMExtTransport.SetTransportVideoParameters(DirectShowLib.ExtTransportParameters, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Quality</name>
        <fullName>DirectShowLib.Quality</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>SystemClock</name>
        <fullName>DirectShowLib.SystemClock</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SystemClock..ctor()</name>
            <fullName>System.Void DirectShowLib.SystemClock..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEGAudioChannels</name>
        <fullName>DirectShowLib.MPEGAudioChannels</fullName>
        <methods />
      </type>
      <type>
        <name>AcmMpegHeadMode</name>
        <fullName>DirectShowLib.AcmMpegHeadMode</fullName>
        <methods />
      </type>
      <type>
        <name>VMRAspectRatioMode</name>
        <fullName>DirectShowLib.VMRAspectRatioMode</fullName>
        <methods />
      </type>
      <type>
        <name>IReferenceClock</name>
        <fullName>DirectShowLib.IReferenceClock</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IReferenceClock.AdvisePeriodic(Int64, Int64, IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IReferenceClock.AdvisePeriodic(System.Int64, System.Int64, System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IReferenceClock.AdviseTime(Int64, Int64, IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IReferenceClock.AdviseTime(System.Int64, System.Int64, System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IReferenceClock.GetTime(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IReferenceClock.GetTime(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IReferenceClock.Unadvise(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IReferenceClock.Unadvise(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVMux</name>
        <fullName>DirectShowLib.DVMux</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVMux..ctor()</name>
            <fullName>System.Void DirectShowLib.DVMux..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9PresentationFlags</name>
        <fullName>DirectShowLib.VMR9PresentationFlags</fullName>
        <methods />
      </type>
      <type>
        <name>MPEGAudioDivider</name>
        <fullName>DirectShowLib.MPEGAudioDivider</fullName>
        <methods />
      </type>
      <type>
        <name>VMR9PresentationInfo</name>
        <fullName>DirectShowLib.VMR9PresentationInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>AMLine21DrawBGMode</name>
        <fullName>DirectShowLib.AMLine21DrawBGMode</fullName>
        <methods />
      </type>
      <type>
        <name>AMTunerSubChannel</name>
        <fullName>DirectShowLib.AMTunerSubChannel</fullName>
        <methods />
      </type>
      <type>
        <name>RegPinMedium</name>
        <fullName>DirectShowLib.RegPinMedium</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void RegPinMedium..ctor()</name>
            <fullName>System.Void DirectShowLib.RegPinMedium..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtTransportAudio</name>
        <fullName>DirectShowLib.ExtTransportAudio</fullName>
        <methods />
      </type>
      <type>
        <name>IPersistStream</name>
        <fullName>DirectShowLib.IPersistStream</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPersistStream.GetClassID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IPersistStream.GetClassID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistStream.GetSizeMax(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IPersistStream.GetSizeMax(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistStream.IsDirty()</name>
            <fullName>System.Int32 DirectShowLib.IPersistStream.IsDirty()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistStream.Load(IStream)</name>
            <fullName>System.Int32 DirectShowLib.IPersistStream.Load(System.Runtime.InteropServices.ComTypes.IStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistStream.Save(IStream, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IPersistStream.Save(System.Runtime.InteropServices.ComTypes.IStream, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WSTService</name>
        <fullName>DirectShowLib.WSTService</fullName>
        <methods />
      </type>
      <type>
        <name>IAMVideoDecimationProperties</name>
        <fullName>DirectShowLib.IAMVideoDecimationProperties</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMVideoDecimationProperties.QueryDecimationUsage(DecimationUsage)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoDecimationProperties.QueryDecimationUsage(DirectShowLib.DecimationUsage)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMVideoDecimationProperties.SetDecimationUsage(DecimationUsage)</name>
            <fullName>System.Int32 DirectShowLib.IAMVideoDecimationProperties.SetDecimationUsage(DirectShowLib.DecimationUsage)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WindowStyleEx</name>
        <fullName>DirectShowLib.WindowStyleEx</fullName>
        <methods />
      </type>
      <type>
        <name>IVMRAspectRatioControl9</name>
        <fullName>DirectShowLib.IVMRAspectRatioControl9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRAspectRatioControl9.GetAspectRatioMode(VMRAspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRAspectRatioControl9.GetAspectRatioMode(DirectShowLib.VMRAspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRAspectRatioControl9.SetAspectRatioMode(VMRAspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRAspectRatioControl9.SetAspectRatioMode(DirectShowLib.VMRAspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VideoInfoHeader</name>
        <fullName>DirectShowLib.VideoInfoHeader</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VideoInfoHeader..ctor()</name>
            <fullName>System.Void DirectShowLib.VideoInfoHeader..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMemAllocatorCallbackTemp</name>
        <fullName>DirectShowLib.IMemAllocatorCallbackTemp</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMemAllocatorCallbackTemp.Commit()</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocatorCallbackTemp.Commit()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocatorCallbackTemp.Decommit()</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocatorCallbackTemp.Decommit()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocatorCallbackTemp.GetBuffer(IMediaSample, Int64, Int64, AMGBF)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocatorCallbackTemp.GetBuffer(DirectShowLib.IMediaSample, System.Int64, System.Int64, DirectShowLib.AMGBF)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocatorCallbackTemp.GetFreeCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocatorCallbackTemp.GetFreeCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocatorCallbackTemp.GetProperties(AllocatorProperties)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocatorCallbackTemp.GetProperties(DirectShowLib.AllocatorProperties)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocatorCallbackTemp.ReleaseBuffer(IMediaSample)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocatorCallbackTemp.ReleaseBuffer(DirectShowLib.IMediaSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocatorCallbackTemp.SetNotify(IMemAllocatorNotifyCallbackTemp)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocatorCallbackTemp.SetNotify(DirectShowLib.IMemAllocatorNotifyCallbackTemp)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMemAllocatorCallbackTemp.SetProperties(AllocatorProperties, AllocatorProperties)</name>
            <fullName>System.Int32 DirectShowLib.IMemAllocatorCallbackTemp.SetProperties(DirectShowLib.AllocatorProperties, DirectShowLib.AllocatorProperties)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMDecoderCaps</name>
        <fullName>DirectShowLib.IAMDecoderCaps</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMDecoderCaps.GetDecoderCaps(AMQueryDecoder, DecoderCap)</name>
            <fullName>System.Int32 DirectShowLib.IAMDecoderCaps.GetDecoderCaps(DirectShowLib.AMQueryDecoder, DirectShowLib.DecoderCap)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ATSCNetworkProvider</name>
        <fullName>DirectShowLib.ATSCNetworkProvider</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ATSCNetworkProvider..ctor()</name>
            <fullName>System.Void DirectShowLib.ATSCNetworkProvider..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBasicVideo2</name>
        <fullName>DirectShowLib.IBasicVideo2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBasicVideo2.get_AvgTimePerFrame(Double)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_AvgTimePerFrame(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_BitErrorRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_BitErrorRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_BitRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_BitRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_DestinationHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_DestinationHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_DestinationLeft(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_DestinationLeft(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_DestinationTop(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_DestinationTop(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_DestinationWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_DestinationWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_SourceHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_SourceHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_SourceLeft(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_SourceLeft(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_SourceTop(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_SourceTop(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_SourceWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_SourceWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_VideoHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_VideoHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.get_VideoWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.get_VideoWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.GetCurrentImage(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.GetCurrentImage(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.GetDestinationPosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.GetDestinationPosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.GetPreferredAspectRatio(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.GetPreferredAspectRatio(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.GetSourcePosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.GetSourcePosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.GetVideoPaletteEntries(Int32, Int32, Int32, Int32[])</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.GetVideoPaletteEntries(System.Int32, System.Int32, System.Int32, System.Int32[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.GetVideoSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.GetVideoSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.IsUsingDefaultDestination()</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.IsUsingDefaultDestination()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.IsUsingDefaultSource()</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.IsUsingDefaultSource()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.put_DestinationHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.put_DestinationHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.put_DestinationLeft(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.put_DestinationLeft(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.put_DestinationTop(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.put_DestinationTop(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.put_DestinationWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.put_DestinationWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.put_SourceHeight(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.put_SourceHeight(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.put_SourceLeft(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.put_SourceLeft(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.put_SourceTop(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.put_SourceTop(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.put_SourceWidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.put_SourceWidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.SetDefaultDestinationPosition()</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.SetDefaultDestinationPosition()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.SetDefaultSourcePosition()</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.SetDefaultSourcePosition()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.SetDestinationPosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.SetDestinationPosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBasicVideo2.SetSourcePosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IBasicVideo2.SetSourcePosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBaseFilter</name>
        <fullName>DirectShowLib.IBaseFilter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBaseFilter.EnumPins(IEnumPins)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.EnumPins(DirectShowLib.IEnumPins)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.FindPin(String, IPin)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.FindPin(System.String, DirectShowLib.IPin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.GetClassID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.GetClassID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.GetState(Int32, FilterState)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.GetState(System.Int32, DirectShowLib.FilterState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.GetSyncSource(IReferenceClock)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.GetSyncSource(DirectShowLib.IReferenceClock)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.JoinFilterGraph(IFilterGraph, String)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.JoinFilterGraph(DirectShowLib.IFilterGraph, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.Pause()</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.Pause()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.QueryFilterInfo(FilterInfo)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.QueryFilterInfo(DirectShowLib.FilterInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.QueryVendorInfo(String)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.QueryVendorInfo(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.Run(Int64)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.Run(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.SetSyncSource(IReferenceClock)</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.SetSyncSource(DirectShowLib.IReferenceClock)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBaseFilter.Stop()</name>
            <fullName>System.Int32 DirectShowLib.IBaseFilter.Stop()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsRect</name>
        <fullName>DirectShowLib.DsRect</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DsRect..ctor(Rectangle)</name>
            <fullName>System.Void DirectShowLib.DsRect..ctor(System.Drawing.Rectangle)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsRect..ctor(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Void DirectShowLib.DsRect..ctor(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsRect..ctor()</name>
            <fullName>System.Void DirectShowLib.DsRect..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Boolean DsRect.Equals(Object)</name>
            <fullName>System.Boolean DirectShowLib.DsRect.Equals(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DsRect DsRect.FromRectangle(Rectangle)</name>
            <fullName>DirectShowLib.DsRect DirectShowLib.DsRect.FromRectangle(System.Drawing.Rectangle)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DsRect.GetHashCode()</name>
            <fullName>System.Int32 DirectShowLib.DsRect.GetHashCode()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Rectangle DsRect.ToRectangle()</name>
            <fullName>System.Drawing.Rectangle DirectShowLib.DsRect.ToRectangle()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsRect.ToString()</name>
            <fullName>System.String DirectShowLib.DsRect.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtTransportMediaStates</name>
        <fullName>DirectShowLib.ExtTransportMediaStates</fullName>
        <methods />
      </type>
      <type>
        <name>WSTLevel</name>
        <fullName>DirectShowLib.WSTLevel</fullName>
        <methods />
      </type>
      <type>
        <name>MJPGEnc</name>
        <fullName>DirectShowLib.MJPGEnc</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MJPGEnc..ctor()</name>
            <fullName>System.Void DirectShowLib.MJPGEnc..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMRFrequency</name>
        <fullName>DirectShowLib.VMRFrequency</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DDColorKey</name>
        <fullName>DirectShowLib.DDColorKey</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>VMR9MonitorInfo</name>
        <fullName>DirectShowLib.VMR9MonitorInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IVMRMonitorConfig9</name>
        <fullName>DirectShowLib.IVMRMonitorConfig9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRMonitorConfig9.GetAvailableMonitors(VMR9MonitorInfo[], Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig9.GetAvailableMonitors(DirectShowLib.VMR9MonitorInfo[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMonitorConfig9.GetDefaultMonitor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig9.GetDefaultMonitor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMonitorConfig9.GetMonitor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig9.GetMonitor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMonitorConfig9.SetDefaultMonitor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig9.SetDefaultMonitor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMonitorConfig9.SetMonitor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig9.SetMonitor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsError</name>
        <fullName>DirectShowLib.DsError</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Int32 DsError.AMGetErrorText(Int32, StringBuilder, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DsError.AMGetErrorText(System.Int32, System.Text.StringBuilder, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DsError.GetErrorText(Int32)</name>
            <fullName>System.String DirectShowLib.DsError.GetErrorText(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DsError.ThrowExceptionForHR(Int32)</name>
            <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Colour</name>
        <fullName>DirectShowLib.Colour</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Colour..ctor()</name>
            <fullName>System.Void DirectShowLib.Colour..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMixerOCXNotify</name>
        <fullName>DirectShowLib.IMixerOCXNotify</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMixerOCXNotify.OnDataChange(MixerData)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCXNotify.OnDataChange(DirectShowLib.MixerData)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerOCXNotify.OnInvalidateRect(DsRect)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCXNotify.OnInvalidateRect(DirectShowLib.DsRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerOCXNotify.OnStatusChange(MixerState)</name>
            <fullName>System.Int32 DirectShowLib.IMixerOCXNotify.OnStatusChange(DirectShowLib.MixerState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>QuickTimeParser</name>
        <fullName>DirectShowLib.QuickTimeParser</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void QuickTimeParser..ctor()</name>
            <fullName>System.Void DirectShowLib.QuickTimeParser..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IQualProp</name>
        <fullName>DirectShowLib.IQualProp</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IQualProp.get_AvgFrameRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IQualProp.get_AvgFrameRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IQualProp.get_AvgSyncOffset(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IQualProp.get_AvgSyncOffset(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IQualProp.get_DevSyncOffset(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IQualProp.get_DevSyncOffset(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IQualProp.get_FramesDrawn(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IQualProp.get_FramesDrawn(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IQualProp.get_FramesDroppedInRenderer(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IQualProp.get_FramesDroppedInRenderer(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IQualProp.get_Jitter(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IQualProp.get_Jitter(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRWindowlessControl9</name>
        <fullName>DirectShowLib.IVMRWindowlessControl9</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRWindowlessControl9.DisplayModeChanged()</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.DisplayModeChanged()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.GetAspectRatioMode(VMR9AspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.GetAspectRatioMode(DirectShowLib.VMR9AspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.GetBorderColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.GetBorderColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.GetCurrentImage(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.GetCurrentImage(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.GetMaxIdealVideoSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.GetMaxIdealVideoSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.GetMinIdealVideoSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.GetMinIdealVideoSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.GetNativeVideoSize(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.GetNativeVideoSize(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.GetVideoPosition(DsRect, DsRect)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.GetVideoPosition(DirectShowLib.DsRect, DirectShowLib.DsRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.RepaintVideo(IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.RepaintVideo(System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.SetAspectRatioMode(VMR9AspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.SetAspectRatioMode(DirectShowLib.VMR9AspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.SetBorderColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.SetBorderColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.SetVideoClippingWindow(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.SetVideoClippingWindow(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl9.SetVideoPosition(DsRect, DsRect)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl9.SetVideoPosition(DirectShowLib.DsRect, DirectShowLib.DsRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VideoMixingRenderer</name>
        <fullName>DirectShowLib.VideoMixingRenderer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void VideoMixingRenderer..ctor()</name>
            <fullName>System.Void DirectShowLib.VideoMixingRenderer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMR9ProcAmpControl</name>
        <fullName>DirectShowLib.VMR9ProcAmpControl</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IFileSinkFilter2</name>
        <fullName>DirectShowLib.IFileSinkFilter2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFileSinkFilter2.GetCurFile(String, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFileSinkFilter2.GetCurFile(System.String, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFileSinkFilter2.GetMode(AMFileSinkFlags)</name>
            <fullName>System.Int32 DirectShowLib.IFileSinkFilter2.GetMode(DirectShowLib.AMFileSinkFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFileSinkFilter2.SetFileName(String, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IFileSinkFilter2.SetFileName(System.String, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFileSinkFilter2.SetMode(AMFileSinkFlags)</name>
            <fullName>System.Int32 DirectShowLib.IFileSinkFilter2.SetMode(DirectShowLib.AMFileSinkFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMVP_Mode</name>
        <fullName>DirectShowLib.AMVP_Mode</fullName>
        <methods />
      </type>
      <type>
        <name>IAMWstDecoder</name>
        <fullName>DirectShowLib.IAMWstDecoder</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMWstDecoder.GetAnswerMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetAnswerMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.GetBackgroundColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetBackgroundColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.GetCurrentPage(WSTPage)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetCurrentPage(DirectShowLib.WSTPage)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.GetCurrentService(WSTService)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetCurrentService(DirectShowLib.WSTService)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.GetDecoderLevel(WSTLevel)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetDecoderLevel(DirectShowLib.WSTLevel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.GetDrawBackgroundMode(WSTDrawBGMode)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetDrawBackgroundMode(DirectShowLib.WSTDrawBGMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.GetHoldPage(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetHoldPage(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.GetOutputFormat(BitmapInfoHeader)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetOutputFormat(DirectShowLib.BitmapInfoHeader)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.GetRedrawAlways(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetRedrawAlways(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.GetServiceState(WSTState)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.GetServiceState(DirectShowLib.WSTState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.SetAnswerMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.SetAnswerMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.SetBackgroundColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.SetBackgroundColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.SetCurrentPage(WSTPage)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.SetCurrentPage(DirectShowLib.WSTPage)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.SetDrawBackgroundMode(WSTDrawBGMode)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.SetDrawBackgroundMode(DirectShowLib.WSTDrawBGMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.SetHoldPage(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.SetHoldPage(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.SetOutputFormat(BitmapInfoHeader)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.SetOutputFormat(DirectShowLib.BitmapInfoHeader)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.SetRedrawAlways(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.SetRedrawAlways(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMWstDecoder.SetServiceState(WSTState)</name>
            <fullName>System.Int32 DirectShowLib.IAMWstDecoder.SetServiceState(DirectShowLib.WSTState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtTransportParameters</name>
        <fullName>DirectShowLib.ExtTransportParameters</fullName>
        <methods />
      </type>
      <type>
        <name>DDPixelFormat</name>
        <fullName>DirectShowLib.DDPixelFormat</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>StreamBufferRecordingAttributes</name>
        <fullName>DirectShowLib.StreamBufferRecordingAttributes</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void StreamBufferRecordingAttributes..ctor()</name>
            <fullName>System.Void DirectShowLib.StreamBufferRecordingAttributes..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CDeviceMoniker</name>
        <fullName>DirectShowLib.CDeviceMoniker</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CDeviceMoniker..ctor()</name>
            <fullName>System.Void DirectShowLib.CDeviceMoniker..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISBE2StreamMap</name>
        <fullName>DirectShowLib.SBE.ISBE2StreamMap</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISBE2StreamMap.EnumMappedStreams(ISBE2EnumStream)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2StreamMap.EnumMappedStreams(DirectShowLib.SBE.ISBE2EnumStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2StreamMap.MapStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2StreamMap.MapStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2StreamMap.UnmapStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2StreamMap.UnmapStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferMediaSeeking</name>
        <fullName>DirectShowLib.SBE.IStreamBufferMediaSeeking</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.CheckCapabilities(AMSeekingSeekingCapabilities)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.CheckCapabilities(DirectShowLib.AMSeekingSeekingCapabilities)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.ConvertTimeFormat(Int64, DsGuid, Int64, DsGuid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.ConvertTimeFormat(System.Int64, DirectShowLib.DsGuid, System.Int64, DirectShowLib.DsGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.GetAvailable(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.GetAvailable(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.GetCapabilities(AMSeekingSeekingCapabilities)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.GetCapabilities(DirectShowLib.AMSeekingSeekingCapabilities)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.GetCurrentPosition(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.GetCurrentPosition(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.GetDuration(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.GetDuration(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.GetPositions(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.GetPositions(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.GetPreroll(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.GetPreroll(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.GetRate(Double)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.GetRate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.GetStopPosition(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.GetStopPosition(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.GetTimeFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.GetTimeFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.IsFormatSupported(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.IsFormatSupported(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.IsUsingTimeFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.IsUsingTimeFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.QueryPreferredFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.QueryPreferredFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.SetPositions(DsLong, AMSeekingSeekingFlags, DsLong, AMSeekingSeekingFlags)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.SetPositions(DirectShowLib.DsLong, DirectShowLib.AMSeekingSeekingFlags, DirectShowLib.DsLong, DirectShowLib.AMSeekingSeekingFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.SetRate(Double)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.SetRate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking.SetTimeFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking.SetTimeFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CrossbarDefaultFlags</name>
        <fullName>DirectShowLib.SBE.CrossbarDefaultFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IStreamBufferInitialize</name>
        <fullName>DirectShowLib.SBE.IStreamBufferInitialize</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferInitialize.SetHKEY(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferInitialize.SetHKEY(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferInitialize.SetSIDs(Int32, IntPtr[])</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferInitialize.SetSIDs(System.Int32, System.IntPtr[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVRStreamDesc</name>
        <fullName>DirectShowLib.SBE.DVRStreamDesc</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVRStreamDesc..ctor()</name>
            <fullName>System.Void DirectShowLib.SBE.DVRStreamDesc..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SBEEvent</name>
        <fullName>DirectShowLib.SBE.SBEEvent</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SBEEvent..ctor()</name>
            <fullName>System.Void DirectShowLib.SBE.SBEEvent..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferSink3</name>
        <fullName>DirectShowLib.SBE.IStreamBufferSink3</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferSink3.CreateRecorder(String, RecordingType, Object)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink3.CreateRecorder(System.String, DirectShowLib.SBE.RecordingType, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferSink3.IsProfileLocked()</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink3.IsProfileLocked()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferSink3.LockProfile(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink3.LockProfile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferSink3.SetAvailableFilter(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink3.SetAvailableFilter(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferSink3.UnlockProfile()</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink3.UnlockProfile()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>RecordingType</name>
        <fullName>DirectShowLib.SBE.RecordingType</fullName>
        <methods />
      </type>
      <type>
        <name>IStreamBufferRecComp</name>
        <fullName>DirectShowLib.SBE.IStreamBufferRecComp</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferRecComp.Append(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecComp.Append(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecComp.AppendEx(String, Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecComp.AppendEx(System.String, System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecComp.Cancel()</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecComp.Cancel()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecComp.Close()</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecComp.Close()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecComp.GetCurrentLength(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecComp.GetCurrentLength(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecComp.Initialize(String, String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecComp.Initialize(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferSource</name>
        <fullName>DirectShowLib.SBE.IStreamBufferSource</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferSource.SetStreamSink(IStreamBufferSink)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSource.SetStreamSink(DirectShowLib.SBE.IStreamBufferSink)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISBE2MediaTypeProfile</name>
        <fullName>DirectShowLib.SBE.ISBE2MediaTypeProfile</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISBE2MediaTypeProfile.AddStream(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2MediaTypeProfile.AddStream(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2MediaTypeProfile.DeleteStream(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2MediaTypeProfile.DeleteStream(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2MediaTypeProfile.GetStream(Int32, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2MediaTypeProfile.GetStream(System.Int32, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2MediaTypeProfile.GetStreamCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2MediaTypeProfile.GetStreamCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferRecordingAttribute</name>
        <fullName>DirectShowLib.SBE.IStreamBufferRecordingAttribute</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferRecordingAttribute.EnumAttributes(IEnumStreamBufferRecordingAttrib)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecordingAttribute.EnumAttributes(DirectShowLib.SBE.IEnumStreamBufferRecordingAttrib)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecordingAttribute.GetAttributeByIndex(Int16, Int32, StringBuilder, Int16, StreamBufferAttrDataType, IntPtr, Int16)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecordingAttribute.GetAttributeByIndex(System.Int16, System.Int32, System.Text.StringBuilder, System.Int16, DirectShowLib.SBE.StreamBufferAttrDataType, System.IntPtr, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecordingAttribute.GetAttributeByName(String, Int32, StreamBufferAttrDataType, IntPtr, Int16)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecordingAttribute.GetAttributeByName(System.String, System.Int32, DirectShowLib.SBE.StreamBufferAttrDataType, System.IntPtr, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecordingAttribute.GetAttributeCount(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecordingAttribute.GetAttributeCount(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecordingAttribute.SetAttribute(Int32, String, StreamBufferAttrDataType, IntPtr, Int16)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecordingAttribute.SetAttribute(System.Int32, System.String, DirectShowLib.SBE.StreamBufferAttrDataType, System.IntPtr, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SDMarshaler</name>
        <fullName>DirectShowLib.SBE.SDMarshaler</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SDMarshaler..ctor()</name>
            <fullName>System.Void DirectShowLib.SBE.SDMarshaler..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void SDMarshaler.CleanUpManagedData(Object)</name>
            <fullName>System.Void DirectShowLib.SBE.SDMarshaler.CleanUpManagedData(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void SDMarshaler.CleanUpNativeData(IntPtr)</name>
            <fullName>System.Void DirectShowLib.SBE.SDMarshaler.CleanUpNativeData(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ICustomMarshaler SDMarshaler.GetInstance(String)</name>
            <fullName>System.Runtime.InteropServices.ICustomMarshaler DirectShowLib.SBE.SDMarshaler.GetInstance(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 SDMarshaler.GetNativeDataSize()</name>
            <fullName>System.Int32 DirectShowLib.SBE.SDMarshaler.GetNativeDataSize()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IntPtr SDMarshaler.MarshalManagedToNative(Object)</name>
            <fullName>System.IntPtr DirectShowLib.SBE.SDMarshaler.MarshalManagedToNative(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Object SDMarshaler.MarshalNativeToManaged(IntPtr)</name>
            <fullName>System.Object DirectShowLib.SBE.SDMarshaler.MarshalNativeToManaged(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferMediaSeeking2</name>
        <fullName>DirectShowLib.SBE.IStreamBufferMediaSeeking2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.CheckCapabilities(AMSeekingSeekingCapabilities)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.CheckCapabilities(DirectShowLib.AMSeekingSeekingCapabilities)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.ConvertTimeFormat(Int64, DsGuid, Int64, DsGuid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.ConvertTimeFormat(System.Int64, DirectShowLib.DsGuid, System.Int64, DirectShowLib.DsGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.GetAvailable(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.GetAvailable(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.GetCapabilities(AMSeekingSeekingCapabilities)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.GetCapabilities(DirectShowLib.AMSeekingSeekingCapabilities)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.GetCurrentPosition(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.GetCurrentPosition(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.GetDuration(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.GetDuration(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.GetPositions(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.GetPositions(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.GetPreroll(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.GetPreroll(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.GetRate(Double)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.GetRate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.GetStopPosition(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.GetStopPosition(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.GetTimeFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.GetTimeFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.IsFormatSupported(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.IsFormatSupported(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.IsUsingTimeFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.IsUsingTimeFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.QueryPreferredFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.QueryPreferredFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.SetPositions(DsLong, AMSeekingSeekingFlags, DsLong, AMSeekingSeekingFlags)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.SetPositions(DirectShowLib.DsLong, DirectShowLib.AMSeekingSeekingFlags, DirectShowLib.DsLong, DirectShowLib.AMSeekingSeekingFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.SetRate(Double)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.SetRate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.SetRateEx(Double, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.SetRateEx(System.Double, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferMediaSeeking2.SetTimeFormat(Guid)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferMediaSeeking2.SetTimeFormat(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferConfigure2</name>
        <fullName>DirectShowLib.SBE.IStreamBufferConfigure2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferConfigure2.GetBackingFileCount(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.GetBackingFileCount(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure2.GetBackingFileDuration(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.GetBackingFileDuration(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure2.GetDirectory(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.GetDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure2.GetFFTransitionRates(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.GetFFTransitionRates(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure2.GetMultiplexedPacketSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.GetMultiplexedPacketSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure2.SetBackingFileCount(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.SetBackingFileCount(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure2.SetBackingFileDuration(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.SetBackingFileDuration(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure2.SetDirectory(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.SetDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure2.SetFFTransitionRates(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.SetFFTransitionRates(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure2.SetMultiplexedPacketSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure2.SetMultiplexedPacketSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISBE2SpanningEvent</name>
        <fullName>DirectShowLib.SBE.ISBE2SpanningEvent</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISBE2SpanningEvent.GetEvent(Guid, Int32, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2SpanningEvent.GetEvent(System.Guid, System.Int32, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferDataCounters</name>
        <fullName>DirectShowLib.SBE.IStreamBufferDataCounters</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferDataCounters.GetData(SBEPinData)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferDataCounters.GetData(DirectShowLib.SBE.SBEPinData)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferDataCounters.ResetData()</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferDataCounters.ResetData()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferRecording</name>
        <fullName>DirectShowLib.SBE.StreamBufferRecording</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void StreamBufferRecording..ctor()</name>
            <fullName>System.Void DirectShowLib.SBE.StreamBufferRecording..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferConfigure</name>
        <fullName>DirectShowLib.SBE.IStreamBufferConfigure</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferConfigure.GetBackingFileCount(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure.GetBackingFileCount(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure.GetBackingFileDuration(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure.GetBackingFileDuration(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure.GetDirectory(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure.GetDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure.SetBackingFileCount(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure.SetBackingFileCount(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure.SetBackingFileDuration(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure.SetBackingFileDuration(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure.SetDirectory(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure.SetDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferSink2</name>
        <fullName>DirectShowLib.SBE.IStreamBufferSink2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferSink2.CreateRecorder(String, RecordingType, Object)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink2.CreateRecorder(System.String, DirectShowLib.SBE.RecordingType, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferSink2.IsProfileLocked()</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink2.IsProfileLocked()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferSink2.LockProfile(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink2.LockProfile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferSink2.UnlockProfile()</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink2.UnlockProfile()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IEnumStreamBufferRecordingAttrib</name>
        <fullName>DirectShowLib.SBE.IEnumStreamBufferRecordingAttrib</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IEnumStreamBufferRecordingAttrib.Clone(IEnumStreamBufferRecordingAttrib)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IEnumStreamBufferRecordingAttrib.Clone(DirectShowLib.SBE.IEnumStreamBufferRecordingAttrib)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumStreamBufferRecordingAttrib.Next(Int32, StreamBufferAttribute[], IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IEnumStreamBufferRecordingAttrib.Next(System.Int32, DirectShowLib.SBE.StreamBufferAttribute[], System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumStreamBufferRecordingAttrib.Reset()</name>
            <fullName>System.Int32 DirectShowLib.SBE.IEnumStreamBufferRecordingAttrib.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumStreamBufferRecordingAttrib.Skip(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IEnumStreamBufferRecordingAttrib.Skip(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISBE2Crossbar</name>
        <fullName>DirectShowLib.SBE.ISBE2Crossbar</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISBE2Crossbar.EnableDefaultMode(CrossbarDefaultFlags)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2Crossbar.EnableDefaultMode(DirectShowLib.SBE.CrossbarDefaultFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2Crossbar.EnumStreams(ISBE2EnumStream)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2Crossbar.EnumStreams(DirectShowLib.SBE.ISBE2EnumStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2Crossbar.GetInitialProfile(ISBE2MediaTypeProfile)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2Crossbar.GetInitialProfile(DirectShowLib.SBE.ISBE2MediaTypeProfile)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2Crossbar.SetOutputProfile(ISBE2MediaTypeProfile, Int32, IPin[])</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2Crossbar.SetOutputProfile(DirectShowLib.SBE.ISBE2MediaTypeProfile, System.Int32, DirectShowLib.IPin[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SBE2_StreamDesc</name>
        <fullName>DirectShowLib.SBE.SBE2_StreamDesc</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SBE2_StreamDesc..ctor()</name>
            <fullName>System.Void DirectShowLib.SBE.SBE2_StreamDesc..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferAttribute</name>
        <fullName>DirectShowLib.SBE.StreamBufferAttribute</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>ISBE2EnumStream</name>
        <fullName>DirectShowLib.SBE.ISBE2EnumStream</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISBE2EnumStream.Clone(ISBE2EnumStream)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2EnumStream.Clone(DirectShowLib.SBE.ISBE2EnumStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2EnumStream.Next(Int32, SBE2_StreamDesc[], IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2EnumStream.Next(System.Int32, DirectShowLib.SBE.SBE2_StreamDesc[], System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2EnumStream.Reset()</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2EnumStream.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2EnumStream.Skip(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2EnumStream.Skip(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SBEPinData</name>
        <fullName>DirectShowLib.SBE.SBEPinData</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IStreamBufferRecordControl</name>
        <fullName>DirectShowLib.SBE.IStreamBufferRecordControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferRecordControl.GetRecordingStatus(Int32, Boolean, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecordControl.GetRecordingStatus(System.Int32, System.Boolean, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecordControl.Start(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecordControl.Start(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferRecordControl.Stop(Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferRecordControl.Stop(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISBE2GlobalEvent2</name>
        <fullName>DirectShowLib.SBE.ISBE2GlobalEvent2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISBE2GlobalEvent2.GetEvent(Guid, Int32, Int32, Int32, Int32, Boolean, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2GlobalEvent2.GetEvent(System.Guid, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ISBE2GlobalEvent2.GetEventEx(Guid, Int32, Int32, Int32, Int32, Boolean, Int32, IntPtr, Int64)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2GlobalEvent2.GetEventEx(System.Guid, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.IntPtr, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferEventCode</name>
        <fullName>DirectShowLib.SBE.StreamBufferEventCode</fullName>
        <methods />
      </type>
      <type>
        <name>ISBE2GlobalEvent</name>
        <fullName>DirectShowLib.SBE.ISBE2GlobalEvent</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISBE2GlobalEvent.GetEvent(Guid, Int32, Int32, Int32, Int32, Boolean, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2GlobalEvent.GetEvent(System.Guid, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferAttrDataType</name>
        <fullName>DirectShowLib.SBE.StreamBufferAttrDataType</fullName>
        <methods />
      </type>
      <type>
        <name>IStreamBufferConfigure3</name>
        <fullName>DirectShowLib.SBE.IStreamBufferConfigure3</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferConfigure3.GetBackingFileCount(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.GetBackingFileCount(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.GetBackingFileDuration(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.GetBackingFileDuration(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.GetDirectory(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.GetDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.GetFFTransitionRates(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.GetFFTransitionRates(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.GetMultiplexedPacketSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.GetMultiplexedPacketSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.GetNamespace(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.GetNamespace(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.GetStartRecConfig(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.GetStartRecConfig(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.SetBackingFileCount(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.SetBackingFileCount(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.SetBackingFileDuration(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.SetBackingFileDuration(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.SetDirectory(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.SetDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.SetFFTransitionRates(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.SetFFTransitionRates(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.SetMultiplexedPacketSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.SetMultiplexedPacketSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.SetNamespace(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.SetNamespace(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferConfigure3.SetStartRecConfig(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferConfigure3.SetStartRecConfig(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IStreamBufferSink</name>
        <fullName>DirectShowLib.SBE.IStreamBufferSink</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IStreamBufferSink.CreateRecorder(String, RecordingType, Object)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink.CreateRecorder(System.String, DirectShowLib.SBE.RecordingType, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferSink.IsProfileLocked()</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink.IsProfileLocked()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IStreamBufferSink.LockProfile(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.IStreamBufferSink.LockProfile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ISBE2FileScan</name>
        <fullName>DirectShowLib.SBE.ISBE2FileScan</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ISBE2FileScan.RepairFile(String)</name>
            <fullName>System.Int32 DirectShowLib.SBE.ISBE2FileScan.RepairFile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEGPacketList</name>
        <fullName>DirectShowLib.MPEGPacketList</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IAMTVTuner</name>
        <fullName>DirectShowLib.IAMTVTuner</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMTVTuner.AutoTune(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.AutoTune(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.ChannelMinMax(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.ChannelMinMax(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_AudioFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_AudioFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_AvailableTVFormats(AnalogVideoStandard)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_AvailableTVFormats(DirectShowLib.AnalogVideoStandard)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_Channel(Int32, AMTunerSubChannel, AMTunerSubChannel)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_Channel(System.Int32, DirectShowLib.AMTunerSubChannel, DirectShowLib.AMTunerSubChannel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_ConnectInput(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_ConnectInput(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_InputType(Int32, TunerInputType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_InputType(System.Int32, DirectShowLib.TunerInputType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_Mode(AMTunerModeType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_Mode(DirectShowLib.AMTunerModeType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_NumInputConnections(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_NumInputConnections(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_TuningSpace(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_TuningSpace(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_TVFormat(AnalogVideoStandard)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_TVFormat(DirectShowLib.AnalogVideoStandard)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.get_VideoFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.get_VideoFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.GetAvailableModes(AMTunerModeType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.GetAvailableModes(DirectShowLib.AMTunerModeType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.Logon(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.Logon(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.Logout()</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.Logout()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.put_Channel(Int32, AMTunerSubChannel, AMTunerSubChannel)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.put_Channel(System.Int32, DirectShowLib.AMTunerSubChannel, DirectShowLib.AMTunerSubChannel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.put_ConnectInput(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.put_ConnectInput(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.put_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.put_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.put_InputType(Int32, TunerInputType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.put_InputType(System.Int32, DirectShowLib.TunerInputType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.put_Mode(AMTunerModeType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.put_Mode(DirectShowLib.AMTunerModeType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.put_TuningSpace(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.put_TuningSpace(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.RegisterNotificationCallBack(IAMTunerNotification, AMTunerEventType)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.RegisterNotificationCallBack(DirectShowLib.IAMTunerNotification, DirectShowLib.AMTunerEventType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.SignalPresent(AMTunerSignalStrength)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.SignalPresent(DirectShowLib.AMTunerSignalStrength)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.StoreAutoTune()</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.StoreAutoTune()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMTVTuner.UnRegisterNotificationCallBack(IAMTunerNotification)</name>
            <fullName>System.Int32 DirectShowLib.IAMTVTuner.UnRegisterNotificationCallBack(DirectShowLib.IAMTunerNotification)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BitmapInfoHeader</name>
        <fullName>DirectShowLib.BitmapInfoHeader</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void BitmapInfoHeader..ctor()</name>
            <fullName>System.Void DirectShowLib.BitmapInfoHeader..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StreamBufferThumbnailHandler</name>
        <fullName>DirectShowLib.StreamBufferThumbnailHandler</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void StreamBufferThumbnailHandler..ctor()</name>
            <fullName>System.Void DirectShowLib.StreamBufferThumbnailHandler..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMTVAudioEventType</name>
        <fullName>DirectShowLib.AMTVAudioEventType</fullName>
        <methods />
      </type>
      <type>
        <name>ACMWrapper</name>
        <fullName>DirectShowLib.ACMWrapper</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ACMWrapper..ctor()</name>
            <fullName>System.Void DirectShowLib.ACMWrapper..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IGraphVersion</name>
        <fullName>DirectShowLib.IGraphVersion</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IGraphVersion.QueryVersion(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IGraphVersion.QueryVersion(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVideoFrameStep</name>
        <fullName>DirectShowLib.IVideoFrameStep</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVideoFrameStep.CancelStep()</name>
            <fullName>System.Int32 DirectShowLib.IVideoFrameStep.CancelStep()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoFrameStep.CanStep(Int32, Object)</name>
            <fullName>System.Int32 DirectShowLib.IVideoFrameStep.CanStep(System.Int32, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVideoFrameStep.Step(Int32, Object)</name>
            <fullName>System.Int32 DirectShowLib.IVideoFrameStep.Step(System.Int32, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAsyncReader</name>
        <fullName>DirectShowLib.IAsyncReader</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAsyncReader.BeginFlush()</name>
            <fullName>System.Int32 DirectShowLib.IAsyncReader.BeginFlush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAsyncReader.EndFlush()</name>
            <fullName>System.Int32 DirectShowLib.IAsyncReader.EndFlush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAsyncReader.Length(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.IAsyncReader.Length(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAsyncReader.Request(IMediaSample, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAsyncReader.Request(DirectShowLib.IMediaSample, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAsyncReader.RequestAllocator(IMemAllocator, AllocatorProperties, IMemAllocator)</name>
            <fullName>System.Int32 DirectShowLib.IAsyncReader.RequestAllocator(DirectShowLib.IMemAllocator, DirectShowLib.AllocatorProperties, DirectShowLib.IMemAllocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAsyncReader.SyncRead(Int64, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAsyncReader.SyncRead(System.Int64, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAsyncReader.SyncReadAligned(IMediaSample)</name>
            <fullName>System.Int32 DirectShowLib.IAsyncReader.SyncReadAligned(DirectShowLib.IMediaSample)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAsyncReader.WaitForNext(Int32, IMediaSample, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAsyncReader.WaitForNext(System.Int32, DirectShowLib.IMediaSample, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG1WaveFormat</name>
        <fullName>DirectShowLib.MPEG1WaveFormat</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG1WaveFormat..ctor()</name>
            <fullName>System.Void DirectShowLib.MPEG1WaveFormat..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMpegAudioDecoder</name>
        <fullName>DirectShowLib.IMpegAudioDecoder</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMpegAudioDecoder.get_AudioFormat(MPEG1WaveFormat)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.get_AudioFormat(DirectShowLib.MPEG1WaveFormat)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.get_DecoderAccuracy(MPEGAudioAccuracy)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.get_DecoderAccuracy(DirectShowLib.MPEGAudioAccuracy)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.get_DecoderWordSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.get_DecoderWordSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.get_DualMode(MPEGAudioDual)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.get_DualMode(DirectShowLib.MPEGAudioDual)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.get_FrequencyDivider(MPEGAudioDivider)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.get_FrequencyDivider(DirectShowLib.MPEGAudioDivider)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.get_IntegerDecode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.get_IntegerDecode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.get_Stereo(MPEGAudioChannels)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.get_Stereo(DirectShowLib.MPEGAudioChannels)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.put_DecoderAccuracy(MPEGAudioAccuracy)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.put_DecoderAccuracy(DirectShowLib.MPEGAudioAccuracy)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.put_DecoderWordSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.put_DecoderWordSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.put_DualMode(MPEGAudioDual)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.put_DualMode(DirectShowLib.MPEGAudioDual)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.put_FrequencyDivider(MPEGAudioDivider)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.put_FrequencyDivider(DirectShowLib.MPEGAudioDivider)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.put_IntegerDecode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.put_IntegerDecode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMpegAudioDecoder.put_Stereo(MPEGAudioChannels)</name>
            <fullName>System.Int32 DirectShowLib.IMpegAudioDecoder.put_Stereo(DirectShowLib.MPEGAudioChannels)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG2Component</name>
        <fullName>DirectShowLib.BDA.MPEG2Component</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG2Component..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.MPEG2Component..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BDATemplateConnection</name>
        <fullName>DirectShowLib.BDA.BDATemplateConnection</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>ICCSubStreamFiltering</name>
        <fullName>DirectShowLib.BDA.ICCSubStreamFiltering</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ICCSubStreamFiltering.get_SubstreamTypes(CCSubstreamService)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICCSubStreamFiltering.get_SubstreamTypes(DirectShowLib.BDA.CCSubstreamService)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICCSubStreamFiltering.put_SubstreamTypes(CCSubstreamService)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICCSubStreamFiltering.put_SubstreamTypes(DirectShowLib.BDA.CCSubstreamService)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ATSCComponentTypeFlags</name>
        <fullName>DirectShowLib.BDA.ATSCComponentTypeFlags</fullName>
        <methods />
      </type>
      <type>
        <name>MpegDuration</name>
        <fullName>DirectShowLib.BDA.MpegDuration</fullName>
        <kind>struct</kind>
        <methods>
          <method>
            <name>TimeSpan MpegDuration.ToTimeSpan()</name>
            <fullName>System.TimeSpan DirectShowLib.BDA.MpegDuration.ToTimeSpan()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DsmccElement</name>
        <fullName>DirectShowLib.BDA.DsmccElement</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DsmccElement..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DsmccElement..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ITuningSpace</name>
        <fullName>DirectShowLib.BDA.ITuningSpace</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ITuningSpace.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpace.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpace.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IEnumComponentTypes</name>
        <fullName>DirectShowLib.BDA.IEnumComponentTypes</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IEnumComponentTypes.Clone(IEnumComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumComponentTypes.Clone(DirectShowLib.BDA.IEnumComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumComponentTypes.Next(Int32, IComponentType[], IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumComponentTypes.Next(System.Int32, DirectShowLib.BDA.IComponentType[], System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumComponentTypes.Reset()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumComponentTypes.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumComponentTypes.Skip(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumComponentTypes.Skip(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IATSCLocator</name>
        <fullName>DirectShowLib.BDA.IATSCLocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IATSCLocator.Clone(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.Clone(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.get_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.get_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.get_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.get_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.get_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.get_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.get_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.get_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.get_PhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.get_PhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.get_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.get_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.put_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.put_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.put_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.put_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.put_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.put_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.put_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.put_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.put_PhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.put_PhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator.put_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator.put_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MpegHeaderBits</name>
        <fullName>DirectShowLib.BDA.MpegHeaderBits</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>ComponentType</name>
        <fullName>DirectShowLib.BDA.ComponentType</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ComponentType..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ComponentType..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MpegHeaderVersionBits</name>
        <fullName>DirectShowLib.BDA.MpegHeaderVersionBits</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>ILocator</name>
        <fullName>DirectShowLib.BDA.ILocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ILocator.Clone(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.Clone(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.get_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.get_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.get_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.get_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.get_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.get_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.get_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.get_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.put_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.put_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.put_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.put_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.put_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.put_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.put_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.put_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILocator.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILocator.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IEnumTuningSpaces</name>
        <fullName>DirectShowLib.BDA.IEnumTuningSpaces</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IEnumTuningSpaces.Clone(IEnumTuningSpaces)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumTuningSpaces.Clone(DirectShowLib.BDA.IEnumTuningSpaces)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumTuningSpaces.Next(Int32, ITuningSpace[], IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumTuningSpaces.Next(System.Int32, DirectShowLib.BDA.ITuningSpace[], System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumTuningSpaces.Reset()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumTuningSpaces.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumTuningSpaces.Skip(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumTuningSpaces.Skip(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>EnTvRat_System</name>
        <fullName>DirectShowLib.BDA.EnTvRat_System</fullName>
        <methods />
      </type>
      <type>
        <name>IMPEG2PIDMap</name>
        <fullName>DirectShowLib.BDA.IMPEG2PIDMap</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMPEG2PIDMap.EnumPIDMap(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2PIDMap.EnumPIDMap(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2PIDMap.MapPID(Int32, Int32[], MediaSampleContent)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2PIDMap.MapPID(System.Int32, System.Int32[], DirectShowLib.BDA.MediaSampleContent)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2PIDMap.UnmapPID(Int32, Int32[])</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2PIDMap.UnmapPID(System.Int32, System.Int32[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_DigitalDemodulator</name>
        <fullName>DirectShowLib.BDA.IBDA_DigitalDemodulator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.get_InnerFECMethod(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.get_InnerFECMethod(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.get_ModulationType(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.get_ModulationType(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.get_OuterFECMethod(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.get_OuterFECMethod(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.get_SpectralInversion(SpectralInversion)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.get_SpectralInversion(DirectShowLib.BDA.SpectralInversion)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.put_InnerFECMethod(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.put_InnerFECMethod(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.put_ModulationType(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.put_ModulationType(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.put_OuterFECMethod(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.put_OuterFECMethod(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.put_SpectralInversion(SpectralInversion)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.put_SpectralInversion(DirectShowLib.BDA.SpectralInversion)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DigitalDemodulator.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DigitalDemodulator.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVBTLocator</name>
        <fullName>DirectShowLib.BDA.IDVBTLocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVBTLocator.Clone(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.Clone(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_Bandwidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_Bandwidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_Guard(GuardInterval)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_Guard(DirectShowLib.BDA.GuardInterval)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_HAlpha(HierarchyAlpha)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_HAlpha(DirectShowLib.BDA.HierarchyAlpha)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_LPInnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_LPInnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_LPInnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_LPInnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_Mode(TransmissionMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_Mode(DirectShowLib.BDA.TransmissionMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_OtherFrequencyInUse(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_OtherFrequencyInUse(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_Bandwidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_Bandwidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_Guard(GuardInterval)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_Guard(DirectShowLib.BDA.GuardInterval)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_HAlpha(HierarchyAlpha)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_HAlpha(DirectShowLib.BDA.HierarchyAlpha)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_LPInnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_LPInnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_LPInnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_LPInnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_Mode(TransmissionMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_Mode(DirectShowLib.BDA.TransmissionMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_OtherFrequencyInUse(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_OtherFrequencyInUse(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTLocator.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTLocator.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVBSLocator</name>
        <fullName>DirectShowLib.BDA.IDVBSLocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVBSLocator.Clone(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.Clone(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_Azimuth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_Azimuth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_Elevation(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_Elevation(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_OrbitalPosition(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_OrbitalPosition(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_SignalPolarisation(Polarisation)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_SignalPolarisation(DirectShowLib.BDA.Polarisation)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.get_WestPosition(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.get_WestPosition(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_Azimuth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_Azimuth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_Elevation(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_Elevation(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_OrbitalPosition(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_OrbitalPosition(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_SignalPolarisation(Polarisation)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_SignalPolarisation(DirectShowLib.BDA.Polarisation)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSLocator.put_WestPosition(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSLocator.put_WestPosition(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAnalogLocator</name>
        <fullName>DirectShowLib.BDA.IAnalogLocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAnalogLocator.Clone(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.Clone(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.get_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.get_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.get_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.get_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.get_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.get_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.get_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.get_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.get_VideoStandard(AnalogVideoStandard)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.get_VideoStandard(DirectShowLib.AnalogVideoStandard)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.put_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.put_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.put_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.put_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.put_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.put_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.put_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.put_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogLocator.put_VideoStandard(AnalogVideoStandard)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogLocator.put_VideoStandard(DirectShowLib.AnalogVideoStandard)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_FrequencyFilter</name>
        <fullName>DirectShowLib.BDA.IBDA_FrequencyFilter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_FrequencyFilter.get_Autotune(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.get_Autotune(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.get_Bandwidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.get_Bandwidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.get_Frequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.get_Frequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.get_FrequencyMultiplier(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.get_FrequencyMultiplier(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.get_Polarity(Polarisation)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.get_Polarity(DirectShowLib.BDA.Polarisation)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.get_Range(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.get_Range(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.put_Autotune(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.put_Autotune(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.put_Bandwidth(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.put_Bandwidth(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.put_Frequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.put_Frequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.put_FrequencyMultiplier(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.put_FrequencyMultiplier(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.put_Polarity(Polarisation)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.put_Polarity(DirectShowLib.BDA.Polarisation)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_FrequencyFilter.put_Range(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_FrequencyFilter.put_Range(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVBTuningSpace2</name>
        <fullName>DirectShowLib.BDA.IDVBTuningSpace2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVBTuningSpace2.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get_NetworkID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get_NetworkID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get_SystemType(DVBSystemType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get_SystemType(DirectShowLib.BDA.DVBSystemType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.put_NetworkID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.put_NetworkID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.put_SystemType(DVBSystemType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.put_SystemType(DirectShowLib.BDA.DVBSystemType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace2.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace2.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MpeElement</name>
        <fullName>DirectShowLib.BDA.MpeElement</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MpeElement..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.MpeElement..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>XDSCodec</name>
        <fullName>DirectShowLib.BDA.XDSCodec</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void XDSCodec..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.XDSCodec..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DigitalCableTuneRequest</name>
        <fullName>DirectShowLib.BDA.DigitalCableTuneRequest</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DigitalCableTuneRequest..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DigitalCableTuneRequest..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAnalogAudioComponentType</name>
        <fullName>DirectShowLib.BDA.IAnalogAudioComponentType</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAnalogAudioComponentType.Clone(IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.Clone(DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.get__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.get__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.get__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.get__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.get__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.get__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.get_AnalogAudioMode(TVAudioMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.get_AnalogAudioMode(DirectShowLib.TVAudioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.get_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.get_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.get_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.get_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.get_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.get_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.get_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.get_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.get_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.get_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.put__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.put__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.put__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.put__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.put__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.put__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.put_AnalogAudioMode(TVAudioMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.put_AnalogAudioMode(DirectShowLib.TVAudioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.put_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.put_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.put_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.put_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.put_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.put_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.put_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.put_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogAudioComponentType.put_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogAudioComponentType.put_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_IPSinkControl</name>
        <fullName>DirectShowLib.BDA.IBDA_IPSinkControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_IPSinkControl.GetAdapterIPAddress(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPSinkControl.GetAdapterIPAddress(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPSinkControl.GetMulticastList(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPSinkControl.GetMulticastList(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAuxInTuningSpace</name>
        <fullName>DirectShowLib.BDA.IAuxInTuningSpace</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAuxInTuningSpace.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDvbTerrestrialDeliverySystemDescriptor</name>
        <fullName>DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetBandwidth(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetBandwidth(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetCentreFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetCentreFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetCodeRateHPStream(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetCodeRateHPStream(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetCodeRateLPStream(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetCodeRateLPStream(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetConstellation(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetConstellation(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetGuardInterval(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetGuardInterval(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetHierarchyInformation(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetHierarchyInformation(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetLength(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetLength(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetOtherFrequencyFlag(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetOtherFrequencyFlag(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetTag(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetTag(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbTerrestrialDeliverySystemDescriptor.GetTransmissionMode(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbTerrestrialDeliverySystemDescriptor.GetTransmissionMode(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TuneRequest</name>
        <fullName>DirectShowLib.BDA.TuneRequest</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void TuneRequest..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.TuneRequest..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVBSTuningSpace</name>
        <fullName>DirectShowLib.BDA.IDVBSTuningSpace</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVBSTuningSpace.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_HighOscillator(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_HighOscillator(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_InputRange(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_InputRange(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_LNBSwitch(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_LNBSwitch(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_LowOscillator(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_LowOscillator(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_NetworkID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_NetworkID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_SpectralInversion(SpectralInversion)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_SpectralInversion(DirectShowLib.BDA.SpectralInversion)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_SystemType(DVBSystemType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_SystemType(DirectShowLib.BDA.DVBSystemType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_HighOscillator(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_HighOscillator(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_InputRange(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_InputRange(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_LNBSwitch(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_LNBSwitch(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_LowOscillator(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_LowOscillator(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_NetworkID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_NetworkID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_SpectralInversion(SpectralInversion)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_SpectralInversion(DirectShowLib.BDA.SpectralInversion)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_SystemType(DVBSystemType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_SystemType(DirectShowLib.BDA.DVBSystemType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBSTuningSpace.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBSTuningSpace.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AnalogLocator</name>
        <fullName>DirectShowLib.BDA.AnalogLocator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AnalogLocator..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.AnalogLocator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVBTLocator</name>
        <fullName>DirectShowLib.BDA.DVBTLocator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVBTLocator..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DVBTLocator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_DeviceControl</name>
        <fullName>DirectShowLib.BDA.IBDA_DeviceControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_DeviceControl.CheckChanges()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DeviceControl.CheckChanges()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DeviceControl.CommitChanges()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DeviceControl.CommitChanges()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DeviceControl.GetChangeState(BDAChangeState)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DeviceControl.GetChangeState(DirectShowLib.BDA.BDAChangeState)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_DeviceControl.StartChanges()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_DeviceControl.StartChanges()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVB_SDT</name>
        <fullName>DirectShowLib.BDA.IDVB_SDT</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVB_SDT.ConvertNextToCurrent()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.ConvertNextToCurrent()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetCountOfRecords(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetCountOfRecords(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetNextTable(IDVB_SDT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetNextTable(DirectShowLib.BDA.IDVB_SDT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetOriginalNetworkId(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetOriginalNetworkId(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetRecordCountOfDescriptors(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetRecordCountOfDescriptors(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetRecordDescriptorByIndex(Int32, Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetRecordDescriptorByIndex(System.Int32, System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetRecordDescriptorByTag(Int32, Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetRecordDescriptorByTag(System.Int32, System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetRecordEITPresentFollowingFlag(Int32, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetRecordEITPresentFollowingFlag(System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetRecordEITScheduleFlag(Int32, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetRecordEITScheduleFlag(System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetRecordFreeCAMode(Int32, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetRecordFreeCAMode(System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetRecordRunningStatus(Int32, RunningStatus)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetRecordRunningStatus(System.Int32, DirectShowLib.BDA.RunningStatus)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetRecordServiceId(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetRecordServiceId(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetTransportStreamId(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetTransportStreamId(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetVersionHash(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetVersionHash(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.GetVersionNumber(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.GetVersionNumber(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.Initialize(ISectionList, IMpeg2Data)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.Initialize(DirectShowLib.ISectionList, DirectShowLib.IMpeg2Data)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.RegisterForNextTable(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.RegisterForNextTable(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_SDT.RegisterForWhenCurrent(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_SDT.RegisterForWhenCurrent(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_SignalStatistics</name>
        <fullName>DirectShowLib.BDA.IBDA_SignalStatistics</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_SignalStatistics.get_SampleTime(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.get_SampleTime(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalStatistics.get_SignalLocked(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.get_SignalLocked(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalStatistics.get_SignalPresent(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.get_SignalPresent(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalStatistics.get_SignalQuality(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.get_SignalQuality(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalStatistics.get_SignalStrength(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.get_SignalStrength(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalStatistics.put_SampleTime(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.put_SampleTime(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalStatistics.put_SignalLocked(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.put_SignalLocked(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalStatistics.put_SignalPresent(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.put_SignalPresent(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalStatistics.put_SignalQuality(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.put_SignalQuality(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalStatistics.put_SignalStrength(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalStatistics.put_SignalStrength(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMPEG2TuneRequestSupport</name>
        <fullName>DirectShowLib.BDA.IMPEG2TuneRequestSupport</fullName>
        <kind>interface</kind>
        <methods />
      </type>
      <type>
        <name>IMPEG2ComponentType</name>
        <fullName>DirectShowLib.BDA.IMPEG2ComponentType</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMPEG2ComponentType.Clone(IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.Clone(DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get_LangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get_LangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.get_StreamType(MPEG2StreamType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.get_StreamType(DirectShowLib.BDA.MPEG2StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put_LangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put_LangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2ComponentType.put_StreamType(MPEG2StreamType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2ComponentType.put_StreamType(DirectShowLib.BDA.MPEG2StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IATSCTuningSpace</name>
        <fullName>DirectShowLib.BDA.IATSCTuningSpace</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IATSCTuningSpace.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_InputType(TunerInputType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_InputType(DirectShowLib.TunerInputType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_MaxChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_MaxChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_MaxMinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_MaxMinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_MaxPhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_MaxPhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_MinChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_MinChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_MinMinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_MinMinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_MinPhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_MinPhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_InputType(TunerInputType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_InputType(DirectShowLib.TunerInputType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_MaxChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_MaxChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_MaxMinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_MaxMinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_MaxPhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_MaxPhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_MinChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_MinChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_MinMinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_MinMinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_MinPhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_MinPhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCTuningSpace.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCTuningSpace.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AuxInTuningSpace</name>
        <fullName>DirectShowLib.BDA.AuxInTuningSpace</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AuxInTuningSpace..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.AuxInTuningSpace..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IXDSCodecConfig</name>
        <fullName>DirectShowLib.BDA.IXDSCodecConfig</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IXDSCodecConfig.GetSecureChannelObject(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IXDSCodecConfig.GetSecureChannelObject(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IXDSCodecConfig.SetPauseBufferTime(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IXDSCodecConfig.SetPauseBufferTime(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDigitalCableLocator</name>
        <fullName>DirectShowLib.BDA.IDigitalCableLocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDigitalCableLocator.Clone(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.Clone(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_PhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_PhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_ProgramNumber(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_ProgramNumber(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.get_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.get_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_PhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_PhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_ProgramNumber(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_ProgramNumber(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableLocator.put_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableLocator.put_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IPAT</name>
        <fullName>DirectShowLib.BDA.IPAT</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPAT.ConvertNextToCurrent()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.ConvertNextToCurrent()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.FindRecordProgramMapPid(Int16, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.FindRecordProgramMapPid(System.Int16, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.GetCountOfRecords(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.GetCountOfRecords(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.GetNextTable(IPAT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.GetNextTable(DirectShowLib.BDA.IPAT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.GetRecordProgramMapPid(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.GetRecordProgramMapPid(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.GetRecordProgramNumber(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.GetRecordProgramNumber(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.GetTransportStreamId(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.GetTransportStreamId(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.GetVersionNumber(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.GetVersionNumber(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.Initialize(ISectionList, IMpeg2Data)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.Initialize(DirectShowLib.ISectionList, DirectShowLib.IMpeg2Data)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.RegisterForNextTable(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.RegisterForNextTable(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPAT.RegisterForWhenCurrent(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPAT.RegisterForWhenCurrent(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAnalogTVTuningSpace</name>
        <fullName>DirectShowLib.BDA.IAnalogTVTuningSpace</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAnalogTVTuningSpace.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_InputType(TunerInputType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_InputType(DirectShowLib.TunerInputType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_MaxChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_MaxChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_MinChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_MinChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_InputType(TunerInputType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_InputType(DirectShowLib.TunerInputType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_MaxChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_MaxChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_MinChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_MinChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogTVTuningSpace.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogTVTuningSpace.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IComponent</name>
        <fullName>DirectShowLib.BDA.IComponent</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IComponent.Clone(IComponent)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponent.Clone(DirectShowLib.BDA.IComponent)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponent.get_DescLangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponent.get_DescLangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponent.get_Description(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponent.get_Description(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponent.get_Status(ComponentStatus)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponent.get_Status(DirectShowLib.BDA.ComponentStatus)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponent.get_Type(IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponent.get_Type(DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponent.put_DescLangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponent.put_DescLangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponent.put_Description(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponent.put_Description(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponent.put_Status(ComponentStatus)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponent.put_Status(DirectShowLib.BDA.ComponentStatus)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponent.put_Type(IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponent.put_Type(DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ITuner</name>
        <fullName>DirectShowLib.BDA.ITuner</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ITuner.EnumTuningSpaces(IEnumTuningSpaces)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.EnumTuningSpaces(DirectShowLib.BDA.IEnumTuningSpaces)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuner.get_PreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.get_PreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuner.get_SignalStrength(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.get_SignalStrength(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuner.get_TuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.get_TuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuner.get_TuningSpace(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.get_TuningSpace(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuner.put_PreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.put_PreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuner.put_TuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.put_TuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuner.put_TuningSpace(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.put_TuningSpace(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuner.TriggerSignalEvents(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.TriggerSignalEvents(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuner.Validate(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuner.Validate(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ITuningSpaces</name>
        <fullName>DirectShowLib.BDA.ITuningSpaces</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ITuningSpaces.get__NewEnum(IEnumVARIANT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaces.get__NewEnum(System.Runtime.InteropServices.ComTypes.IEnumVARIANT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaces.get_Count(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaces.get_Count(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaces.get_EnumTuningSpaces(IEnumTuningSpaces)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaces.get_EnumTuningSpaces(DirectShowLib.BDA.IEnumTuningSpaces)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaces.get_Item(Object, ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaces.get_Item(System.Object, DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IFrequencyMap</name>
        <fullName>DirectShowLib.BDA.IFrequencyMap</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFrequencyMap.get_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IFrequencyMap.get_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFrequencyMap.get_CountryCodeList(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IFrequencyMap.get_CountryCodeList(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFrequencyMap.get_DefaultFrequencyMapping(Int32, Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IFrequencyMap.get_DefaultFrequencyMapping(System.Int32, System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFrequencyMap.get_FrequencyMapping(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IFrequencyMap.get_FrequencyMapping(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFrequencyMap.put_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IFrequencyMap.put_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFrequencyMap.put_FrequencyMapping(Int32, Int32[])</name>
            <fullName>System.Int32 DirectShowLib.BDA.IFrequencyMap.put_FrequencyMapping(System.Int32, System.Int32[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVBSystemType</name>
        <fullName>DirectShowLib.BDA.DVBSystemType</fullName>
        <methods />
      </type>
      <type>
        <name>IDigitalLocator</name>
        <fullName>DirectShowLib.BDA.IDigitalLocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDigitalLocator.Clone(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.Clone(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.get_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.get_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.get_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.get_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.get_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.get_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.get_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.get_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.put_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.put_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.put_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.put_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.put_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.put_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.put_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.put_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalLocator.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalLocator.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVBTuningSpace</name>
        <fullName>DirectShowLib.BDA.IDVBTuningSpace</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVBTuningSpace.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.get_SystemType(DVBSystemType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.get_SystemType(DirectShowLib.BDA.DVBSystemType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.put_SystemType(DVBSystemType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.put_SystemType(DirectShowLib.BDA.DVBSystemType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuningSpace.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuningSpace.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Component</name>
        <fullName>DirectShowLib.BDA.Component</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Component..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.Component..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDACreateTuneRequestEx</name>
        <fullName>DirectShowLib.BDA.IBDACreateTuneRequestEx</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDACreateTuneRequestEx.CreateTuneRequestEx(Guid, ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDACreateTuneRequestEx.CreateTuneRequestEx(System.Guid, DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IATSCLocator2</name>
        <fullName>DirectShowLib.BDA.IATSCLocator2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IATSCLocator2.Clone(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.Clone(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_PhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_PhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_ProgramNumber(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_ProgramNumber(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.get_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.get_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_PhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_PhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_ProgramNumber(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_ProgramNumber(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCLocator2.put_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCLocator2.put_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ComponentTypes</name>
        <fullName>DirectShowLib.BDA.ComponentTypes</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ComponentTypes..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ComponentTypes..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDTFilter</name>
        <fullName>DirectShowLib.BDA.IDTFilter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDTFilter.get_BlockedRatingAttributes(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter.get_BlockedRatingAttributes(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter.get_BlockUnRated(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter.get_BlockUnRated(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter.get_BlockUnRatedDelay(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter.get_BlockUnRatedDelay(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter.get_EvalRatObjOK(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter.get_EvalRatObjOK(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter.GetCurrRating(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter.GetCurrRating(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter.put_BlockedRatingAttributes(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter.put_BlockedRatingAttributes(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter.put_BlockUnRated(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter.put_BlockUnRated(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter.put_BlockUnRatedDelay(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter.put_BlockUnRatedDelay(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVB_BAT</name>
        <fullName>DirectShowLib.BDA.IDVB_BAT</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVB_BAT.ConvertNextToCurrent()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.ConvertNextToCurrent()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetBouquetId(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetBouquetId(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetCountOfRecords(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetCountOfRecords(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetCountOfTableDescriptors(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetCountOfTableDescriptors(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetNextTable(IDVB_BAT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetNextTable(DirectShowLib.BDA.IDVB_BAT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetRecordCountOfDescriptors(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetRecordCountOfDescriptors(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetRecordDescriptorByIndex(Int32, Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetRecordDescriptorByIndex(System.Int32, System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetRecordDescriptorByTag(Int32, Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetRecordDescriptorByTag(System.Int32, System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetRecordOriginalNetworkId(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetRecordOriginalNetworkId(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetRecordTransportStreamId(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetRecordTransportStreamId(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetTableDescriptorByIndex(Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetTableDescriptorByIndex(System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetTableDescriptorByTag(Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetTableDescriptorByTag(System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.GetVersionNumber(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.GetVersionNumber(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.Initialize(ISectionList, IMpeg2Data)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.Initialize(DirectShowLib.ISectionList, DirectShowLib.IMpeg2Data)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.RegisterForNextTable(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.RegisterForNextTable(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_BAT.RegisterForWhenCurrent(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_BAT.RegisterForWhenCurrent(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CCSubstreamService</name>
        <fullName>DirectShowLib.BDA.CCSubstreamService</fullName>
        <methods />
      </type>
      <type>
        <name>SystemTuningSpaces</name>
        <fullName>DirectShowLib.BDA.SystemTuningSpaces</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SystemTuningSpaces..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.SystemTuningSpaces..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DigitalCableTuningSpace</name>
        <fullName>DirectShowLib.BDA.DigitalCableTuningSpace</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DigitalCableTuningSpace..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DigitalCableTuningSpace..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDAComparable</name>
        <fullName>DirectShowLib.BDA.IBDAComparable</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDAComparable.CompareEquivalent(Object, BDACompFlags, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDAComparable.CompareEquivalent(System.Object, DirectShowLib.BDA.BDACompFlags, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDAComparable.CompareExact(Object, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDAComparable.CompareExact(System.Object, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDAComparable.HashEquivalent(BDACompFlags, Int64)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDAComparable.HashEquivalent(DirectShowLib.BDA.BDACompFlags, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDAComparable.HashEquivalentIncremental(Int64, BDACompFlags, Int64)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDAComparable.HashEquivalentIncremental(System.Int64, DirectShowLib.BDA.BDACompFlags, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDAComparable.HashExact(Int64)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDAComparable.HashExact(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDAComparable.HashExactIncremental(Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDAComparable.HashExactIncremental(System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ProtType</name>
        <fullName>DirectShowLib.BDA.ProtType</fullName>
        <methods />
      </type>
      <type>
        <name>IATSCChannelTuneRequest</name>
        <fullName>DirectShowLib.BDA.IATSCChannelTuneRequest</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IATSCChannelTuneRequest.Clone(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCChannelTuneRequest.Clone(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCChannelTuneRequest.get_Channel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCChannelTuneRequest.get_Channel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCChannelTuneRequest.get_Components(IComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCChannelTuneRequest.get_Components(DirectShowLib.BDA.IComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCChannelTuneRequest.get_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCChannelTuneRequest.get_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCChannelTuneRequest.get_MinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCChannelTuneRequest.get_MinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCChannelTuneRequest.get_TuningSpace(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCChannelTuneRequest.get_TuningSpace(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCChannelTuneRequest.put_Channel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCChannelTuneRequest.put_Channel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCChannelTuneRequest.put_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCChannelTuneRequest.put_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCChannelTuneRequest.put_MinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCChannelTuneRequest.put_MinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVB_TOT</name>
        <fullName>DirectShowLib.BDA.IDVB_TOT</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVB_TOT.GetCountOfTableDescriptors(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_TOT.GetCountOfTableDescriptors(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_TOT.GetTableDescriptorByIndex(Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_TOT.GetTableDescriptorByIndex(System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_TOT.GetTableDescriptorByTag(Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_TOT.GetTableDescriptorByTag(System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_TOT.GetUTCTime(MpegDateAndTime)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_TOT.GetUTCTime(DirectShowLib.BDA.MpegDateAndTime)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_TOT.Initialize(ISectionList)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_TOT.Initialize(DirectShowLib.ISectionList)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_SignalProperties</name>
        <fullName>DirectShowLib.BDA.IBDA_SignalProperties</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_SignalProperties.GetNetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalProperties.GetNetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalProperties.GetSignalSource(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalProperties.GetSignalSource(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalProperties.GetTuningSpace(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalProperties.GetTuningSpace(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalProperties.PutNetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalProperties.PutNetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalProperties.PutSignalSource(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalProperties.PutSignalSource(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_SignalProperties.PutTuningSpace(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_SignalProperties.PutTuningSpace(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDvbSatelliteDeliverySystemDescriptor</name>
        <fullName>DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDvbSatelliteDeliverySystemDescriptor.GetFECInner(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor.GetFECInner(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbSatelliteDeliverySystemDescriptor.GetFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor.GetFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbSatelliteDeliverySystemDescriptor.GetLength(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor.GetLength(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbSatelliteDeliverySystemDescriptor.GetModulation(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor.GetModulation(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbSatelliteDeliverySystemDescriptor.GetOrbitalPosition(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor.GetOrbitalPosition(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbSatelliteDeliverySystemDescriptor.GetPolarization(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor.GetPolarization(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbSatelliteDeliverySystemDescriptor.GetSymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor.GetSymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbSatelliteDeliverySystemDescriptor.GetTag(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor.GetTag(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbSatelliteDeliverySystemDescriptor.GetWestEastFlag(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbSatelliteDeliverySystemDescriptor.GetWestEastFlag(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BfEnTvRat_GenericAttributes</name>
        <fullName>DirectShowLib.BDA.BfEnTvRat_GenericAttributes</fullName>
        <methods />
      </type>
      <type>
        <name>IBDA_AutoDemodulate</name>
        <fullName>DirectShowLib.BDA.IBDA_AutoDemodulate</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_AutoDemodulate.put_AutoDemodulate()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_AutoDemodulate.put_AutoDemodulate()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVBSTuningSpace</name>
        <fullName>DirectShowLib.BDA.DVBSTuningSpace</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVBSTuningSpace..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DVBSTuningSpace..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ITuneRequest</name>
        <fullName>DirectShowLib.BDA.ITuneRequest</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ITuneRequest.Clone(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuneRequest.Clone(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuneRequest.get_Components(IComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuneRequest.get_Components(DirectShowLib.BDA.IComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuneRequest.get_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuneRequest.get_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuneRequest.get_TuningSpace(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuneRequest.get_TuningSpace(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuneRequest.put_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuneRequest.put_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAuxInTuningSpace2</name>
        <fullName>DirectShowLib.BDA.IAuxInTuningSpace2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAuxInTuningSpace2.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.get_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.get_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.put_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.put_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAuxInTuningSpace2.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAuxInTuningSpace2.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CXDSData</name>
        <fullName>DirectShowLib.BDA.CXDSData</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CXDSData..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.CXDSData..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVBSLocator</name>
        <fullName>DirectShowLib.BDA.DVBSLocator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVBSLocator..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DVBSLocator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_Topology</name>
        <fullName>DirectShowLib.BDA.IBDA_Topology</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_Topology.CreatePin(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.CreatePin(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.CreateTopology(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.CreateTopology(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.DeletePin(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.DeletePin(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.GetControlNode(Int32, Int32, Int32, Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.GetControlNode(System.Int32, System.Int32, System.Int32, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.GetNodeDescriptors(Int32, Int32, BDANodeDescriptor[])</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.GetNodeDescriptors(System.Int32, System.Int32, DirectShowLib.BDA.BDANodeDescriptor[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.GetNodeInterfaces(Int32, Int32, Int32, Guid[])</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.GetNodeInterfaces(System.Int32, System.Int32, System.Int32, System.Guid[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.GetNodeTypes(Int32, Int32, Int32[])</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.GetNodeTypes(System.Int32, System.Int32, System.Int32[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.GetPinTypes(Int32, Int32, Int32[])</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.GetPinTypes(System.Int32, System.Int32, System.Int32[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.GetTemplateConnections(Int32, Int32, BDATemplateConnection[])</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.GetTemplateConnections(System.Int32, System.Int32, DirectShowLib.BDA.BDATemplateConnection[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.SetMediaType(Int32, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.SetMediaType(System.Int32, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_Topology.SetMedium(Int32, RegPinMedium)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_Topology.SetMedium(System.Int32, DirectShowLib.RegPinMedium)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Locator</name>
        <fullName>DirectShowLib.BDA.Locator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Locator..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.Locator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ModulationType</name>
        <fullName>DirectShowLib.BDA.ModulationType</fullName>
        <methods />
      </type>
      <type>
        <name>Polarisation</name>
        <fullName>DirectShowLib.BDA.Polarisation</fullName>
        <methods />
      </type>
      <type>
        <name>LanguageComponentType</name>
        <fullName>DirectShowLib.BDA.LanguageComponentType</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void LanguageComponentType..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.LanguageComponentType..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MulticastMode</name>
        <fullName>DirectShowLib.BDA.MulticastMode</fullName>
        <methods />
      </type>
      <type>
        <name>DVBTuningSpace</name>
        <fullName>DirectShowLib.BDA.DVBTuningSpace</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVBTuningSpace..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DVBTuningSpace..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AnalogRadioTuningSpace</name>
        <fullName>DirectShowLib.BDA.AnalogRadioTuningSpace</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AnalogRadioTuningSpace..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.AnalogRadioTuningSpace..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>XDSCodecTagProperties</name>
        <fullName>DirectShowLib.BDA.XDSCodecTagProperties</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void XDSCodecTagProperties..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.XDSCodecTagProperties..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_IPV6Filter</name>
        <fullName>DirectShowLib.BDA.IBDA_IPV6Filter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_IPV6Filter.GetMulticastList(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV6Filter.GetMulticastList(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPV6Filter.GetMulticastListSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV6Filter.GetMulticastListSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPV6Filter.GetMulticastMode(MulticastMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV6Filter.GetMulticastMode(DirectShowLib.BDA.MulticastMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPV6Filter.PutMulticastList(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV6Filter.PutMulticastList(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPV6Filter.PutMulticastMode(MulticastMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV6Filter.PutMulticastMode(DirectShowLib.BDA.MulticastMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ComponentStatus</name>
        <fullName>DirectShowLib.BDA.ComponentStatus</fullName>
        <methods />
      </type>
      <type>
        <name>ETFilterEncProperties</name>
        <fullName>DirectShowLib.BDA.ETFilterEncProperties</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ETFilterEncProperties..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ETFilterEncProperties..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMPEG2Component</name>
        <fullName>DirectShowLib.BDA.IMPEG2Component</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMPEG2Component.Clone(IComponent)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.Clone(DirectShowLib.BDA.IComponent)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.get_DescLangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.get_DescLangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.get_Description(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.get_Description(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.get_PCRPID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.get_PCRPID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.get_PID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.get_PID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.get_ProgramNumber(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.get_ProgramNumber(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.get_Status(ComponentStatus)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.get_Status(DirectShowLib.BDA.ComponentStatus)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.get_Type(IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.get_Type(DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.put_DescLangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.put_DescLangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.put_Description(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.put_Description(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.put_PCRPID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.put_PCRPID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.put_PID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.put_PID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.put_ProgramNumber(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.put_ProgramNumber(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.put_Status(ComponentStatus)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.put_Status(DirectShowLib.BDA.ComponentStatus)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2Component.put_Type(IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2Component.put_Type(DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ATSCComponentType</name>
        <fullName>DirectShowLib.BDA.ATSCComponentType</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ATSCComponentType..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ATSCComponentType..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAnalogRadioTuningSpace</name>
        <fullName>DirectShowLib.BDA.IAnalogRadioTuningSpace</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_MaxFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_MaxFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_MinFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_MinFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_Step(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_Step(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put_MaxFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put_MaxFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put_MinFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put_MinFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put_Step(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put_Step(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DigitalCableLocator</name>
        <fullName>DirectShowLib.BDA.DigitalCableLocator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DigitalCableLocator..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DigitalCableLocator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DTFilterTagProperties</name>
        <fullName>DirectShowLib.BDA.DTFilterTagProperties</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DTFilterTagProperties..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DTFilterTagProperties..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>FECMethod</name>
        <fullName>DirectShowLib.BDA.FECMethod</fullName>
        <methods />
      </type>
      <type>
        <name>IETFilterConfig</name>
        <fullName>DirectShowLib.BDA.IETFilterConfig</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IETFilterConfig.GetSecureChannelObject(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IETFilterConfig.GetSecureChannelObject(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IETFilterConfig.InitLicense(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IETFilterConfig.InitLicense(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>PidBits</name>
        <fullName>DirectShowLib.BDA.PidBits</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IDVBCLocator</name>
        <fullName>DirectShowLib.BDA.IDVBCLocator</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVBCLocator.Clone(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.Clone(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.get_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.get_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.get_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.get_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.get_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.get_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.get_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.get_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.get_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.get_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.get_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.get_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.get_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.get_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.put_CarrierFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.put_CarrierFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.put_InnerFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.put_InnerFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.put_InnerFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.put_InnerFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.put_Modulation(ModulationType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.put_Modulation(DirectShowLib.BDA.ModulationType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.put_OuterFEC(FECMethod)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.put_OuterFEC(DirectShowLib.BDA.FECMethod)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.put_OuterFECRate(BinaryConvolutionCodeRate)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.put_OuterFECRate(DirectShowLib.BDA.BinaryConvolutionCodeRate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBCLocator.put_SymbolRate(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBCLocator.put_SymbolRate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>EvalRat</name>
        <fullName>DirectShowLib.BDA.EvalRat</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void EvalRat..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.EvalRat..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IGenericDescriptor</name>
        <fullName>DirectShowLib.BDA.IGenericDescriptor</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IGenericDescriptor.GetBody(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IGenericDescriptor.GetBody(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGenericDescriptor.GetLength(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IGenericDescriptor.GetLength(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGenericDescriptor.GetTag(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IGenericDescriptor.GetTag(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IGenericDescriptor.Initialize(IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IGenericDescriptor.Initialize(System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMPEG2TuneRequest</name>
        <fullName>DirectShowLib.BDA.IMPEG2TuneRequest</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMPEG2TuneRequest.Clone(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequest.Clone(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2TuneRequest.get_Components(IComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequest.get_Components(DirectShowLib.BDA.IComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2TuneRequest.get_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequest.get_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2TuneRequest.get_ProgNo(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequest.get_ProgNo(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2TuneRequest.get_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequest.get_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2TuneRequest.get_TuningSpace(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequest.get_TuningSpace(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2TuneRequest.put_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequest.put_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2TuneRequest.put_ProgNo(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequest.put_ProgNo(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMPEG2TuneRequest.put_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequest.put_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>EventID</name>
        <fullName>DirectShowLib.BDA.EventID</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>TransmissionMode</name>
        <fullName>DirectShowLib.BDA.TransmissionMode</fullName>
        <methods />
      </type>
      <type>
        <name>DVBCLocator</name>
        <fullName>DirectShowLib.BDA.DVBCLocator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVBCLocator..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DVBCLocator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ATSCTuningSpace</name>
        <fullName>DirectShowLib.BDA.ATSCTuningSpace</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ATSCTuningSpace..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ATSCTuningSpace..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BDAChangeState</name>
        <fullName>DirectShowLib.BDA.BDAChangeState</fullName>
        <methods />
      </type>
      <type>
        <name>ETFilterTagProperties</name>
        <fullName>DirectShowLib.BDA.ETFilterTagProperties</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ETFilterTagProperties..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ETFilterTagProperties..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AnalogAudioComponentType</name>
        <fullName>DirectShowLib.BDA.AnalogAudioComponentType</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AnalogAudioComponentType..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.AnalogAudioComponentType..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IPersistTuneXml</name>
        <fullName>DirectShowLib.BDA.IPersistTuneXml</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPersistTuneXml.GetClassID(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPersistTuneXml.GetClassID(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistTuneXml.InitNew()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPersistTuneXml.InitNew()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistTuneXml.Load(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPersistTuneXml.Load(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistTuneXml.Save(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPersistTuneXml.Save(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_IPV4Filter</name>
        <fullName>DirectShowLib.BDA.IBDA_IPV4Filter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_IPV4Filter.GetMulticastList(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV4Filter.GetMulticastList(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPV4Filter.GetMulticastListSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV4Filter.GetMulticastListSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPV4Filter.GetMulticastMode(MulticastMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV4Filter.GetMulticastMode(DirectShowLib.BDA.MulticastMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPV4Filter.PutMulticastList(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV4Filter.PutMulticastList(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPV4Filter.PutMulticastMode(MulticastMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPV4Filter.PutMulticastMode(DirectShowLib.BDA.MulticastMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ChannelTuneRequest</name>
        <fullName>DirectShowLib.BDA.ChannelTuneRequest</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ChannelTuneRequest..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ChannelTuneRequest..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>HierarchyAlpha</name>
        <fullName>DirectShowLib.BDA.HierarchyAlpha</fullName>
        <methods />
      </type>
      <type>
        <name>IComponentType</name>
        <fullName>DirectShowLib.BDA.IComponentType</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IComponentType.Clone(IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.Clone(DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.get__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.get__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.get__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.get__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.get__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.get__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.get_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.get_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.get_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.get_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.get_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.get_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.get_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.get_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.get_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.get_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.put__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.put__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.put__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.put__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.put__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.put__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.put_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.put_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.put_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.put_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.put_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.put_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.put_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.put_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentType.put_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentType.put_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG2StreamType</name>
        <fullName>DirectShowLib.BDA.MPEG2StreamType</fullName>
        <methods />
      </type>
      <type>
        <name>ATSCLocator</name>
        <fullName>DirectShowLib.BDA.ATSCLocator</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ATSCLocator..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ATSCLocator..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDvbLogicalChannelDescriptor</name>
        <fullName>DirectShowLib.BDA.IDvbLogicalChannelDescriptor</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDvbLogicalChannelDescriptor.GetCountOfRecords(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbLogicalChannelDescriptor.GetCountOfRecords(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbLogicalChannelDescriptor.GetLength(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbLogicalChannelDescriptor.GetLength(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbLogicalChannelDescriptor.GetRecordLogicalChannelNumber(Byte, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbLogicalChannelDescriptor.GetRecordLogicalChannelNumber(System.Byte, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbLogicalChannelDescriptor.GetRecordServiceId(Byte, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbLogicalChannelDescriptor.GetRecordServiceId(System.Byte, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDvbLogicalChannelDescriptor.GetTag(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDvbLogicalChannelDescriptor.GetTag(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVBTuneRequest</name>
        <fullName>DirectShowLib.BDA.DVBTuneRequest</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DVBTuneRequest..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DVBTuneRequest..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IEvalRat</name>
        <fullName>DirectShowLib.BDA.IEvalRat</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IEvalRat.get_BlockedRatingAttributes(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEvalRat.get_BlockedRatingAttributes(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEvalRat.get_BlockUnRated(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEvalRat.get_BlockUnRated(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEvalRat.MostRestrictiveRating(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes, EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes, EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEvalRat.MostRestrictiveRating(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes, DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes, DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEvalRat.put_BlockedRatingAttributes(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEvalRat.put_BlockedRatingAttributes(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEvalRat.put_BlockUnRated(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEvalRat.put_BlockUnRated(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEvalRat.TestRating(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEvalRat.TestRating(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CreatePropBagOnRegKey</name>
        <fullName>DirectShowLib.BDA.CreatePropBagOnRegKey</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CreatePropBagOnRegKey..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.CreatePropBagOnRegKey..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IPMT</name>
        <fullName>DirectShowLib.BDA.IPMT</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPMT.ConvertNextToCurrent()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.ConvertNextToCurrent()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetCountOfRecords(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetCountOfRecords(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetCountOfTableDescriptors(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetCountOfTableDescriptors(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetNextTable(IPMT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetNextTable(DirectShowLib.BDA.IPMT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetPcrPid(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetPcrPid(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetProgramNumber(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetProgramNumber(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetRecordCountOfDescriptors(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetRecordCountOfDescriptors(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetRecordDescriptorByIndex(Int32, Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetRecordDescriptorByIndex(System.Int32, System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetRecordDescriptorByTag(Int32, Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetRecordDescriptorByTag(System.Int32, System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetRecordElementaryPid(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetRecordElementaryPid(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetRecordStreamType(Int32, Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetRecordStreamType(System.Int32, System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetTableDescriptorByIndex(Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetTableDescriptorByIndex(System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetTableDescriptorByTag(Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetTableDescriptorByTag(System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.GetVersionNumber(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.GetVersionNumber(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.Initialize(ISectionList, IMpeg2Data)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.Initialize(DirectShowLib.ISectionList, DirectShowLib.IMpeg2Data)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.QueryMPEInfo(MpeElement[], Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.QueryMPEInfo(DirectShowLib.BDA.MpeElement[], System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.QueryServiceGatewayInfo(DsmccElement[], Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.QueryServiceGatewayInfo(DirectShowLib.BDA.DsmccElement[], System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.RegisterForNextTable(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.RegisterForNextTable(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPMT.RegisterForWhenCurrent(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPMT.RegisterForWhenCurrent(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAnalogRadioTuningSpace2</name>
        <fullName>DirectShowLib.BDA.IAnalogRadioTuningSpace2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_MaxFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_MaxFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_MinFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_MinFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_Step(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_Step(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_MaxFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_MaxFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_MinFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_MinFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_Step(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_Step(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAnalogRadioTuningSpace2.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IAnalogRadioTuningSpace2.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ComponentCategory</name>
        <fullName>DirectShowLib.BDA.ComponentCategory</fullName>
        <methods />
      </type>
      <type>
        <name>IBDA_IPSinkInfo</name>
        <fullName>DirectShowLib.BDA.IBDA_IPSinkInfo</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_IPSinkInfo.get_AdapterDescription(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPSinkInfo.get_AdapterDescription(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPSinkInfo.get_AdapterIPAddress(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPSinkInfo.get_AdapterIPAddress(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_IPSinkInfo.get_MulticastList(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_IPSinkInfo.get_MulticastList(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDTFilter2</name>
        <fullName>DirectShowLib.BDA.IDTFilter2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDTFilter2.get_BlockedRatingAttributes(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.get_BlockedRatingAttributes(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.get_BlockUnRated(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.get_BlockUnRated(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.get_BlockUnRatedDelay(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.get_BlockUnRatedDelay(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.get_ChallengeUrl(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.get_ChallengeUrl(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.get_EvalRatObjOK(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.get_EvalRatObjOK(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.GetCurrLicenseExpDate(ProtType, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.GetCurrLicenseExpDate(DirectShowLib.BDA.ProtType, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.GetCurrRating(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.GetCurrRating(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.GetLastErrorCode()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.GetLastErrorCode()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.put_BlockedRatingAttributes(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.put_BlockedRatingAttributes(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.put_BlockUnRated(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.put_BlockUnRated(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter2.put_BlockUnRatedDelay(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter2.put_BlockUnRatedDelay(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>EnTvRat_GenericLevel</name>
        <fullName>DirectShowLib.BDA.EnTvRat_GenericLevel</fullName>
        <methods />
      </type>
      <type>
        <name>IChannelIDTuneRequest</name>
        <fullName>DirectShowLib.BDA.IChannelIDTuneRequest</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IChannelIDTuneRequest.Clone(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelIDTuneRequest.Clone(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelIDTuneRequest.get_ChannelID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelIDTuneRequest.get_ChannelID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelIDTuneRequest.get_Components(IComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelIDTuneRequest.get_Components(DirectShowLib.BDA.IComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelIDTuneRequest.get_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelIDTuneRequest.get_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelIDTuneRequest.get_TuningSpace(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelIDTuneRequest.get_TuningSpace(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelIDTuneRequest.put_ChannelID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelIDTuneRequest.put_ChannelID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelIDTuneRequest.put_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelIDTuneRequest.put_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IPersistTuneXmlUtility</name>
        <fullName>DirectShowLib.BDA.IPersistTuneXmlUtility</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPersistTuneXmlUtility.Deserialize(Object, Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPersistTuneXmlUtility.Deserialize(System.Object, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVB_EIT</name>
        <fullName>DirectShowLib.BDA.IDVB_EIT</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVB_EIT.ConvertNextToCurrent()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.ConvertNextToCurrent()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetCountOfRecords(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetCountOfRecords(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetLastTableId(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetLastTableId(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetNextTable(IDVB_EIT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetNextTable(DirectShowLib.BDA.IDVB_EIT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetOriginalNetworkId(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetOriginalNetworkId(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetRecordCountOfDescriptors(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetRecordCountOfDescriptors(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetRecordDescriptorByIndex(Int32, Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetRecordDescriptorByIndex(System.Int32, System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetRecordDescriptorByTag(Int32, Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetRecordDescriptorByTag(System.Int32, System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetRecordDuration(Int32, MpegDuration)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetRecordDuration(System.Int32, DirectShowLib.BDA.MpegDuration)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetRecordEventId(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetRecordEventId(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetRecordFreeCAMode(Int32, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetRecordFreeCAMode(System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetRecordRunningStatus(Int32, RunningStatus)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetRecordRunningStatus(System.Int32, DirectShowLib.BDA.RunningStatus)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetRecordStartTime(Int32, MpegDateAndTime)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetRecordStartTime(System.Int32, DirectShowLib.BDA.MpegDateAndTime)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetSegmentLastSectionNumber(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetSegmentLastSectionNumber(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetServiceId(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetServiceId(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetTransportStreamId(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetTransportStreamId(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetVersionHash(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetVersionHash(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.GetVersionNumber(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.GetVersionNumber(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.Initialize(ISectionList, IMpeg2Data)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.Initialize(DirectShowLib.ISectionList, DirectShowLib.IMpeg2Data)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.RegisterForNextTable(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.RegisterForNextTable(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_EIT.RegisterForWhenCurrent(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_EIT.RegisterForWhenCurrent(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Components</name>
        <fullName>DirectShowLib.BDA.Components</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Components..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.Components..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MpegDateAndTime</name>
        <fullName>DirectShowLib.BDA.MpegDateAndTime</fullName>
        <kind>struct</kind>
        <methods>
          <method>
            <name>DateTime MpegDateAndTime.ToDateTime()</name>
            <fullName>System.DateTime DirectShowLib.BDA.MpegDateAndTime.ToDateTime()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AnalogTVTuningSpace</name>
        <fullName>DirectShowLib.BDA.AnalogTVTuningSpace</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AnalogTVTuningSpace..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.AnalogTVTuningSpace..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVBTuneRequest</name>
        <fullName>DirectShowLib.BDA.IDVBTuneRequest</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVBTuneRequest.Clone(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.Clone(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.get_Components(IComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.get_Components(DirectShowLib.BDA.IComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.get_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.get_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.get_ONID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.get_ONID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.get_SID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.get_SID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.get_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.get_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.get_TuningSpace(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.get_TuningSpace(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.put_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.put_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.put_ONID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.put_ONID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.put_SID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.put_SID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVBTuneRequest.put_TSID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVBTuneRequest.put_TSID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>XDSCodecProperties</name>
        <fullName>DirectShowLib.BDA.XDSCodecProperties</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void XDSCodecProperties..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.XDSCodecProperties..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDVB_NIT</name>
        <fullName>DirectShowLib.BDA.IDVB_NIT</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDVB_NIT.ConvertNextToCurrent()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.ConvertNextToCurrent()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetCountOfRecords(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetCountOfRecords(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetCountOfTableDescriptors(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetCountOfTableDescriptors(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetNetworkId(Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetNetworkId(System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetNextTable(IDVB_NIT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetNextTable(DirectShowLib.BDA.IDVB_NIT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetRecordCountOfDescriptors(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetRecordCountOfDescriptors(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetRecordDescriptorByIndex(Int32, Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetRecordDescriptorByIndex(System.Int32, System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetRecordDescriptorByTag(Int32, Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetRecordDescriptorByTag(System.Int32, System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetRecordOriginalNetworkId(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetRecordOriginalNetworkId(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetRecordTransportStreamId(Int32, Int16)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetRecordTransportStreamId(System.Int32, System.Int16)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetTableDescriptorByIndex(Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetTableDescriptorByIndex(System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetTableDescriptorByTag(Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetTableDescriptorByTag(System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetVersionHash(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetVersionHash(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.GetVersionNumber(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.GetVersionNumber(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.Initialize(ISectionList, IMpeg2Data)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.Initialize(DirectShowLib.ISectionList, DirectShowLib.IMpeg2Data)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.RegisterForNextTable(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.RegisterForNextTable(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDVB_NIT.RegisterForWhenCurrent(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDVB_NIT.RegisterForWhenCurrent(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IComponents</name>
        <fullName>DirectShowLib.BDA.IComponents</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IComponents.Add(IComponent, Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponents.Add(DirectShowLib.BDA.IComponent, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponents.Clone(IComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponents.Clone(DirectShowLib.BDA.IComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponents.EnumComponents(IEnumComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponents.EnumComponents(DirectShowLib.BDA.IEnumComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponents.get__NewEnum(IEnumVARIANT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponents.get__NewEnum(System.Runtime.InteropServices.ComTypes.IEnumVARIANT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponents.get_Count(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponents.get_Count(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponents.get_Item(Object, IComponent)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponents.get_Item(System.Object, DirectShowLib.BDA.IComponent)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponents.Remove(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponents.Remove(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ICAT</name>
        <fullName>DirectShowLib.BDA.ICAT</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ICAT.ConvertNextToCurrent()</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICAT.ConvertNextToCurrent()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICAT.GetCountOfTableDescriptors(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICAT.GetCountOfTableDescriptors(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICAT.GetNextTable(Int32, ICAT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICAT.GetNextTable(System.Int32, DirectShowLib.BDA.ICAT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICAT.GetTableDescriptorByIndex(Int32, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICAT.GetTableDescriptorByIndex(System.Int32, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICAT.GetTableDescriptorByTag(Byte, DsInt, IGenericDescriptor)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICAT.GetTableDescriptorByTag(System.Byte, DirectShowLib.DsInt, DirectShowLib.BDA.IGenericDescriptor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICAT.GetVersionNumber(Byte)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICAT.GetVersionNumber(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICAT.Initialize(ISectionList, IMpeg2Data)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICAT.Initialize(DirectShowLib.ISectionList, DirectShowLib.IMpeg2Data)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICAT.RegisterForNextTable(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICAT.RegisterForNextTable(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ICAT.RegisterForWhenCurrent(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ICAT.RegisterForWhenCurrent(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IComponentsNew</name>
        <fullName>DirectShowLib.BDA.IComponentsNew</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IComponentsNew.Add(IComponent, Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentsNew.Add(DirectShowLib.BDA.IComponent, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentsNew.Clone(IComponentsNew)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentsNew.Clone(DirectShowLib.BDA.IComponentsNew)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentsNew.EnumComponents(IEnumComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentsNew.EnumComponents(DirectShowLib.BDA.IEnumComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentsNew.get__NewEnum(IEnumVARIANT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentsNew.get__NewEnum(System.Runtime.InteropServices.ComTypes.IEnumVARIANT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentsNew.get_Count(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentsNew.get_Count(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentsNew.get_Item(Object, IComponent)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentsNew.get_Item(System.Object, DirectShowLib.BDA.IComponent)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentsNew.put_Item(Object, IComponent)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentsNew.put_Item(System.Object, DirectShowLib.BDA.IComponent)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentsNew.Remove(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentsNew.Remove(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBroadcastEvent</name>
        <fullName>DirectShowLib.BDA.IBroadcastEvent</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBroadcastEvent.Fire(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBroadcastEvent.Fire(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IChannelTuneRequest</name>
        <fullName>DirectShowLib.BDA.IChannelTuneRequest</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IChannelTuneRequest.Clone(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelTuneRequest.Clone(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelTuneRequest.get_Channel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelTuneRequest.get_Channel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelTuneRequest.get_Components(IComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelTuneRequest.get_Components(DirectShowLib.BDA.IComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelTuneRequest.get_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelTuneRequest.get_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelTuneRequest.get_TuningSpace(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelTuneRequest.get_TuningSpace(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelTuneRequest.put_Channel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelTuneRequest.put_Channel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IChannelTuneRequest.put_Locator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IChannelTuneRequest.put_Locator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DTFilterEncProperties</name>
        <fullName>DirectShowLib.BDA.DTFilterEncProperties</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DTFilterEncProperties..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.DTFilterEncProperties..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BinaryConvolutionCodeRate</name>
        <fullName>DirectShowLib.BDA.BinaryConvolutionCodeRate</fullName>
        <methods />
      </type>
      <type>
        <name>IPersistTuneXmlUtility2</name>
        <fullName>DirectShowLib.BDA.IPersistTuneXmlUtility2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPersistTuneXmlUtility2.Deserialize(Object, Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPersistTuneXmlUtility2.Deserialize(System.Object, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IPersistTuneXmlUtility2.Serialize(ITuneRequest, String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IPersistTuneXmlUtility2.Serialize(DirectShowLib.BDA.ITuneRequest, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ITunerCap</name>
        <fullName>DirectShowLib.BDA.ITunerCap</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ITunerCap.get_AuxInputCount(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITunerCap.get_AuxInputCount(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITunerCap.get_SupportedNetworkTypes(Int32, Int32, Guid[])</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITunerCap.get_SupportedNetworkTypes(System.Int32, System.Int32, System.Guid[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITunerCap.get_SupportedVideoFormats(AMTunerModeType, AnalogVideoStandard)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITunerCap.get_SupportedVideoFormats(DirectShowLib.AMTunerModeType, DirectShowLib.AnalogVideoStandard)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG2TuneRequest</name>
        <fullName>DirectShowLib.BDA.MPEG2TuneRequest</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG2TuneRequest..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.MPEG2TuneRequest..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG2TuneRequestFactory</name>
        <fullName>DirectShowLib.BDA.MPEG2TuneRequestFactory</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG2TuneRequestFactory..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.MPEG2TuneRequestFactory..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ChannelIDTuningSpace</name>
        <fullName>DirectShowLib.BDA.ChannelIDTuningSpace</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ChannelIDTuningSpace..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ChannelIDTuningSpace..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>RunningStatus</name>
        <fullName>DirectShowLib.BDA.RunningStatus</fullName>
        <methods />
      </type>
      <type>
        <name>PersistTuneXmlUtility</name>
        <fullName>DirectShowLib.BDA.PersistTuneXmlUtility</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void PersistTuneXmlUtility..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.PersistTuneXmlUtility..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ATSCChannelTuneRequest</name>
        <fullName>DirectShowLib.BDA.ATSCChannelTuneRequest</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ATSCChannelTuneRequest..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.ATSCChannelTuneRequest..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>GuardInterval</name>
        <fullName>DirectShowLib.BDA.GuardInterval</fullName>
        <methods />
      </type>
      <type>
        <name>BDACompFlags</name>
        <fullName>DirectShowLib.BDA.BDACompFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IBDA_LNBInfo</name>
        <fullName>DirectShowLib.BDA.IBDA_LNBInfo</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_LNBInfo.get_HighLowSwitchFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_LNBInfo.get_HighLowSwitchFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_LNBInfo.get_LocalOscilatorFrequencyHighBand(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_LNBInfo.get_LocalOscilatorFrequencyHighBand(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_LNBInfo.get_LocalOscilatorFrequencyLowBand(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_LNBInfo.get_LocalOscilatorFrequencyLowBand(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_LNBInfo.put_HighLowSwitchFrequency(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_LNBInfo.put_HighLowSwitchFrequency(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_LNBInfo.put_LocalOscilatorFrequencyHighBand(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_LNBInfo.put_LocalOscilatorFrequencyHighBand(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_LNBInfo.put_LocalOscilatorFrequencyLowBand(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_LNBInfo.put_LocalOscilatorFrequencyLowBand(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IATSCComponentType</name>
        <fullName>DirectShowLib.BDA.IATSCComponentType</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IATSCComponentType.Clone(IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.Clone(DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get_Flags(ATSCComponentTypeFlags)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get_Flags(DirectShowLib.BDA.ATSCComponentTypeFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get_LangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get_LangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.get_StreamType(MPEG2StreamType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.get_StreamType(DirectShowLib.BDA.MPEG2StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put_Flags(ATSCComponentTypeFlags)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put_Flags(DirectShowLib.BDA.ATSCComponentTypeFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put_LangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put_LangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IATSCComponentType.put_StreamType(MPEG2StreamType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IATSCComponentType.put_StreamType(DirectShowLib.BDA.MPEG2StreamType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBroadcastEventEx</name>
        <fullName>DirectShowLib.BDA.IBroadcastEventEx</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBroadcastEventEx.Fire(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBroadcastEventEx.Fire(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBroadcastEventEx.FireEx(Guid, Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBroadcastEventEx.FireEx(System.Guid, System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ILanguageComponentType</name>
        <fullName>DirectShowLib.BDA.ILanguageComponentType</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ILanguageComponentType.Clone(IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.Clone(DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.get__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.get__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.get__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.get__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.get__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.get__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.get_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.get_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.get_LangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.get_LangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.get_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.get_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.get_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.get_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.get_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.get_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.get_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.get_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.put__MediaFormatType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.put__MediaFormatType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.put__MediaMajorType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.put__MediaMajorType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.put__MediaSubType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.put__MediaSubType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.put_Category(ComponentCategory)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.put_Category(DirectShowLib.BDA.ComponentCategory)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.put_LangID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.put_LangID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.put_MediaFormatType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.put_MediaFormatType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.put_MediaMajorType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.put_MediaMajorType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.put_MediaSubType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.put_MediaSubType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ILanguageComponentType.put_MediaType(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ILanguageComponentType.put_MediaType(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDTFilter3</name>
        <fullName>DirectShowLib.BDA.IDTFilter3</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDTFilter3.get_BlockedRatingAttributes(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.get_BlockedRatingAttributes(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.get_BlockUnRated(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.get_BlockUnRated(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.get_BlockUnRatedDelay(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.get_BlockUnRatedDelay(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.get_ChallengeUrl(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.get_ChallengeUrl(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.get_EvalRatObjOK(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.get_EvalRatObjOK(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.GetCurrLicenseExpDate(ProtType, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.GetCurrLicenseExpDate(DirectShowLib.BDA.ProtType, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.GetCurrRating(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.GetCurrRating(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.GetLastErrorCode()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.GetLastErrorCode()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.GetProtectionType(ProtType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.GetProtectionType(DirectShowLib.BDA.ProtType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.LicenseHasExpirationDate(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.LicenseHasExpirationDate(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.put_BlockedRatingAttributes(EnTvRat_System, EnTvRat_GenericLevel, BfEnTvRat_GenericAttributes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.put_BlockedRatingAttributes(DirectShowLib.BDA.EnTvRat_System, DirectShowLib.BDA.EnTvRat_GenericLevel, DirectShowLib.BDA.BfEnTvRat_GenericAttributes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.put_BlockUnRated(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.put_BlockUnRated(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.put_BlockUnRatedDelay(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.put_BlockUnRatedDelay(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDTFilter3.SetRights(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilter3.SetRights(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ITuningSpaceContainer</name>
        <fullName>DirectShowLib.BDA.ITuningSpaceContainer</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 ITuningSpaceContainer._TuningSpacesForCLSID(Guid, ITuningSpaces)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer._TuningSpacesForCLSID(System.Guid, DirectShowLib.BDA.ITuningSpaces)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.Add(ITuningSpace, Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.Add(DirectShowLib.BDA.ITuningSpace, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.FindID(ITuningSpace, Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.FindID(DirectShowLib.BDA.ITuningSpace, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.get__NewEnum(IEnumVARIANT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.get__NewEnum(System.Runtime.InteropServices.ComTypes.IEnumVARIANT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.get_Count(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.get_Count(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.get_EnumTuningSpaces(IEnumTuningSpaces)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.get_EnumTuningSpaces(DirectShowLib.BDA.IEnumTuningSpaces)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.get_Item(Object, ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.get_Item(System.Object, DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.get_MaxCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.get_MaxCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.put_Item(Object, ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.put_Item(System.Object, DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.put_MaxCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.put_MaxCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.Remove(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.Remove(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.TuningSpacesForCLSID(String, ITuningSpaces)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.TuningSpacesForCLSID(System.String, DirectShowLib.BDA.ITuningSpaces)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 ITuningSpaceContainer.TuningSpacesForName(String, ITuningSpaces)</name>
            <fullName>System.Int32 DirectShowLib.BDA.ITuningSpaceContainer.TuningSpacesForName(System.String, DirectShowLib.BDA.ITuningSpaces)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDTFilterConfig</name>
        <fullName>DirectShowLib.BDA.IDTFilterConfig</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDTFilterConfig.GetSecureChannelObject(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDTFilterConfig.GetSecureChannelObject(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMPEG2TuneRequestFactory</name>
        <fullName>DirectShowLib.BDA.IMPEG2TuneRequestFactory</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMPEG2TuneRequestFactory.CreateTuneRequest(ITuningSpace, IMPEG2TuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IMPEG2TuneRequestFactory.CreateTuneRequest(DirectShowLib.BDA.ITuningSpace, DirectShowLib.BDA.IMPEG2TuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IEnumComponents</name>
        <fullName>DirectShowLib.BDA.IEnumComponents</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IEnumComponents.Clone(IEnumComponents)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumComponents.Clone(DirectShowLib.BDA.IEnumComponents)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumComponents.Next(Int32, IComponent[], IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumComponents.Next(System.Int32, DirectShowLib.BDA.IComponent[], System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumComponents.Reset()</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumComponents.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumComponents.Skip(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IEnumComponents.Skip(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IComponentTypes</name>
        <fullName>DirectShowLib.BDA.IComponentTypes</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IComponentTypes.Add(IComponentType, Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentTypes.Add(DirectShowLib.BDA.IComponentType, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentTypes.Clone(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentTypes.Clone(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentTypes.EnumComponentTypes(IEnumComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentTypes.EnumComponentTypes(DirectShowLib.BDA.IEnumComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentTypes.get__NewEnum(IEnumVARIANT)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentTypes.get__NewEnum(System.Runtime.InteropServices.ComTypes.IEnumVARIANT)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentTypes.get_Count(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentTypes.get_Count(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentTypes.get_Item(Object, IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentTypes.get_Item(System.Object, DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentTypes.put_Item(Object, IComponentType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentTypes.put_Item(System.Object, DirectShowLib.BDA.IComponentType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IComponentTypes.Remove(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IComponentTypes.Remove(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TIFLoad</name>
        <fullName>DirectShowLib.BDA.TIFLoad</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void TIFLoad..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.TIFLoad..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BDANodeDescriptor</name>
        <fullName>DirectShowLib.BDA.BDANodeDescriptor</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>MediaSampleContent</name>
        <fullName>DirectShowLib.BDA.MediaSampleContent</fullName>
        <methods />
      </type>
      <type>
        <name>SpectralInversion</name>
        <fullName>DirectShowLib.BDA.SpectralInversion</fullName>
        <methods />
      </type>
      <type>
        <name>TuningSpace</name>
        <fullName>DirectShowLib.BDA.TuningSpace</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void TuningSpace..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.TuningSpace..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG2ComponentType</name>
        <fullName>DirectShowLib.BDA.MPEG2ComponentType</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG2ComponentType..ctor()</name>
            <fullName>System.Void DirectShowLib.BDA.MPEG2ComponentType..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IBDA_EthernetFilter</name>
        <fullName>DirectShowLib.BDA.IBDA_EthernetFilter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IBDA_EthernetFilter.GetMulticastList(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_EthernetFilter.GetMulticastList(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_EthernetFilter.GetMulticastListSize(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_EthernetFilter.GetMulticastListSize(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_EthernetFilter.GetMulticastMode(MulticastMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_EthernetFilter.GetMulticastMode(DirectShowLib.BDA.MulticastMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_EthernetFilter.PutMulticastList(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_EthernetFilter.PutMulticastList(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IBDA_EthernetFilter.PutMulticastMode(MulticastMode)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IBDA_EthernetFilter.PutMulticastMode(DirectShowLib.BDA.MulticastMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IDigitalCableTuningSpace</name>
        <fullName>DirectShowLib.BDA.IDigitalCableTuningSpace</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDigitalCableTuningSpace.Clone(ITuningSpace)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.Clone(DirectShowLib.BDA.ITuningSpace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.CreateTuneRequest(ITuneRequest)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.CreateTuneRequest(DirectShowLib.BDA.ITuneRequest)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.EnumCategoryGUIDs(Object)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.EnumCategoryGUIDs(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.EnumDeviceMonikers(IEnumMoniker)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.EnumDeviceMonikers(System.Runtime.InteropServices.ComTypes.IEnumMoniker)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_CLSID(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_CLSID(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_InputType(TunerInputType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_InputType(DirectShowLib.TunerInputType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MaxChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MaxChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MaxMajorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MaxMajorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MaxMinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MaxMinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MaxPhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MaxPhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MaxSourceID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MaxSourceID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MinChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MinChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MinMajorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MinMajorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MinMinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MinMinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MinPhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MinPhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_MinSourceID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_MinSourceID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.get_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.get_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put__NetworkType(Guid)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put__NetworkType(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_CountryCode(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_CountryCode(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_DefaultLocator(ILocator)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_DefaultLocator(DirectShowLib.BDA.ILocator)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_DefaultPreferredComponentTypes(IComponentTypes)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_DefaultPreferredComponentTypes(DirectShowLib.BDA.IComponentTypes)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_FrequencyMapping(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_FrequencyMapping(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_FriendlyName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_FriendlyName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_InputType(TunerInputType)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_InputType(DirectShowLib.TunerInputType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MaxChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MaxChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MaxMajorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MaxMajorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MaxMinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MaxMinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MaxPhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MaxPhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MaxSourceID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MaxSourceID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MinChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MinChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MinMajorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MinMajorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MinMinorChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MinMinorChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MinPhysicalChannel(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MinPhysicalChannel(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_MinSourceID(Int32)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_MinSourceID(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_NetworkType(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_NetworkType(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDigitalCableTuningSpace.put_UniqueName(String)</name>
            <fullName>System.Int32 DirectShowLib.BDA.IDigitalCableTuningSpace.put_UniqueName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IQualityControl</name>
        <fullName>DirectShowLib.IQualityControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IQualityControl.Notify(IBaseFilter, Quality)</name>
            <fullName>System.Int32 DirectShowLib.IQualityControl.Notify(DirectShowLib.IBaseFilter, DirectShowLib.Quality)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IQualityControl.SetSink(IQualityControl)</name>
            <fullName>System.Int32 DirectShowLib.IQualityControl.SetSink(DirectShowLib.IQualityControl)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MediaSubType</name>
        <fullName>DirectShowLib.MediaSubType</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>CaptureGraphBuilder</name>
        <fullName>DirectShowLib.CaptureGraphBuilder</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void CaptureGraphBuilder..ctor()</name>
            <fullName>System.Void DirectShowLib.CaptureGraphBuilder..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DDColorControl</name>
        <fullName>DirectShowLib.DDColorControl</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DDColorControl..ctor()</name>
            <fullName>System.Void DirectShowLib.DDColorControl..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ProtoFilterGraph</name>
        <fullName>DirectShowLib.ProtoFilterGraph</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ProtoFilterGraph..ctor()</name>
            <fullName>System.Void DirectShowLib.ProtoFilterGraph..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMBufferNegotiation</name>
        <fullName>DirectShowLib.IAMBufferNegotiation</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMBufferNegotiation.GetAllocatorProperties(AllocatorProperties)</name>
            <fullName>System.Int32 DirectShowLib.IAMBufferNegotiation.GetAllocatorProperties(DirectShowLib.AllocatorProperties)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMBufferNegotiation.SuggestAllocatorProperties(AllocatorProperties)</name>
            <fullName>System.Int32 DirectShowLib.IAMBufferNegotiation.SuggestAllocatorProperties(DirectShowLib.AllocatorProperties)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IRegisterServiceProvider</name>
        <fullName>DirectShowLib.IRegisterServiceProvider</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IRegisterServiceProvider.RegisterService(Guid, Object)</name>
            <fullName>System.Int32 DirectShowLib.IRegisterServiceProvider.RegisterService(System.Guid, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BitmapInfo</name>
        <fullName>DirectShowLib.BitmapInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IAMClockSlave</name>
        <fullName>DirectShowLib.IAMClockSlave</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMClockSlave.GetErrorTolerance(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMClockSlave.GetErrorTolerance(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMClockSlave.SetErrorTolerance(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMClockSlave.SetErrorTolerance(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMPluginControl</name>
        <fullName>DirectShowLib.IAMPluginControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMPluginControl.GetDisabledByIndex(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IAMPluginControl.GetDisabledByIndex(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMPluginControl.GetPreferredClsid(Guid, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IAMPluginControl.GetPreferredClsid(System.Guid, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMPluginControl.GetPreferredClsidByIndex(Int32, Guid, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IAMPluginControl.GetPreferredClsidByIndex(System.Int32, System.Guid, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMPluginControl.IsDisabled(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IAMPluginControl.IsDisabled(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMPluginControl.IsLegacyDisabled(String)</name>
            <fullName>System.Int32 DirectShowLib.IAMPluginControl.IsLegacyDisabled(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMPluginControl.SetDisabled(Guid, Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMPluginControl.SetDisabled(System.Guid, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMPluginControl.SetPreferredClsid(Guid, DsGuid)</name>
            <fullName>System.Int32 DirectShowLib.IAMPluginControl.SetPreferredClsid(System.Guid, DirectShowLib.DsGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ETFilter</name>
        <fullName>DirectShowLib.ETFilter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void ETFilter..ctor()</name>
            <fullName>System.Void DirectShowLib.ETFilter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IPinFlowControl</name>
        <fullName>DirectShowLib.IPinFlowControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IPinFlowControl.Block(AMPinFlowControl, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IPinFlowControl.Block(DirectShowLib.AMPinFlowControl, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMRBitmap</name>
        <fullName>DirectShowLib.VMRBitmap</fullName>
        <methods />
      </type>
      <type>
        <name>AudioRender</name>
        <fullName>DirectShowLib.AudioRender</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void AudioRender..ctor()</name>
            <fullName>System.Void DirectShowLib.AudioRender..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SampleGrabber</name>
        <fullName>DirectShowLib.SampleGrabber</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SampleGrabber..ctor()</name>
            <fullName>System.Void DirectShowLib.SampleGrabber..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>FilterGraphNoThread</name>
        <fullName>DirectShowLib.FilterGraphNoThread</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void FilterGraphNoThread..ctor()</name>
            <fullName>System.Void DirectShowLib.FilterGraphNoThread..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>FileWriter</name>
        <fullName>DirectShowLib.FileWriter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void FileWriter..ctor()</name>
            <fullName>System.Void DirectShowLib.FileWriter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SeekingPassThru</name>
        <fullName>DirectShowLib.SeekingPassThru</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SeekingPassThru..ctor()</name>
            <fullName>System.Void DirectShowLib.SeekingPassThru..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IFilterMapper2</name>
        <fullName>DirectShowLib.IFilterMapper2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFilterMapper2.CreateCategory(Guid, Merit, String)</name>
            <fullName>System.Int32 DirectShowLib.IFilterMapper2.CreateCategory(System.Guid, DirectShowLib.Merit, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterMapper2.EnumMatchingFilters(IEnumMoniker, Int32, Boolean, Merit, Boolean, Int32, Guid[], RegPinMedium, DsGuid, Boolean, Boolean, Int32, Guid[], RegPinMedium, DsGuid)</name>
            <fullName>System.Int32 DirectShowLib.IFilterMapper2.EnumMatchingFilters(System.Runtime.InteropServices.ComTypes.IEnumMoniker, System.Int32, System.Boolean, DirectShowLib.Merit, System.Boolean, System.Int32, System.Guid[], DirectShowLib.RegPinMedium, DirectShowLib.DsGuid, System.Boolean, System.Boolean, System.Int32, System.Guid[], DirectShowLib.RegPinMedium, DirectShowLib.DsGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterMapper2.RegisterFilter(Guid, String, IMoniker, DsGuid, String, Object)</name>
            <fullName>System.Int32 DirectShowLib.IFilterMapper2.RegisterFilter(System.Guid, System.String, System.Runtime.InteropServices.ComTypes.IMoniker, DirectShowLib.DsGuid, System.String, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterMapper2.UnregisterFilter(Guid, String, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IFilterMapper2.UnregisterFilter(System.Guid, System.String, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BroadcastEventService</name>
        <fullName>DirectShowLib.BroadcastEventService</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void BroadcastEventService..ctor()</name>
            <fullName>System.Void DirectShowLib.BroadcastEventService..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPEG1Splitter</name>
        <fullName>DirectShowLib.MPEG1Splitter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEG1Splitter..ctor()</name>
            <fullName>System.Void DirectShowLib.MPEG1Splitter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMCrossbar</name>
        <fullName>DirectShowLib.IAMCrossbar</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMCrossbar.CanRoute(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMCrossbar.CanRoute(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMCrossbar.get_CrossbarPinInfo(Boolean, Int32, Int32, PhysicalConnectorType)</name>
            <fullName>System.Int32 DirectShowLib.IAMCrossbar.get_CrossbarPinInfo(System.Boolean, System.Int32, System.Int32, DirectShowLib.PhysicalConnectorType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMCrossbar.get_IsRoutedTo(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMCrossbar.get_IsRoutedTo(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMCrossbar.get_PinCounts(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMCrossbar.get_PinCounts(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMCrossbar.Route(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMCrossbar.Route(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRDeinterlaceControl</name>
        <fullName>DirectShowLib.IVMRDeinterlaceControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRDeinterlaceControl.GetActualDeinterlaceMode(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl.GetActualDeinterlaceMode(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl.GetDeinterlaceMode(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl.GetDeinterlaceMode(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl.GetDeinterlaceModeCaps(Guid, VMRVideoDesc, VMRDeinterlaceCaps)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl.GetDeinterlaceModeCaps(System.Guid, DirectShowLib.VMRVideoDesc, DirectShowLib.VMRDeinterlaceCaps)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl.GetDeinterlacePrefs(VMRDeinterlacePrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl.GetDeinterlacePrefs(DirectShowLib.VMRDeinterlacePrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl.GetNumberOfDeinterlaceModes(VMRVideoDesc, Int32, Guid[])</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl.GetNumberOfDeinterlaceModes(DirectShowLib.VMRVideoDesc, System.Int32, System.Guid[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl.SetDeinterlaceMode(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl.SetDeinterlaceMode(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRDeinterlaceControl.SetDeinterlacePrefs(VMRDeinterlacePrefs)</name>
            <fullName>System.Int32 DirectShowLib.IVMRDeinterlaceControl.SetDeinterlacePrefs(DirectShowLib.VMRDeinterlacePrefs)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IConfigAsfWriter</name>
        <fullName>DirectShowLib.IConfigAsfWriter</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IConfigAsfWriter.ConfigureFilterUsingProfile(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter.ConfigureFilterUsingProfile(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter.ConfigureFilterUsingProfileGuid(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter.ConfigureFilterUsingProfileGuid(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter.ConfigureFilterUsingProfileId(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter.ConfigureFilterUsingProfileId(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter.GetCurrentProfile(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter.GetCurrentProfile(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter.GetCurrentProfileGuid(Guid)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter.GetCurrentProfileGuid(System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter.GetCurrentProfileId(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter.GetCurrentProfileId(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter.GetIndexMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter.GetIndexMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IConfigAsfWriter.SetIndexMode(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IConfigAsfWriter.SetIndexMode(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IVMRWindowlessControl</name>
        <fullName>DirectShowLib.IVMRWindowlessControl</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRWindowlessControl.DisplayModeChanged()</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.DisplayModeChanged()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.GetAspectRatioMode(VMRAspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.GetAspectRatioMode(DirectShowLib.VMRAspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.GetBorderColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.GetBorderColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.GetColorKey(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.GetColorKey(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.GetCurrentImage(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.GetCurrentImage(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.GetMaxIdealVideoSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.GetMaxIdealVideoSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.GetMinIdealVideoSize(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.GetMinIdealVideoSize(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.GetNativeVideoSize(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.GetNativeVideoSize(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.GetVideoPosition(DsRect, DsRect)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.GetVideoPosition(DirectShowLib.DsRect, DirectShowLib.DsRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.RepaintVideo(IntPtr, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.RepaintVideo(System.IntPtr, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.SetAspectRatioMode(VMRAspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.SetAspectRatioMode(DirectShowLib.VMRAspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.SetBorderColor(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.SetBorderColor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.SetColorKey(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.SetColorKey(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.SetVideoClippingWindow(IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.SetVideoClippingWindow(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRWindowlessControl.SetVideoPosition(DsRect, DsRect)</name>
            <fullName>System.Int32 DirectShowLib.IVMRWindowlessControl.SetVideoPosition(DirectShowLib.DsRect, DirectShowLib.DsRect)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IAMStreamConfig</name>
        <fullName>DirectShowLib.IAMStreamConfig</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMStreamConfig.GetFormat(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamConfig.GetFormat(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStreamConfig.GetNumberOfCapabilities(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamConfig.GetNumberOfCapabilities(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStreamConfig.GetStreamCaps(Int32, AMMediaType, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamConfig.GetStreamCaps(System.Int32, DirectShowLib.AMMediaType, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMStreamConfig.SetFormat(AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.IAMStreamConfig.SetFormat(DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VMRDeinterlaceCaps</name>
        <fullName>DirectShowLib.VMRDeinterlaceCaps</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IFilterMapper3</name>
        <fullName>DirectShowLib.IFilterMapper3</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IFilterMapper3.CreateCategory(Guid, Merit, String)</name>
            <fullName>System.Int32 DirectShowLib.IFilterMapper3.CreateCategory(System.Guid, DirectShowLib.Merit, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterMapper3.EnumMatchingFilters(IEnumMoniker, Int32, Boolean, Merit, Boolean, Int32, Guid[], RegPinMedium, DsGuid, Boolean, Boolean, Int32, Guid[], RegPinMedium, DsGuid)</name>
            <fullName>System.Int32 DirectShowLib.IFilterMapper3.EnumMatchingFilters(System.Runtime.InteropServices.ComTypes.IEnumMoniker, System.Int32, System.Boolean, DirectShowLib.Merit, System.Boolean, System.Int32, System.Guid[], DirectShowLib.RegPinMedium, DirectShowLib.DsGuid, System.Boolean, System.Boolean, System.Int32, System.Guid[], DirectShowLib.RegPinMedium, DirectShowLib.DsGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterMapper3.GetICreateDevEnum(ICreateDevEnum)</name>
            <fullName>System.Int32 DirectShowLib.IFilterMapper3.GetICreateDevEnum(DirectShowLib.ICreateDevEnum)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterMapper3.RegisterFilter(Guid, String, IMoniker, DsGuid, String, Object)</name>
            <fullName>System.Int32 DirectShowLib.IFilterMapper3.RegisterFilter(System.Guid, System.String, System.Runtime.InteropServices.ComTypes.IMoniker, DirectShowLib.DsGuid, System.String, System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IFilterMapper3.UnregisterFilter(Guid, String, Guid)</name>
            <fullName>System.Int32 DirectShowLib.IFilterMapper3.UnregisterFilter(System.Guid, System.String, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Mpeg2VideoStreamAnalyzer</name>
        <fullName>DirectShowLib.Mpeg2VideoStreamAnalyzer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void Mpeg2VideoStreamAnalyzer..ctor()</name>
            <fullName>System.Void DirectShowLib.Mpeg2VideoStreamAnalyzer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMixerPinConfig2</name>
        <fullName>DirectShowLib.IMixerPinConfig2</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMixerPinConfig2.GetAspectRatioMode(AspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.GetAspectRatioMode(DirectShowLib.AspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.GetBlendingParameter(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.GetBlendingParameter(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.GetColorKey(ColorKey, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.GetColorKey(DirectShowLib.ColorKey, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.GetOverlaySurfaceColorControls(DDColorControl)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.GetOverlaySurfaceColorControls(DirectShowLib.DDColorControl)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.GetRelativePosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.GetRelativePosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.GetStreamTransparent(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.GetStreamTransparent(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.GetZOrder(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.GetZOrder(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.SetAspectRatioMode(AspectRatioMode)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.SetAspectRatioMode(DirectShowLib.AspectRatioMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.SetBlendingParameter(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.SetBlendingParameter(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.SetColorKey(ColorKey)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.SetColorKey(DirectShowLib.ColorKey)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.SetOverlaySurfaceColorControls(DDColorControl)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.SetOverlaySurfaceColorControls(DirectShowLib.DDColorControl)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.SetRelativePosition(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.SetRelativePosition(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.SetStreamTransparent(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.SetStreamTransparent(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMixerPinConfig2.SetZOrder(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IMixerPinConfig2.SetZOrder(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AMSamplePropertyFlags</name>
        <fullName>DirectShowLib.AMSamplePropertyFlags</fullName>
        <methods />
      </type>
      <type>
        <name>VMR9Frequency</name>
        <fullName>DirectShowLib.VMR9Frequency</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IAMAnalogVideoDecoder</name>
        <fullName>DirectShowLib.IAMAnalogVideoDecoder</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IAMAnalogVideoDecoder.get_AvailableTVFormats(AnalogVideoStandard)</name>
            <fullName>System.Int32 DirectShowLib.IAMAnalogVideoDecoder.get_AvailableTVFormats(DirectShowLib.AnalogVideoStandard)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAnalogVideoDecoder.get_HorizontalLocked(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAnalogVideoDecoder.get_HorizontalLocked(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAnalogVideoDecoder.get_NumberOfLines(Int32)</name>
            <fullName>System.Int32 DirectShowLib.IAMAnalogVideoDecoder.get_NumberOfLines(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAnalogVideoDecoder.get_OutputEnable(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAnalogVideoDecoder.get_OutputEnable(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAnalogVideoDecoder.get_TVFormat(AnalogVideoStandard)</name>
            <fullName>System.Int32 DirectShowLib.IAMAnalogVideoDecoder.get_TVFormat(DirectShowLib.AnalogVideoStandard)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAnalogVideoDecoder.get_VCRHorizontalLocking(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAnalogVideoDecoder.get_VCRHorizontalLocking(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAnalogVideoDecoder.put_OutputEnable(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAnalogVideoDecoder.put_OutputEnable(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAnalogVideoDecoder.put_TVFormat(AnalogVideoStandard)</name>
            <fullName>System.Int32 DirectShowLib.IAMAnalogVideoDecoder.put_TVFormat(DirectShowLib.AnalogVideoStandard)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IAMAnalogVideoDecoder.put_VCRHorizontalLocking(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.IAMAnalogVideoDecoder.put_VCRHorizontalLocking(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPFlags</name>
        <fullName>DirectShowLib.DMO.MPFlags</fullName>
        <methods />
      </type>
      <type>
        <name>DMOVideoOutputStream</name>
        <fullName>DirectShowLib.DMO.DMOVideoOutputStream</fullName>
        <methods />
      </type>
      <type>
        <name>DMOPartialMediatype</name>
        <fullName>DirectShowLib.DMO.DMOPartialMediatype</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IDMOVideoOutputOptimizations</name>
        <fullName>DirectShowLib.DMO.IDMOVideoOutputOptimizations</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IDMOVideoOutputOptimizations.GetCurrentOperationMode(Int32, DMOVideoOutputStream)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IDMOVideoOutputOptimizations.GetCurrentOperationMode(System.Int32, DirectShowLib.DMO.DMOVideoOutputStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDMOVideoOutputOptimizations.GetCurrentSampleRequirements(Int32, DMOVideoOutputStream)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IDMOVideoOutputOptimizations.GetCurrentSampleRequirements(System.Int32, DirectShowLib.DMO.DMOVideoOutputStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDMOVideoOutputOptimizations.QueryOperationModePreferences(Int32, DMOVideoOutputStream)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IDMOVideoOutputOptimizations.QueryOperationModePreferences(System.Int32, DirectShowLib.DMO.DMOVideoOutputStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IDMOVideoOutputOptimizations.SetOperationMode(Int32, DMOVideoOutputStream)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IDMOVideoOutputOptimizations.SetOperationMode(System.Int32, DirectShowLib.DMO.DMOVideoOutputStream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaObject</name>
        <fullName>DirectShowLib.DMO.IMediaObject</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaObject.AllocateStreamingResources()</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.AllocateStreamingResources()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.Discontinuity(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.Discontinuity(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.Flush()</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.FreeStreamingResources()</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.FreeStreamingResources()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetInputCurrentType(Int32, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetInputCurrentType(System.Int32, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetInputMaxLatency(Int32, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetInputMaxLatency(System.Int32, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetInputSizeInfo(Int32, Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetInputSizeInfo(System.Int32, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetInputStatus(Int32, DMOInputStatusFlags)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetInputStatus(System.Int32, DirectShowLib.DMO.DMOInputStatusFlags)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetInputStreamInfo(Int32, DMOInputStreamInfo)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetInputStreamInfo(System.Int32, DirectShowLib.DMO.DMOInputStreamInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetInputType(Int32, Int32, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetInputType(System.Int32, System.Int32, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetOutputCurrentType(Int32, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetOutputCurrentType(System.Int32, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetOutputSizeInfo(Int32, Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetOutputSizeInfo(System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetOutputStreamInfo(Int32, DMOOutputStreamInfo)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetOutputStreamInfo(System.Int32, DirectShowLib.DMO.DMOOutputStreamInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetOutputType(Int32, Int32, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetOutputType(System.Int32, System.Int32, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.GetStreamCount(Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.GetStreamCount(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.Lock(Boolean)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.Lock(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.ProcessInput(Int32, IMediaBuffer, DMOInputDataBuffer, Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.ProcessInput(System.Int32, DirectShowLib.DMO.IMediaBuffer, DirectShowLib.DMO.DMOInputDataBuffer, System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.ProcessOutput(DMOProcessOutput, Int32, DMOOutputDataBuffer[], Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.ProcessOutput(DirectShowLib.DMO.DMOProcessOutput, System.Int32, DirectShowLib.DMO.DMOOutputDataBuffer[], System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.SetInputMaxLatency(Int32, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.SetInputMaxLatency(System.Int32, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.SetInputType(Int32, AMMediaType, DMOSetType)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.SetInputType(System.Int32, DirectShowLib.AMMediaType, DirectShowLib.DMO.DMOSetType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObject.SetOutputType(Int32, AMMediaType, DMOSetType)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObject.SetOutputType(System.Int32, DirectShowLib.AMMediaType, DirectShowLib.DMO.DMOSetType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DMOUtils</name>
        <fullName>DirectShowLib.DMO.DMOUtils</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DMOUtils..ctor()</name>
            <fullName>System.Void DirectShowLib.DMO.DMOUtils..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DMOUtils.DMOEnum(Guid, DMOEnumerator, Int32, DMOPartialMediatype[], Int32, DMOPartialMediatype[], IEnumDMO)</name>
            <fullName>System.Int32 DirectShowLib.DMO.DMOUtils.DMOEnum(System.Guid, DirectShowLib.DMO.DMOEnumerator, System.Int32, DirectShowLib.DMO.DMOPartialMediatype[], System.Int32, DirectShowLib.DMO.DMOPartialMediatype[], DirectShowLib.DMO.IEnumDMO)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DMOUtils.DMOGetName(Guid, StringBuilder)</name>
            <fullName>System.Int32 DirectShowLib.DMO.DMOUtils.DMOGetName(System.Guid, System.Text.StringBuilder)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DMOUtils.DMOGetTypes(Guid, Int32, Int32, DMOPartialMediatype[], Int32, Int32, DMOPartialMediatype[])</name>
            <fullName>System.Int32 DirectShowLib.DMO.DMOUtils.DMOGetTypes(System.Guid, System.Int32, System.Int32, DirectShowLib.DMO.DMOPartialMediatype[], System.Int32, System.Int32, DirectShowLib.DMO.DMOPartialMediatype[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DMOUtils.DMORegister(String, Guid, Guid, DMORegisterFlags, Int32, DMOPartialMediatype[], Int32, DMOPartialMediatype[])</name>
            <fullName>System.Int32 DirectShowLib.DMO.DMOUtils.DMORegister(System.String, System.Guid, System.Guid, DirectShowLib.DMO.DMORegisterFlags, System.Int32, DirectShowLib.DMO.DMOPartialMediatype[], System.Int32, DirectShowLib.DMO.DMOPartialMediatype[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DMOUtils.DMOUnregister(Guid, Guid)</name>
            <fullName>System.Int32 DirectShowLib.DMO.DMOUtils.DMOUnregister(System.Guid, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DMOUtils.MoCopyMediaType(AMMediaType, AMMediaType)</name>
            <fullName>System.Int32 DirectShowLib.DMO.DMOUtils.MoCopyMediaType(DirectShowLib.AMMediaType, DirectShowLib.AMMediaType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DMOUtils.MoInitMediaType(AMMediaType, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.DMOUtils.MoInitMediaType(DirectShowLib.AMMediaType, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaObjectInPlace</name>
        <fullName>DirectShowLib.DMO.IMediaObjectInPlace</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaObjectInPlace.Clone(IMediaObjectInPlace)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObjectInPlace.Clone(DirectShowLib.DMO.IMediaObjectInPlace)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObjectInPlace.GetLatency(Int64)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObjectInPlace.GetLatency(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaObjectInPlace.Process(Int32, IntPtr, Int64, DMOInplaceProcess)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaObjectInPlace.Process(System.Int32, System.IntPtr, System.Int64, DirectShowLib.DMO.DMOInplaceProcess)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DMOResults</name>
        <fullName>DirectShowLib.DMO.DMOResults</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DMOResults..ctor()</name>
            <fullName>System.Void DirectShowLib.DMO.DMOResults..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DMOCategory</name>
        <fullName>DirectShowLib.DMO.DMOCategory</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DMOCategory..ctor()</name>
            <fullName>System.Void DirectShowLib.DMO.DMOCategory..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DMOSetType</name>
        <fullName>DirectShowLib.DMO.DMOSetType</fullName>
        <methods />
      </type>
      <type>
        <name>DMOInplaceProcess</name>
        <fullName>DirectShowLib.DMO.DMOInplaceProcess</fullName>
        <methods />
      </type>
      <type>
        <name>DMORegisterFlags</name>
        <fullName>DirectShowLib.DMO.DMORegisterFlags</fullName>
        <methods />
      </type>
      <type>
        <name>IMediaParams</name>
        <fullName>DirectShowLib.DMO.IMediaParams</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaParams.AddEnvelope(Int32, Int32, MPEnvelopeSegment[])</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParams.AddEnvelope(System.Int32, System.Int32, DirectShowLib.DMO.MPEnvelopeSegment[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaParams.FlushEnvelope(Int32, Int64, Int64)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParams.FlushEnvelope(System.Int32, System.Int64, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaParams.GetParam(Int32, MPData)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParams.GetParam(System.Int32, DirectShowLib.DMO.MPData)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaParams.SetParam(Int32, MPData)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParams.SetParam(System.Int32, DirectShowLib.DMO.MPData)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaParams.SetTimeFormat(Guid, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParams.SetTimeFormat(System.Guid, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>IMediaParamInfo</name>
        <fullName>DirectShowLib.DMO.IMediaParamInfo</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaParamInfo.GetCurrentTimeFormat(Guid, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParamInfo.GetCurrentTimeFormat(System.Guid, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaParamInfo.GetNumTimeFormats(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParamInfo.GetNumTimeFormats(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaParamInfo.GetParamCount(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParamInfo.GetParamCount(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaParamInfo.GetParamInfo(Int32, ParamInfo)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParamInfo.GetParamInfo(System.Int32, DirectShowLib.DMO.ParamInfo)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaParamInfo.GetParamText(Int32, IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParamInfo.GetParamText(System.Int32, System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaParamInfo.GetSupportedTimeFormat(Int32, Guid)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaParamInfo.GetSupportedTimeFormat(System.Int32, System.Guid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DMOProcessOutput</name>
        <fullName>DirectShowLib.DMO.DMOProcessOutput</fullName>
        <methods />
      </type>
      <type>
        <name>DMOOutputDataBufferFlags</name>
        <fullName>DirectShowLib.DMO.DMOOutputDataBufferFlags</fullName>
        <methods />
      </type>
      <type>
        <name>DMOOutputStreamInfo</name>
        <fullName>DirectShowLib.DMO.DMOOutputStreamInfo</fullName>
        <methods />
      </type>
      <type>
        <name>IMediaBuffer</name>
        <fullName>DirectShowLib.DMO.IMediaBuffer</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaBuffer.GetBufferAndLength(IntPtr, Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaBuffer.GetBufferAndLength(System.IntPtr, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaBuffer.GetMaxLength(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaBuffer.GetMaxLength(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaBuffer.SetLength(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IMediaBuffer.SetLength(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MediaParamTimeFormat</name>
        <fullName>DirectShowLib.DMO.MediaParamTimeFormat</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MediaParamTimeFormat..ctor()</name>
            <fullName>System.Void DirectShowLib.DMO.MediaParamTimeFormat..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DMOInputDataBuffer</name>
        <fullName>DirectShowLib.DMO.DMOInputDataBuffer</fullName>
        <methods />
      </type>
      <type>
        <name>MPType</name>
        <fullName>DirectShowLib.DMO.MPType</fullName>
        <methods />
      </type>
      <type>
        <name>MPData</name>
        <fullName>DirectShowLib.DMO.MPData</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>ParamInfo</name>
        <fullName>DirectShowLib.DMO.ParamInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IEnumDMO</name>
        <fullName>DirectShowLib.DMO.IEnumDMO</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IEnumDMO.Clone(IEnumDMO)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IEnumDMO.Clone(DirectShowLib.DMO.IEnumDMO)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumDMO.Next(Int32, Guid[], String[], IntPtr)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IEnumDMO.Next(System.Int32, System.Guid[], System.String[], System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumDMO.Reset()</name>
            <fullName>System.Int32 DirectShowLib.DMO.IEnumDMO.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IEnumDMO.Skip(Int32)</name>
            <fullName>System.Int32 DirectShowLib.DMO.IEnumDMO.Skip(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>MPCaps</name>
        <fullName>DirectShowLib.DMO.MPCaps</fullName>
        <methods />
      </type>
      <type>
        <name>MPEnvelopeSegment</name>
        <fullName>DirectShowLib.DMO.MPEnvelopeSegment</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DMOOutputDataBuffer</name>
        <fullName>DirectShowLib.DMO.DMOOutputDataBuffer</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>DMOInputStreamInfo</name>
        <fullName>DirectShowLib.DMO.DMOInputStreamInfo</fullName>
        <methods />
      </type>
      <type>
        <name>DMOError</name>
        <fullName>DirectShowLib.DMO.DMOError</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DMOError..ctor()</name>
            <fullName>System.Void DirectShowLib.DMO.DMOError..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>String DMOError.GetErrorText(Int32)</name>
            <fullName>System.String DirectShowLib.DMO.DMOError.GetErrorText(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Void DMOError.ThrowExceptionForHR(Int32)</name>
            <fullName>System.Void DirectShowLib.DMO.DMOError.ThrowExceptionForHR(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DMOInputStatusFlags</name>
        <fullName>DirectShowLib.DMO.DMOInputStatusFlags</fullName>
        <methods />
      </type>
      <type>
        <name>DMOEnumerator</name>
        <fullName>DirectShowLib.DMO.DMOEnumerator</fullName>
        <methods />
      </type>
      <type>
        <name>IVMRMonitorConfig</name>
        <fullName>DirectShowLib.IVMRMonitorConfig</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVMRMonitorConfig.GetAvailableMonitors(VMRMonitorInfo[], Int32, Int32)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig.GetAvailableMonitors(DirectShowLib.VMRMonitorInfo[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMonitorConfig.GetDefaultMonitor(VMRGuid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig.GetDefaultMonitor(DirectShowLib.VMRGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMonitorConfig.GetMonitor(VMRGuid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig.GetMonitor(DirectShowLib.VMRGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMonitorConfig.SetDefaultMonitor(VMRGuid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig.SetDefaultMonitor(DirectShowLib.VMRGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IVMRMonitorConfig.SetMonitor(VMRGuid)</name>
            <fullName>System.Int32 DirectShowLib.IVMRMonitorConfig.SetMonitor(DirectShowLib.VMRGuid)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CDef</name>
        <fullName>DirectShowLib.CDef</fullName>
        <methods />
      </type>
      <type>
        <name>VMR9AllocationInfo</name>
        <fullName>DirectShowLib.VMR9AllocationInfo</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>IVPBaseNotify</name>
        <fullName>DirectShowLib.IVPBaseNotify</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IVPBaseNotify.RenegotiateVPParameters()</name>
            <fullName>System.Int32 DirectShowLib.IVPBaseNotify.RenegotiateVPParameters()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DMOWrapperFilter</name>
        <fullName>DirectShowLib.DMOWrapperFilter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DMOWrapperFilter..ctor()</name>
            <fullName>System.Void DirectShowLib.DMOWrapperFilter..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DKAMarshaler</name>
        <fullName>DirectShowLib.DKAMarshaler</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void DKAMarshaler..ctor(String)</name>
            <fullName>System.Void DirectShowLib.DKAMarshaler..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ICustomMarshaler DKAMarshaler.GetInstance(String)</name>
            <fullName>System.Runtime.InteropServices.ICustomMarshaler DirectShowLib.DKAMarshaler.GetInstance(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 DKAMarshaler.GetNativeDataSize()</name>
            <fullName>System.Int32 DirectShowLib.DKAMarshaler.GetNativeDataSize()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Object DKAMarshaler.MarshalNativeToManaged(IntPtr)</name>
            <fullName>System.Object DirectShowLib.DKAMarshaler.MarshalNativeToManaged(System.IntPtr)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>VideoProcAmpProperty</name>
        <fullName>DirectShowLib.VideoProcAmpProperty</fullName>
        <methods />
      </type>
      <type>
        <name>ExtTransportStatus</name>
        <fullName>DirectShowLib.ExtTransportStatus</fullName>
        <methods />
      </type>
      <type>
        <name>ENCAPIClsId</name>
        <fullName>DirectShowLib.ENCAPIClsId</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>IMediaPosition</name>
        <fullName>DirectShowLib.IMediaPosition</fullName>
        <kind>interface</kind>
        <methods>
          <method>
            <name>Int32 IMediaPosition.CanSeekBackward(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.CanSeekBackward(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.CanSeekForward(OABool)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.CanSeekForward(DirectShowLib.OABool)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.get_CurrentPosition(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.get_CurrentPosition(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.get_Duration(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.get_Duration(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.get_PrerollTime(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.get_PrerollTime(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.get_Rate(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.get_Rate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.get_StopTime(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.get_StopTime(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.put_CurrentPosition(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.put_CurrentPosition(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.put_PrerollTime(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.put_PrerollTime(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.put_Rate(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.put_Rate(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Int32 IMediaPosition.put_StopTime(Double)</name>
            <fullName>System.Int32 DirectShowLib.IMediaPosition.put_StopTime(System.Double)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DVEncoderFormat</name>
        <fullName>DirectShowLib.DVEncoderFormat</fullName>
        <methods />
      </type>
      <type>
        <name>MPEGStreamBuffer</name>
        <fullName>DirectShowLib.MPEGStreamBuffer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void MPEGStreamBuffer..ctor()</name>
            <fullName>System.Void DirectShowLib.MPEGStreamBuffer..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AspectRatioMode</name>
        <fullName>DirectShowLib.AspectRatioMode</fullName>
        <methods />
      </type>
      <type>
        <name>AMTunerEventType</name>
        <fullName>DirectShowLib.AMTunerEventType</fullName>
        <methods />
      </type>
      <type>
        <name>WaveFormatEx</name>
        <fullName>DirectShowLib.WaveFormatEx</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void WaveFormatEx..ctor()</name>
            <fullName>System.Void DirectShowLib.WaveFormatEx..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SBE2Sink</name>
        <fullName>DirectShowLib.SBE2Sink</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Void SBE2Sink..ctor()</name>
            <fullName>System.Void DirectShowLib.SBE2Sink..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>PropSetID</name>
        <fullName>DirectShowLib.PropSetID</fullName>
        <kind>class</kind>
        <methods />
      </type>
    </types>
    <methodCalls>
      <methodCall>
        <methodSource>
          <name>String DESError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.DES.DESError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.DsError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>95</offSet>
        <order>32</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>Void DESError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DES.DESError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DESError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.DES.DESError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>5</offSet>
        <order>5</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String MsError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.MultimediaStreaming.MsError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.DsError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>187</offSet>
        <order>54</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>Void MsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.MultimediaStreaming.MsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String MsError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.MultimediaStreaming.MsError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>5</offSet>
        <order>5</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DsToString.AMMediaTypeToString(AMMediaType)</name>
          <fullName>System.String DirectShowLib.DsToString.AMMediaTypeToString(DirectShowLib.AMMediaType)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsToString.MediaTypeToString(Guid)</name>
          <fullName>System.String DirectShowLib.DsToString.MediaTypeToString(System.Guid)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>20</offSet>
        <order>9</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DsToString.AMMediaTypeToString(AMMediaType)</name>
          <fullName>System.String DirectShowLib.DsToString.AMMediaTypeToString(DirectShowLib.AMMediaType)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsToString.MediaSubTypeToString(Guid)</name>
          <fullName>System.String DirectShowLib.DsToString.MediaSubTypeToString(System.Guid)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>34</offSet>
        <order>15</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DsToString.AMMediaTypeToString(AMMediaType)</name>
          <fullName>System.String DirectShowLib.DsToString.AMMediaTypeToString(DirectShowLib.AMMediaType)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsToString.MediaFormatTypeToString(Guid)</name>
          <fullName>System.String DirectShowLib.DsToString.MediaFormatTypeToString(System.Guid)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>48</offSet>
        <order>21</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DsToString.MediaFormatTypeToString(Guid)</name>
          <fullName>System.String DirectShowLib.DsToString.MediaFormatTypeToString(System.Guid)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsToString.WalkClass(Type, Guid)</name>
          <fullName>System.String DirectShowLib.DsToString.WalkClass(System.Type, System.Guid)</fullName>
          <visibility>private</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>11</offSet>
        <order>4</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DsToString.MediaSubTypeToString(Guid)</name>
          <fullName>System.String DirectShowLib.DsToString.MediaSubTypeToString(System.Guid)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsToString.WalkClass(Type, Guid)</name>
          <fullName>System.String DirectShowLib.DsToString.WalkClass(System.Type, System.Guid)</fullName>
          <visibility>private</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>11</offSet>
        <order>4</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DsToString.MediaTypeToString(Guid)</name>
          <fullName>System.String DirectShowLib.DsToString.MediaTypeToString(System.Guid)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsToString.WalkClass(Type, Guid)</name>
          <fullName>System.String DirectShowLib.DsToString.WalkClass(System.Type, System.Guid)</fullName>
          <visibility>private</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>11</offSet>
        <order>4</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>Void DsROTEntry.Dispose()</name>
          <fullName>System.Void DirectShowLib.DsROTEntry.Dispose()</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 DsROTEntry.GetRunningObjectTable(Int32, IRunningObjectTable)</name>
          <fullName>System.Int32 DirectShowLib.DsROTEntry.GetRunningObjectTable(System.Int32, System.Runtime.InteropServices.ComTypes.IRunningObjectTable)</fullName>
          <visibility>private</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>19</offSet>
        <order>10</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>Void DsROTEntry.Dispose()</name>
          <fullName>System.Void DirectShowLib.DsROTEntry.Dispose()</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>26</offSet>
        <order>13</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>Void DsROTEntry.Finalize()</name>
          <fullName>System.Void DirectShowLib.DsROTEntry.Finalize()</fullName>
          <visibility>protected</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsROTEntry.Dispose()</name>
          <fullName>System.Void DirectShowLib.DsROTEntry.Dispose()</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>1</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>Guid DsUtils.GetPinCategory(IPin)</name>
          <fullName>System.Guid DirectShowLib.DsUtils.GetPinCategory(DirectShowLib.IPin)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IKsPropertySet.Get(Guid, Int32, IntPtr, Int32, IntPtr, Int32, Int32)</name>
          <fullName>System.Int32 DirectShowLib.IKsPropertySet.Get(System.Guid, System.Int32, System.IntPtr, System.Int32, System.IntPtr, System.Int32, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>63</offSet>
        <order>25</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>Guid DsUtils.GetPinCategory(IPin)</name>
          <fullName>System.Guid DirectShowLib.DsUtils.GetPinCategory(DirectShowLib.IPin)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>70</offSet>
        <order>28</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByCategory(IBaseFilter, Guid, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByCategory(DirectShowLib.IBaseFilter, System.Guid, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IBaseFilter.EnumPins(IEnumPins)</name>
          <fullName>System.Int32 DirectShowLib.IBaseFilter.EnumPins(DirectShowLib.IEnumPins)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>17</offSet>
        <order>12</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByCategory(IBaseFilter, Guid, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByCategory(DirectShowLib.IBaseFilter, System.Guid, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>24</offSet>
        <order>15</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByCategory(IBaseFilter, Guid, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByCategory(DirectShowLib.IBaseFilter, System.Guid, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Guid DsUtils.GetPinCategory(IPin)</name>
          <fullName>System.Guid DirectShowLib.DsUtils.GetPinCategory(DirectShowLib.IPin)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>34</offSet>
        <order>20</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByCategory(IBaseFilter, Guid, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByCategory(DirectShowLib.IBaseFilter, System.Guid, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IEnumPins.Next(Int32, IPin[], IntPtr)</name>
          <fullName>System.Int32 DirectShowLib.IEnumPins.Next(System.Int32, DirectShowLib.IPin[], System.IntPtr)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>78</offSet>
        <order>44</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByConnectionStatus(IBaseFilter, PinConnectedStatus, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByConnectionStatus(DirectShowLib.IBaseFilter, DirectShowLib.PinConnectedStatus, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IBaseFilter.EnumPins(IEnumPins)</name>
          <fullName>System.Int32 DirectShowLib.IBaseFilter.EnumPins(DirectShowLib.IEnumPins)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>18</offSet>
        <order>12</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByConnectionStatus(IBaseFilter, PinConnectedStatus, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByConnectionStatus(DirectShowLib.IBaseFilter, DirectShowLib.PinConnectedStatus, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>25</offSet>
        <order>15</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByConnectionStatus(IBaseFilter, PinConnectedStatus, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByConnectionStatus(DirectShowLib.IBaseFilter, DirectShowLib.PinConnectedStatus, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IPin.ConnectedTo(IPin)</name>
          <fullName>System.Int32 DirectShowLib.IPin.ConnectedTo(DirectShowLib.IPin)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>38</offSet>
        <order>21</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByConnectionStatus(IBaseFilter, PinConnectedStatus, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByConnectionStatus(DirectShowLib.IBaseFilter, DirectShowLib.PinConnectedStatus, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>53</offSet>
        <order>27</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByConnectionStatus(IBaseFilter, PinConnectedStatus, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByConnectionStatus(DirectShowLib.IBaseFilter, DirectShowLib.PinConnectedStatus, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IEnumPins.Next(Int32, IPin[], IntPtr)</name>
          <fullName>System.Int32 DirectShowLib.IEnumPins.Next(System.Int32, DirectShowLib.IPin[], System.IntPtr)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>117</offSet>
        <order>61</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByDirection(IBaseFilter, PinDirection, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByDirection(DirectShowLib.IBaseFilter, DirectShowLib.PinDirection, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IBaseFilter.EnumPins(IEnumPins)</name>
          <fullName>System.Int32 DirectShowLib.IBaseFilter.EnumPins(DirectShowLib.IEnumPins)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>18</offSet>
        <order>12</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByDirection(IBaseFilter, PinDirection, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByDirection(DirectShowLib.IBaseFilter, DirectShowLib.PinDirection, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>25</offSet>
        <order>15</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByDirection(IBaseFilter, PinDirection, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByDirection(DirectShowLib.IBaseFilter, DirectShowLib.PinDirection, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IPin.QueryDirection(PinDirection)</name>
          <fullName>System.Int32 DirectShowLib.IPin.QueryDirection(DirectShowLib.PinDirection)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>38</offSet>
        <order>21</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByDirection(IBaseFilter, PinDirection, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByDirection(DirectShowLib.IBaseFilter, DirectShowLib.PinDirection, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>45</offSet>
        <order>24</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByDirection(IBaseFilter, PinDirection, Int32)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByDirection(DirectShowLib.IBaseFilter, DirectShowLib.PinDirection, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IEnumPins.Next(Int32, IPin[], IntPtr)</name>
          <fullName>System.Int32 DirectShowLib.IEnumPins.Next(System.Int32, DirectShowLib.IPin[], System.IntPtr)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>88</offSet>
        <order>48</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByName(IBaseFilter, String)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByName(DirectShowLib.IBaseFilter, System.String)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IBaseFilter.EnumPins(IEnumPins)</name>
          <fullName>System.Int32 DirectShowLib.IBaseFilter.EnumPins(DirectShowLib.IEnumPins)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>18</offSet>
        <order>12</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByName(IBaseFilter, String)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByName(DirectShowLib.IBaseFilter, System.String)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>25</offSet>
        <order>15</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByName(IBaseFilter, String)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByName(DirectShowLib.IBaseFilter, System.String)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IPin.QueryPinInfo(PinInfo)</name>
          <fullName>System.Int32 DirectShowLib.IPin.QueryPinInfo(DirectShowLib.PinInfo)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>38</offSet>
        <order>21</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByName(IBaseFilter, String)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByName(DirectShowLib.IBaseFilter, System.String)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>45</offSet>
        <order>24</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByName(IBaseFilter, String)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByName(DirectShowLib.IBaseFilter, System.String)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsUtils.FreePinInfo(PinInfo)</name>
          <fullName>System.Void DirectShowLib.DsUtils.FreePinInfo(DirectShowLib.PinInfo)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>66</offSet>
        <order>31</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByName(IBaseFilter, String)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByName(DirectShowLib.IBaseFilter, System.String)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsUtils.FreePinInfo(PinInfo)</name>
          <fullName>System.Void DirectShowLib.DsUtils.FreePinInfo(DirectShowLib.PinInfo)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>89</offSet>
        <order>43</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IPin DsFindPin.ByName(IBaseFilter, String)</name>
          <fullName>DirectShowLib.IPin DirectShowLib.DsFindPin.ByName(DirectShowLib.IBaseFilter, System.String)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 IEnumPins.Next(Int32, IPin[], IntPtr)</name>
          <fullName>System.Int32 DirectShowLib.IEnumPins.Next(System.Int32, DirectShowLib.IPin[], System.IntPtr)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>103</offSet>
        <order>48</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>DsDevice[] DsDevice.GetDevicesOfCat(Guid)</name>
          <fullName>DirectShowLib.DsDevice[] DirectShowLib.DsDevice.GetDevicesOfCat(System.Guid)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 ICreateDevEnum.CreateClassEnumerator(Guid, IEnumMoniker, CDef)</name>
          <fullName>System.Int32 DirectShowLib.ICreateDevEnum.CreateClassEnumerator(System.Guid, System.Runtime.InteropServices.ComTypes.IEnumMoniker, DirectShowLib.CDef)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>24</offSet>
        <order>10</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>DsDevice[] DsDevice.GetDevicesOfCat(Guid)</name>
          <fullName>DirectShowLib.DsDevice[] DirectShowLib.DsDevice.GetDevicesOfCat(System.Guid)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>31</offSet>
        <order>13</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>DsDevice[] DsDevice.GetDevicesOfCat(Guid)</name>
          <fullName>DirectShowLib.DsDevice[] DirectShowLib.DsDevice.GetDevicesOfCat(System.Guid)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Void DsDevice.Dispose()</name>
          <fullName>System.Void DirectShowLib.DsDevice.Dispose()</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>158</offSet>
        <order>65</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DsDevice.GetPropBagValue(String)</name>
          <fullName>System.String DirectShowLib.DsDevice.GetPropBagValue(System.String)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>1</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>1</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions>
            <methodException>
              <ExceptionReference>
                <name>Object</name>
                <baseName>System.Object</baseName>
              </ExceptionReference>
              <kind>Catch</kind>
              <isGeneric>true</isGeneric>
              <startOffSet>77</startOffSet>
              <endOffSet>82</endOffSet>
            </methodException>
          </methodExceptions>
        </methodSource>
        <methodTarget>
          <name>Int32 IPropertyBag.Read(String, Object, IErrorLog)</name>
          <fullName>System.Int32 DirectShowLib.IPropertyBag.Read(System.String, System.Object, DirectShowLib.IErrorLog)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>54</offSet>
        <order>27</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DsDevice.GetPropBagValue(String)</name>
          <fullName>System.String DirectShowLib.DsDevice.GetPropBagValue(System.String)</fullName>
          <visibility>public</visibility>
          <qtdTry>1</qtdTry>
          <qtdCatch>1</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>1</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>1</qtdFinally>
          <methodExceptions>
            <methodException>
              <ExceptionReference>
                <name>Object</name>
                <baseName>System.Object</baseName>
              </ExceptionReference>
              <kind>Catch</kind>
              <isGeneric>true</isGeneric>
              <startOffSet>77</startOffSet>
              <endOffSet>82</endOffSet>
            </methodException>
          </methodExceptions>
        </methodSource>
        <methodTarget>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>63</offSet>
        <order>30</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>IntPtr DsMarshaler.MarshalManagedToNative(Object)</name>
          <fullName>System.IntPtr DirectShowLib.DsMarshaler.MarshalManagedToNative(System.Object)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 DsMarshaler.GetNativeDataSize()</name>
          <fullName>System.Int32 DirectShowLib.DsMarshaler.GetNativeDataSize()</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>8</offSet>
        <order>5</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DsError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.DsError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>Int32 DsError.AMGetErrorText(Int32, StringBuilder, Int32)</name>
          <fullName>System.Int32 DirectShowLib.DsError.AMGetErrorText(System.Int32, System.Text.StringBuilder, System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>23</offSet>
        <order>8</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>Void DsError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DsError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.DsError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>5</offSet>
        <order>5</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>String DMOError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.DMO.DMOError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DsError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.DsError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>91</offSet>
        <order>29</order>
      </methodCall>
      <methodCall>
        <methodSource>
          <name>Void DMOError.ThrowExceptionForHR(Int32)</name>
          <fullName>System.Void DirectShowLib.DMO.DMOError.ThrowExceptionForHR(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodSource>
        <methodTarget>
          <name>String DMOError.GetErrorText(Int32)</name>
          <fullName>System.String DirectShowLib.DMO.DMOError.GetErrorText(System.Int32)</fullName>
          <visibility>public</visibility>
          <qtdTry>0</qtdTry>
          <qtdCatch>0</qtdCatch>
          <qtdCatchGeneric>0</qtdCatchGeneric>
          <qtdCatchSpecialized>0</qtdCatchSpecialized>
          <qtdThrow>0</qtdThrow>
          <qtdFinally>0</qtdFinally>
          <methodExceptions />
        </methodTarget>
        <offSet>5</offSet>
        <order>5</order>
      </methodCall>
    </methodCalls>
  </assembly>
</list>