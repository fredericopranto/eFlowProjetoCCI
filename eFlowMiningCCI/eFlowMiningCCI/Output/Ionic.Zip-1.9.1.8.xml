<list>
  <assembly>
    <name>Ionic.Zip</name>
    <version>1.9.1.8</version>
    <createdAt>07/08/2011 00:59:58</createdAt>
    <language>C#.NET</language>
    <analyzer>false</analyzer>
    <assemblies>
      <assembly>
        <name>mscorlib</name>
        <version>2.0.0.0</version>
        <language>C#.NET</language>
        <analyzer>false</analyzer>
        <assemblies />
        <exceptions />
        <types />
        <methodCalls />
      </assembly>
      <assembly>
        <name>System</name>
        <version>2.0.0.0</version>
        <language>C#.NET</language>
        <analyzer>false</analyzer>
        <assemblies />
        <exceptions />
        <types />
        <methodCalls />
      </assembly>
    </assemblies>
    <exceptions>
      <exception>
        <name>System.Exception</name>
        <baseName>System.Object</baseName>
      </exception>
      <exception>
        <name>System.UnauthorizedAccessException</name>
        <baseName>System.SystemException</baseName>
      </exception>
      <exception>
        <name>System.IO.IOException</name>
        <baseName>System.SystemException</baseName>
      </exception>
    </exceptions>
    <types>
      <type>
        <name>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=1152</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=1152</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=116</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=116</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=12</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=12</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=120</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=120</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=124</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=124</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=19</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=19</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=2048</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=2048</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=256</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=256</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=384</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=384</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=512</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=512</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=56</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=56</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=6144</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=6144</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=68</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=68</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>__StaticArrayInitTypeSize=76</name>
        <fullName>&lt;PrivateImplementationDetails&gt;{117900FC-6796-45E1-84B2-B7C6A19AFDAF}.__StaticArrayInitTypeSize=76</fullName>
        <kind>struct</kind>
        <methods />
      </type>
      <type>
        <name>CrcCalculatorStream</name>
        <fullName>Ionic.Crc.CrcCalculatorStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream..ctor(System.IO.Stream, System.Int64, System.Boolean, Ionic.Crc.CRC32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream..ctor(System.Boolean, System.Int64, System.IO.Stream, Ionic.Crc.CRC32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream..ctor(System.IO.Stream, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream..ctor(System.IO.Stream, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream..ctor(System.IO.Stream, System.Int64, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Close</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream.Close()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Crc.CrcCalculatorStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Crc.CrcCalculatorStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>System.IDisposable.Dispose</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream.System.IDisposable.Dispose()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Crc.CrcCalculatorStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CRC32</name>
        <fullName>Ionic.Crc.CRC32</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Crc.CRC32..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Crc.CRC32..ctor(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Crc.CRC32..ctor(System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InternalComputeCrc32</name>
            <fullName>System.Int32 Ionic.Crc.CRC32._InternalComputeCrc32(System.UInt32, System.Byte)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Combine</name>
            <fullName>System.Void Ionic.Crc.CRC32.Combine(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ComputeCrc32</name>
            <fullName>System.Int32 Ionic.Crc.CRC32.ComputeCrc32(System.Int32, System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GenerateLookupTable</name>
            <fullName>System.Void Ionic.Crc.CRC32.GenerateLookupTable()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetCrc32</name>
            <fullName>System.Int32 Ionic.Crc.CRC32.GetCrc32(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetCrc32AndCopy</name>
            <fullName>System.Int32 Ionic.Crc.CRC32.GetCrc32AndCopy(System.IO.Stream, System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>gf2_matrix_square</name>
            <fullName>System.Void Ionic.Crc.CRC32.gf2_matrix_square(System.UInt32[], System.UInt32[])</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>gf2_matrix_times</name>
            <fullName>System.UInt32 Ionic.Crc.CRC32.gf2_matrix_times(System.UInt32[], System.UInt32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Reset</name>
            <fullName>System.Void Ionic.Crc.CRC32.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReverseBits</name>
            <fullName>System.Byte Ionic.Crc.CRC32.ReverseBits(System.Byte)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReverseBits</name>
            <fullName>System.UInt32 Ionic.Crc.CRC32.ReverseBits(System.UInt32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SlurpBlock</name>
            <fullName>System.Void Ionic.Crc.CRC32.SlurpBlock(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateCRC</name>
            <fullName>System.Void Ionic.Crc.CRC32.UpdateCRC(System.Byte, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateCRC</name>
            <fullName>System.Void Ionic.Crc.CRC32.UpdateCRC(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BZip2</name>
        <fullName>Ionic.BZip2.BZip2</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>InitRectangularArray</name>
            <fullName>T[][] Ionic.BZip2.BZip2.InitRectangularArray&lt;T&gt;(System.Int32, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Rand</name>
        <fullName>Ionic.BZip2.Rand</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>Rnums</name>
            <fullName>System.Int32 Ionic.BZip2.Rand.Rnums(System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WorkItem</name>
        <fullName>Ionic.BZip2.WorkItem</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.WorkItem..ctor(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BitWriter</name>
        <fullName>Ionic.BZip2.BitWriter</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BitWriter..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>FinishAndPad</name>
            <fullName>System.Void Ionic.BZip2.BitWriter.FinishAndPad()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.BZip2.BitWriter.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Reset</name>
            <fullName>System.Void Ionic.BZip2.BitWriter.Reset()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteBits</name>
            <fullName>System.Void Ionic.BZip2.BitWriter.WriteBits(System.Int32, System.UInt32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteByte</name>
            <fullName>System.Void Ionic.BZip2.BitWriter.WriteByte(System.Byte)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteInt</name>
            <fullName>System.Void Ionic.BZip2.BitWriter.WriteInt(System.UInt32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BZip2OutputStream</name>
        <fullName>Ionic.BZip2.BZip2OutputStream</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>TraceBits</name>
        <fullName>Ionic.BZip2.BZip2OutputStream.TraceBits</fullName>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream..ctor(System.IO.Stream, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream..ctor(System.IO.Stream, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream..ctor(System.IO.Stream, System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Close</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream.Close()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EmitHeader</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream.EmitHeader()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EmitTrailer</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream.EmitTrailer()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Finish</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream.Finish()</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.BZip2.BZip2OutputStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.BZip2.BZip2OutputStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>TraceOutput</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream.TraceOutput(Ionic.BZip2.BZip2OutputStream.TraceBits, System.String, System.Object[])</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.BZip2.BZip2OutputStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ParallelBZip2OutputStream</name>
        <fullName>Ionic.BZip2.ParallelBZip2OutputStream</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>TraceBits</name>
        <fullName>Ionic.BZip2.ParallelBZip2OutputStream.TraceBits</fullName>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream..ctor(System.IO.Stream, System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream..ctor(System.IO.Stream, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream..ctor(System.IO.Stream, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Close</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.Close()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressOne</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.CompressOne(System.Object)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>EmitHeader</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.EmitHeader()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EmitPendingBuffers</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.EmitPendingBuffers(System.Boolean, System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EmitTrailer</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.EmitTrailer()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>FlushOutput</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.FlushOutput(System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializePoolOfWorkItems</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.InitializePoolOfWorkItems()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.BZip2.ParallelBZip2OutputStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.BZip2.ParallelBZip2OutputStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>TraceOutput</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.TraceOutput(Ionic.BZip2.ParallelBZip2OutputStream.TraceBits, System.String, System.Object[])</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.BZip2.ParallelBZip2OutputStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BZip2InputStream</name>
        <fullName>Ionic.BZip2.BZip2InputStream</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>CState</name>
        <fullName>Ionic.BZip2.BZip2InputStream.CState</fullName>
        <methods />
      </type>
      <type>
        <name>DecompressionState</name>
        <fullName>Ionic.BZip2.BZip2InputStream.DecompressionState</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.DecompressionState..ctor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>initTT</name>
            <fullName>System.Int32[] Ionic.BZip2.BZip2InputStream.DecompressionState.initTT(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream..ctor(System.IO.Stream, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>bsGetBit</name>
            <fullName>System.Boolean Ionic.BZip2.BZip2InputStream.bsGetBit()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>bsGetInt</name>
            <fullName>System.UInt32 Ionic.BZip2.BZip2InputStream.bsGetInt()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>bsGetUByte</name>
            <fullName>System.Char Ionic.BZip2.BZip2InputStream.bsGetUByte()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CheckMagicChar</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.CheckMagicChar(System.Char, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Close</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.Close()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>complete</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.complete()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>createHuffmanDecodingTables</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.createHuffmanDecodingTables(System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.Dispose(System.Boolean)</fullName>
            <visibility>protected</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EndBlock</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.EndBlock()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>getAndMoveToFrontDecode</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.getAndMoveToFrontDecode()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>getAndMoveToFrontDecode0</name>
            <fullName>System.Int32 Ionic.BZip2.BZip2InputStream.getAndMoveToFrontDecode0(System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetBits</name>
            <fullName>System.Int32 Ionic.BZip2.BZip2InputStream.GetBits(System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>hbCreateDecodeTables</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.hbCreateDecodeTables(System.Int32[], System.Int32[], System.Int32[], System.Char[], System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>init</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.init()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitBlock</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.InitBlock()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>MakeMaps</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.MakeMaps()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.BZip2.BZip2InputStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadByte</name>
            <fullName>System.Int32 Ionic.BZip2.BZip2InputStream.ReadByte()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>recvDecodingTables</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.recvDecodingTables()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.BZip2.BZip2InputStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetupBlock</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.SetupBlock()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetupNoRandPartA</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.SetupNoRandPartA()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetupNoRandPartB</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.SetupNoRandPartB()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetupNoRandPartC</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.SetupNoRandPartC()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetupRandPartA</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.SetupRandPartA()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetupRandPartB</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.SetupRandPartB()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetupRandPartC</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.SetupRandPartC()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.BZip2.BZip2InputStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BZip2Compressor</name>
        <fullName>Ionic.BZip2.BZip2Compressor</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>CompressionState</name>
        <fullName>Ionic.BZip2.BZip2Compressor.CompressionState</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.CompressionState..ctor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor..ctor(Ionic.BZip2.BitWriter)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor..ctor(Ionic.BZip2.BitWriter, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddRunToOutputBlock</name>
            <fullName>System.Boolean Ionic.BZip2.BZip2Compressor.AddRunToOutputBlock(System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>blockSort</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.blockSort()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressAndWrite</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.CompressAndWrite()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Fill</name>
            <fullName>System.Int32 Ionic.BZip2.BZip2Compressor.Fill(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>generateMTFValues</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.generateMTFValues()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>hbAssignCodes</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.hbAssignCodes(System.Int32[], System.Byte[], System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>hbMakeCodeLengths</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.hbMakeCodeLengths(System.Byte[], System.Int32[], Ionic.BZip2.BZip2Compressor.CompressionState, System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>mainQSort3</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.mainQSort3(Ionic.BZip2.BZip2Compressor.CompressionState, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>mainSimpleSort</name>
            <fullName>System.Boolean Ionic.BZip2.BZip2Compressor.mainSimpleSort(Ionic.BZip2.BZip2Compressor.CompressionState, System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>mainSort</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.mainSort()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>med3</name>
            <fullName>System.Byte Ionic.BZip2.BZip2Compressor.med3(System.Byte, System.Byte, System.Byte)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>moveToFrontCodeAndSend</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.moveToFrontCodeAndSend()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>randomiseBlock</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.randomiseBlock()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Reset</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.Reset()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>sendMTFValues</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.sendMTFValues()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>sendMTFValues0</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.sendMTFValues0(System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>sendMTFValues1</name>
            <fullName>System.Int32 Ionic.BZip2.BZip2Compressor.sendMTFValues1(System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>sendMTFValues2</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.sendMTFValues2(System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>sendMTFValues3</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.sendMTFValues3(System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>sendMTFValues4</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.sendMTFValues4()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>sendMTFValues5</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.sendMTFValues5(System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>sendMTFValues6</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.sendMTFValues6(System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>sendMTFValues7</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.sendMTFValues7(System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>vswap</name>
            <fullName>System.Void Ionic.BZip2.BZip2Compressor.vswap(System.Int32[], System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>write0</name>
            <fullName>System.Int32 Ionic.BZip2.BZip2Compressor.write0(System.Byte)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZlibConstants</name>
        <fullName>Ionic.Zlib.ZlibConstants</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>GZipStream</name>
        <fullName>Ionic.Zlib.GZipStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.GZipStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, Ionic.Zlib.CompressionLevel, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.GZipStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.GZipStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, Ionic.Zlib.CompressionLevel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.GZipStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressBuffer</name>
            <fullName>System.Byte[] Ionic.Zlib.GZipStream.CompressBuffer(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressString</name>
            <fullName>System.Byte[] Ionic.Zlib.GZipStream.CompressString(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zlib.GZipStream.Dispose(System.Boolean)</fullName>
            <visibility>protected</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EmitHeader</name>
            <fullName>System.Int32 Ionic.Zlib.GZipStream.EmitHeader()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zlib.GZipStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zlib.GZipStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zlib.GZipStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zlib.GZipStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UncompressBuffer</name>
            <fullName>System.Byte[] Ionic.Zlib.GZipStream.UncompressBuffer(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UncompressString</name>
            <fullName>System.String Ionic.Zlib.GZipStream.UncompressString(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zlib.GZipStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DeflateStream</name>
        <fullName>Ionic.Zlib.DeflateStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.DeflateStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.DeflateStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, Ionic.Zlib.CompressionLevel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.DeflateStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.DeflateStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, Ionic.Zlib.CompressionLevel, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressBuffer</name>
            <fullName>System.Byte[] Ionic.Zlib.DeflateStream.CompressBuffer(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressString</name>
            <fullName>System.Byte[] Ionic.Zlib.DeflateStream.CompressString(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zlib.DeflateStream.Dispose(System.Boolean)</fullName>
            <visibility>protected</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zlib.DeflateStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zlib.DeflateStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zlib.DeflateStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UncompressBuffer</name>
            <fullName>System.Byte[] Ionic.Zlib.DeflateStream.UncompressBuffer(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UncompressString</name>
            <fullName>System.String Ionic.Zlib.DeflateStream.UncompressString(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zlib.DeflateStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>InfTree</name>
        <fullName>Ionic.Zlib.InfTree</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.InfTree..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>huft_build</name>
            <fullName>System.Int32 Ionic.Zlib.InfTree.huft_build(System.Int32[], System.Int32, System.Int32, System.Int32, System.Int32[], System.Int32[], System.Int32[], System.Int32[], System.Int32[], System.Int32[], System.Int32[])</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>inflate_trees_bits</name>
            <fullName>System.Int32 Ionic.Zlib.InfTree.inflate_trees_bits(System.Int32[], System.Int32[], System.Int32[], System.Int32[], Ionic.Zlib.ZlibCodec)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>inflate_trees_dynamic</name>
            <fullName>System.Int32 Ionic.Zlib.InfTree.inflate_trees_dynamic(System.Int32, System.Int32, System.Int32[], System.Int32[], System.Int32[], System.Int32[], System.Int32[], System.Int32[], Ionic.Zlib.ZlibCodec)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>inflate_trees_fixed</name>
            <fullName>System.Int32 Ionic.Zlib.InfTree.inflate_trees_fixed(System.Int32[], System.Int32[], System.Int32[][], System.Int32[][], Ionic.Zlib.ZlibCodec)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>initWorkArea</name>
            <fullName>System.Void Ionic.Zlib.InfTree.initWorkArea(System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CompressionMode</name>
        <fullName>Ionic.Zlib.CompressionMode</fullName>
        <methods />
      </type>
      <type>
        <name>WorkItem</name>
        <fullName>Ionic.Zlib.WorkItem</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.WorkItem..ctor(System.Int32, Ionic.Zlib.CompressionLevel, Ionic.Zlib.CompressionStrategy, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZlibStreamFlavor</name>
        <fullName>Ionic.Zlib.ZlibStreamFlavor</fullName>
        <methods />
      </type>
      <type>
        <name>InternalConstants</name>
        <fullName>Ionic.Zlib.InternalConstants</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>InternalInflateConstants</name>
        <fullName>Ionic.Zlib.InternalInflateConstants</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>InflateBlocks</name>
        <fullName>Ionic.Zlib.InflateBlocks</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>InflateBlockMode</name>
        <fullName>Ionic.Zlib.InflateBlocks.InflateBlockMode</fullName>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.InflateBlocks..ctor(Ionic.Zlib.ZlibCodec, System.Object, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Int32 Ionic.Zlib.InflateBlocks.Flush(System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Free</name>
            <fullName>System.Void Ionic.Zlib.InflateBlocks.Free()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Process</name>
            <fullName>System.Int32 Ionic.Zlib.InflateBlocks.Process(System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Reset</name>
            <fullName>System.UInt32 Ionic.Zlib.InflateBlocks.Reset()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetDictionary</name>
            <fullName>System.Void Ionic.Zlib.InflateBlocks.SetDictionary(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SyncPoint</name>
            <fullName>System.Int32 Ionic.Zlib.InflateBlocks.SyncPoint()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Adler</name>
        <fullName>Ionic.Zlib.Adler</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.Adler..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Adler32</name>
            <fullName>System.UInt32 Ionic.Zlib.Adler.Adler32(System.UInt32, System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CompressionLevel</name>
        <fullName>Ionic.Zlib.CompressionLevel</fullName>
        <methods />
      </type>
      <type>
        <name>DeflateManager</name>
        <fullName>Ionic.Zlib.DeflateManager</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>CompressFunc</name>
        <fullName>Ionic.Zlib.DeflateManager.CompressFunc</fullName>
        <methods />
      </type>
      <type>
        <name>Config</name>
        <fullName>Ionic.Zlib.DeflateManager.Config</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.Config..ctor(System.Int32, System.Int32, System.Int32, System.Int32, Ionic.Zlib.DeflateFlavor)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Lookup</name>
            <fullName>Ionic.Zlib.DeflateManager.Config Ionic.Zlib.DeflateManager.Config.Lookup(Ionic.Zlib.CompressionLevel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager..ctor()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_fillWindow</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager._fillWindow()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InitializeBlocks</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager._InitializeBlocks()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InitializeLazyMatch</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager._InitializeLazyMatch()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InitializeTreeData</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager._InitializeTreeData()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_IsSmaller</name>
            <fullName>System.Boolean Ionic.Zlib.DeflateManager._IsSmaller(System.Int16[], System.Int32, System.Int32, System.SByte[])</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_tr_align</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager._tr_align()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_tr_flush_block</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager._tr_flush_block(System.Int32, System.Int32, System.Boolean)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_tr_stored_block</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager._tr_stored_block(System.Int32, System.Int32, System.Boolean)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_tr_tally</name>
            <fullName>System.Boolean Ionic.Zlib.DeflateManager._tr_tally(System.Int32, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>bi_flush</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.bi_flush()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>bi_windup</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.bi_windup()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>build_bl_tree</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.build_bl_tree()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>copy_block</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.copy_block(System.Int32, System.Int32, System.Boolean)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Deflate</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.Deflate(Ionic.Zlib.FlushType)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DeflateFast</name>
            <fullName>Ionic.Zlib.BlockState Ionic.Zlib.DeflateManager.DeflateFast(Ionic.Zlib.FlushType)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DeflateNone</name>
            <fullName>Ionic.Zlib.BlockState Ionic.Zlib.DeflateManager.DeflateNone(Ionic.Zlib.FlushType)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DeflateSlow</name>
            <fullName>Ionic.Zlib.BlockState Ionic.Zlib.DeflateManager.DeflateSlow(Ionic.Zlib.FlushType)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>End</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.End()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>flush_block_only</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.flush_block_only(System.Boolean)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Initialize</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.Initialize(Ionic.Zlib.ZlibCodec, Ionic.Zlib.CompressionLevel, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Initialize</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.Initialize(Ionic.Zlib.ZlibCodec, Ionic.Zlib.CompressionLevel, System.Int32, Ionic.Zlib.CompressionStrategy)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Initialize</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.Initialize(Ionic.Zlib.ZlibCodec, Ionic.Zlib.CompressionLevel, System.Int32, System.Int32, Ionic.Zlib.CompressionStrategy)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Initialize</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.Initialize(Ionic.Zlib.ZlibCodec, Ionic.Zlib.CompressionLevel)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>longest_match</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.longest_match(System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>pqdownheap</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.pqdownheap(System.Int16[], System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>put_bytes</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.put_bytes(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Reset</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.Reset()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>scan_tree</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.scan_tree(System.Int16[], System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>send_all_trees</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.send_all_trees(System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>send_bits</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.send_bits(System.Int32, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>send_code</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.send_code(System.Int32, System.Int16[])</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>send_compressed_block</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.send_compressed_block(System.Int16[], System.Int16[])</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>send_tree</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.send_tree(System.Int16[], System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>set_data_type</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.set_data_type()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetDeflater</name>
            <fullName>System.Void Ionic.Zlib.DeflateManager.SetDeflater()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetDictionary</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.SetDictionary(System.Byte[])</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetParams</name>
            <fullName>System.Int32 Ionic.Zlib.DeflateManager.SetParams(Ionic.Zlib.CompressionLevel, Ionic.Zlib.CompressionStrategy)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>DeflateFlavor</name>
        <fullName>Ionic.Zlib.DeflateFlavor</fullName>
        <methods />
      </type>
      <type>
        <name>Tree</name>
        <fullName>Ionic.Zlib.Tree</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.Tree..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>bi_reverse</name>
            <fullName>System.Int32 Ionic.Zlib.Tree.bi_reverse(System.Int32, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>build_tree</name>
            <fullName>System.Void Ionic.Zlib.Tree.build_tree(Ionic.Zlib.DeflateManager)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DistanceCode</name>
            <fullName>System.Int32 Ionic.Zlib.Tree.DistanceCode(System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>gen_bitlen</name>
            <fullName>System.Void Ionic.Zlib.Tree.gen_bitlen(Ionic.Zlib.DeflateManager)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>gen_codes</name>
            <fullName>System.Void Ionic.Zlib.Tree.gen_codes(System.Int16[], System.Int32, System.Int16[])</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ParallelDeflateOutputStream</name>
        <fullName>Ionic.Zlib.ParallelDeflateOutputStream</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>TraceBits</name>
        <fullName>Ionic.Zlib.ParallelDeflateOutputStream.TraceBits</fullName>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionLevel, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionLevel, Ionic.Zlib.CompressionStrategy, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionLevel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream..ctor(System.IO.Stream, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_DeflateOne</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream._DeflateOne(System.Object)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>_Flush</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream._Flush(System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_FlushFinish</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream._FlushFinish()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InitializePoolOfWorkItems</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream._InitializePoolOfWorkItems()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Close</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream.Close()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DeflateOneSegment</name>
            <fullName>System.Boolean Ionic.Zlib.ParallelDeflateOutputStream.DeflateOneSegment(Ionic.Zlib.WorkItem)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream.Dispose(System.Boolean)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream.Dispose()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EmitPendingBuffers</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream.EmitPendingBuffers(System.Boolean, System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zlib.ParallelDeflateOutputStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Reset</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream.Reset(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zlib.ParallelDeflateOutputStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>TraceOutput</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream.TraceOutput(Ionic.Zlib.ParallelDeflateOutputStream.TraceBits, System.String, System.Object[])</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zlib.ParallelDeflateOutputStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BlockState</name>
        <fullName>Ionic.Zlib.BlockState</fullName>
        <methods />
      </type>
      <type>
        <name>ZlibBaseStream</name>
        <fullName>Ionic.Zlib.ZlibBaseStream</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>StreamMode</name>
        <fullName>Ionic.Zlib.ZlibBaseStream.StreamMode</fullName>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ZlibBaseStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, Ionic.Zlib.CompressionLevel, Ionic.Zlib.ZlibStreamFlavor, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_ReadAndValidateGzipHeader</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibBaseStream._ReadAndValidateGzipHeader()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Close</name>
            <fullName>System.Void Ionic.Zlib.ZlibBaseStream.Close()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressBuffer</name>
            <fullName>System.Void Ionic.Zlib.ZlibBaseStream.CompressBuffer(System.Byte[], System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressString</name>
            <fullName>System.Void Ionic.Zlib.ZlibBaseStream.CompressString(System.String, System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>end</name>
            <fullName>System.Void Ionic.Zlib.ZlibBaseStream.end()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>finish</name>
            <fullName>System.Void Ionic.Zlib.ZlibBaseStream.finish()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zlib.ZlibBaseStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibBaseStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadZeroTerminatedString</name>
            <fullName>System.String Ionic.Zlib.ZlibBaseStream.ReadZeroTerminatedString()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zlib.ZlibBaseStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zlib.ZlibBaseStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UncompressBuffer</name>
            <fullName>System.Byte[] Ionic.Zlib.ZlibBaseStream.UncompressBuffer(System.Byte[], System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UncompressString</name>
            <fullName>System.String Ionic.Zlib.ZlibBaseStream.UncompressString(System.Byte[], System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zlib.ZlibBaseStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZlibCodec</name>
        <fullName>Ionic.Zlib.ZlibCodec</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ZlibCodec..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ZlibCodec..ctor(Ionic.Zlib.CompressionMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InternalInitializeDeflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec._InternalInitializeDeflate(System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Deflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.Deflate(Ionic.Zlib.FlushType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EndDeflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.EndDeflate()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EndInflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.EndInflate()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>flush_pending</name>
            <fullName>System.Void Ionic.Zlib.ZlibCodec.flush_pending()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Inflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.Inflate(Ionic.Zlib.FlushType)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializeDeflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.InitializeDeflate()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializeDeflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.InitializeDeflate(Ionic.Zlib.CompressionLevel, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializeDeflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.InitializeDeflate(Ionic.Zlib.CompressionLevel, System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializeDeflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.InitializeDeflate(Ionic.Zlib.CompressionLevel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializeDeflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.InitializeDeflate(Ionic.Zlib.CompressionLevel, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializeInflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.InitializeInflate(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializeInflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.InitializeInflate(System.Int32, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializeInflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.InitializeInflate()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitializeInflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.InitializeInflate(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>read_buf</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.read_buf(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ResetDeflate</name>
            <fullName>System.Void Ionic.Zlib.ZlibCodec.ResetDeflate()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetDeflateParams</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.SetDeflateParams(Ionic.Zlib.CompressionLevel, Ionic.Zlib.CompressionStrategy)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetDictionary</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.SetDictionary(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SyncInflate</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibCodec.SyncInflate()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>InflateCodes</name>
        <fullName>Ionic.Zlib.InflateCodes</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.InflateCodes..ctor()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InflateFast</name>
            <fullName>System.Int32 Ionic.Zlib.InflateCodes.InflateFast(System.Int32, System.Int32, System.Int32[], System.Int32, System.Int32[], System.Int32, Ionic.Zlib.InflateBlocks, Ionic.Zlib.ZlibCodec)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Init</name>
            <fullName>System.Void Ionic.Zlib.InflateCodes.Init(System.Int32, System.Int32, System.Int32[], System.Int32, System.Int32[], System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Process</name>
            <fullName>System.Int32 Ionic.Zlib.InflateCodes.Process(Ionic.Zlib.InflateBlocks, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>InflateManager</name>
        <fullName>Ionic.Zlib.InflateManager</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>InflateManagerMode</name>
        <fullName>Ionic.Zlib.InflateManager.InflateManagerMode</fullName>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.InflateManager..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.InflateManager..ctor(System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>End</name>
            <fullName>System.Int32 Ionic.Zlib.InflateManager.End()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Inflate</name>
            <fullName>System.Int32 Ionic.Zlib.InflateManager.Inflate(Ionic.Zlib.FlushType)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Initialize</name>
            <fullName>System.Int32 Ionic.Zlib.InflateManager.Initialize(Ionic.Zlib.ZlibCodec, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Reset</name>
            <fullName>System.Int32 Ionic.Zlib.InflateManager.Reset()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetDictionary</name>
            <fullName>System.Int32 Ionic.Zlib.InflateManager.SetDictionary(System.Byte[])</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Sync</name>
            <fullName>System.Int32 Ionic.Zlib.InflateManager.Sync()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SyncPoint</name>
            <fullName>System.Int32 Ionic.Zlib.InflateManager.SyncPoint(Ionic.Zlib.ZlibCodec)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>FlushType</name>
        <fullName>Ionic.Zlib.FlushType</fullName>
        <methods />
      </type>
      <type>
        <name>SharedUtils</name>
        <fullName>Ionic.Zlib.SharedUtils</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.SharedUtils..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadInput</name>
            <fullName>System.Int32 Ionic.Zlib.SharedUtils.ReadInput(System.IO.TextReader, System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToByteArray</name>
            <fullName>System.Byte[] Ionic.Zlib.SharedUtils.ToByteArray(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToCharArray</name>
            <fullName>System.Char[] Ionic.Zlib.SharedUtils.ToCharArray(System.Byte[])</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>URShift</name>
            <fullName>System.Int32 Ionic.Zlib.SharedUtils.URShift(System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>StaticTree</name>
        <fullName>Ionic.Zlib.StaticTree</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.StaticTree..ctor(System.Int16[], System.Int32[], System.Int32, System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZlibException</name>
        <fullName>Ionic.Zlib.ZlibException</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ZlibException..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ZlibException..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CompressionStrategy</name>
        <fullName>Ionic.Zlib.CompressionStrategy</fullName>
        <methods />
      </type>
      <type>
        <name>ZlibStream</name>
        <fullName>Ionic.Zlib.ZlibStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ZlibStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ZlibStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, Ionic.Zlib.CompressionLevel)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ZlibStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zlib.ZlibStream..ctor(System.IO.Stream, Ionic.Zlib.CompressionMode, Ionic.Zlib.CompressionLevel, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressBuffer</name>
            <fullName>System.Byte[] Ionic.Zlib.ZlibStream.CompressBuffer(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CompressString</name>
            <fullName>System.Byte[] Ionic.Zlib.ZlibStream.CompressString(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zlib.ZlibStream.Dispose(System.Boolean)</fullName>
            <visibility>protected</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zlib.ZlibStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zlib.ZlibStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zlib.ZlibStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zlib.ZlibStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UncompressBuffer</name>
            <fullName>System.Byte[] Ionic.Zlib.ZlibStream.UncompressBuffer(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UncompressString</name>
            <fullName>System.String Ionic.Zlib.ZlibStream.UncompressString(System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zlib.ZlibStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SelectionCriterion</name>
        <fullName>Ionic.SelectionCriterion</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.SelectionCriterion..ctor()</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CriterionTrace</name>
            <fullName>System.Void Ionic.SelectionCriterion.CriterionTrace(System.String, System.Object[])</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.SelectionCriterion.Evaluate(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.SelectionCriterion.Evaluate(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TypeCriterion</name>
        <fullName>Ionic.TypeCriterion</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.TypeCriterion..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.TypeCriterion.Evaluate(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.TypeCriterion.Evaluate(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.TypeCriterion.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SizeCriterion</name>
        <fullName>Ionic.SizeCriterion</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.SizeCriterion..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_Evaluate</name>
            <fullName>System.Boolean Ionic.SizeCriterion._Evaluate(System.Int64)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.SizeCriterion.Evaluate(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.SizeCriterion.Evaluate(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.SizeCriterion.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ComparisonOperator</name>
        <fullName>Ionic.ComparisonOperator</fullName>
        <methods />
      </type>
      <type>
        <name>EnumUtil</name>
        <fullName>Ionic.EnumUtil</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.EnumUtil..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetDescription</name>
            <fullName>System.String Ionic.EnumUtil.GetDescription(System.Enum)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Parse</name>
            <fullName>System.Object Ionic.EnumUtil.Parse(System.Type, System.String, System.Boolean)</fullName>
            <visibility>internal</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Parse</name>
            <fullName>System.Object Ionic.EnumUtil.Parse(System.Type, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>NameCriterion</name>
        <fullName>Ionic.NameCriterion</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.NameCriterion..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_Evaluate</name>
            <fullName>System.Boolean Ionic.NameCriterion._Evaluate(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.NameCriterion.Evaluate(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.NameCriterion.Evaluate(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.NameCriterion.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AttributesCriterion</name>
        <fullName>Ionic.AttributesCriterion</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.AttributesCriterion..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_Evaluate</name>
            <fullName>System.Boolean Ionic.AttributesCriterion._Evaluate(System.IO.FileAttributes)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_EvaluateOne</name>
            <fullName>System.Boolean Ionic.AttributesCriterion._EvaluateOne(System.IO.FileAttributes, System.IO.FileAttributes)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.AttributesCriterion.Evaluate(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.AttributesCriterion.Evaluate(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.AttributesCriterion.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>TimeCriterion</name>
        <fullName>Ionic.TimeCriterion</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.TimeCriterion..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_Evaluate</name>
            <fullName>System.Boolean Ionic.TimeCriterion._Evaluate(System.DateTime)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.TimeCriterion.Evaluate(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.TimeCriterion.Evaluate(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.TimeCriterion.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>LogicalConjunction</name>
        <fullName>Ionic.LogicalConjunction</fullName>
        <methods />
      </type>
      <type>
        <name>CompoundCriterion</name>
        <fullName>Ionic.CompoundCriterion</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.CompoundCriterion..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.CompoundCriterion.Evaluate(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.CompoundCriterion.Evaluate(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.CompoundCriterion.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WhichTime</name>
        <fullName>Ionic.WhichTime</fullName>
        <methods />
      </type>
      <type>
        <name>FileSelector</name>
        <fullName>Ionic.FileSelector</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>ParseState</name>
        <fullName>Ionic.FileSelector.ParseState</fullName>
        <methods />
      </type>
      <type>
        <name>RegexAssertions</name>
        <fullName>Ionic.FileSelector.RegexAssertions</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.FileSelector..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.FileSelector..ctor(System.String, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_ParseCriterion</name>
            <fullName>Ionic.SelectionCriterion Ionic.FileSelector._ParseCriterion(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.FileSelector.Evaluate(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Evaluate</name>
            <fullName>System.Boolean Ionic.FileSelector.Evaluate(Ionic.Zip.ZipEntry)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>NormalizeCriteriaExpression</name>
            <fullName>System.String Ionic.FileSelector.NormalizeCriteriaExpression(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SelectEntries</name>
            <fullName>System.Collections.Generic.ICollection&lt;Ionic.Zip.ZipEntry&gt; Ionic.FileSelector.SelectEntries(Ionic.Zip.ZipFile, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SelectEntries</name>
            <fullName>System.Collections.Generic.ICollection&lt;Ionic.Zip.ZipEntry&gt; Ionic.FileSelector.SelectEntries(Ionic.Zip.ZipFile)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SelectFiles</name>
            <fullName>System.Collections.Generic.ICollection&lt;System.String&gt; Ionic.FileSelector.SelectFiles(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SelectFiles</name>
            <fullName>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt; Ionic.FileSelector.SelectFiles(System.String, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>2</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>2</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>UnauthorizedAccessException</name>
                  <baseName>System.UnauthorizedAccessException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <ExceptionReference>
                  <name>IOException</name>
                  <baseName>System.IO.IOException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>SelectorTrace</name>
            <fullName>System.Void Ionic.FileSelector.SelectorTrace(System.String, System.Object[])</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.FileSelector.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>EncryptionAlgorithm</name>
        <fullName>Ionic.Zip.EncryptionAlgorithm</fullName>
        <methods />
      </type>
      <type>
        <name>ReadOptions</name>
        <fullName>Ionic.Zip.ReadOptions</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ReadOptions..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>OffsetStream</name>
        <fullName>Ionic.Zip.OffsetStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.OffsetStream..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Close</name>
            <fullName>System.Void Ionic.Zip.OffsetStream.Close()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zip.OffsetStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zip.OffsetStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zip.OffsetStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zip.OffsetStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>System.IDisposable.Dispose</name>
            <fullName>System.Void Ionic.Zip.OffsetStream.System.IDisposable.Dispose()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zip.OffsetStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SfxGenerationException</name>
        <fullName>Ionic.Zip.SfxGenerationException</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.SfxGenerationException..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.SfxGenerationException..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.SfxGenerationException..ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipSegmentedStream</name>
        <fullName>Ionic.Zip.ZipSegmentedStream</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>RwMode</name>
        <fullName>Ionic.Zip.ZipSegmentedStream.RwMode</fullName>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipSegmentedStream..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_NameForSegment</name>
            <fullName>System.String Ionic.Zip.ZipSegmentedStream._NameForSegment(System.UInt32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_SetReadStream</name>
            <fullName>System.Void Ionic.Zip.ZipSegmentedStream._SetReadStream()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_SetWriteStream</name>
            <fullName>System.Void Ionic.Zip.ZipSegmentedStream._SetWriteStream(System.UInt32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ComputeSegment</name>
            <fullName>System.UInt32 Ionic.Zip.ZipSegmentedStream.ComputeSegment(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zip.ZipSegmentedStream.Dispose(System.Boolean)</fullName>
            <visibility>protected</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zip.ZipSegmentedStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ForReading</name>
            <fullName>Ionic.Zip.ZipSegmentedStream Ionic.Zip.ZipSegmentedStream.ForReading(System.String, System.UInt32, System.UInt32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ForUpdate</name>
            <fullName>System.IO.Stream Ionic.Zip.ZipSegmentedStream.ForUpdate(System.String, System.UInt32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ForWriting</name>
            <fullName>Ionic.Zip.ZipSegmentedStream Ionic.Zip.ZipSegmentedStream.ForWriting(System.String, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zip.ZipSegmentedStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zip.ZipSegmentedStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zip.ZipSegmentedStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.Zip.ZipSegmentedStream.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>TruncateBackward</name>
            <fullName>System.Int64 Ionic.Zip.ZipSegmentedStream.TruncateBackward(System.UInt32, System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zip.ZipSegmentedStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ReadProgressEventArgs</name>
        <fullName>Ionic.Zip.ReadProgressEventArgs</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ReadProgressEventArgs..ctor()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ReadProgressEventArgs..ctor(System.String, Ionic.Zip.ZipProgressEventType)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>After</name>
            <fullName>Ionic.Zip.ReadProgressEventArgs Ionic.Zip.ReadProgressEventArgs.After(System.String, Ionic.Zip.ZipEntry, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Before</name>
            <fullName>Ionic.Zip.ReadProgressEventArgs Ionic.Zip.ReadProgressEventArgs.Before(System.String, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ByteUpdate</name>
            <fullName>Ionic.Zip.ReadProgressEventArgs Ionic.Zip.ReadProgressEventArgs.ByteUpdate(System.String, Ionic.Zip.ZipEntry, System.Int64, System.Int64)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Completed</name>
            <fullName>Ionic.Zip.ReadProgressEventArgs Ionic.Zip.ReadProgressEventArgs.Completed(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Started</name>
            <fullName>Ionic.Zip.ReadProgressEventArgs Ionic.Zip.ReadProgressEventArgs.Started(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AddProgressEventArgs</name>
        <fullName>Ionic.Zip.AddProgressEventArgs</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.AddProgressEventArgs..ctor()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.AddProgressEventArgs..ctor(System.String, Ionic.Zip.ZipProgressEventType)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AfterEntry</name>
            <fullName>Ionic.Zip.AddProgressEventArgs Ionic.Zip.AddProgressEventArgs.AfterEntry(System.String, Ionic.Zip.ZipEntry, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Completed</name>
            <fullName>Ionic.Zip.AddProgressEventArgs Ionic.Zip.AddProgressEventArgs.Completed(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Started</name>
            <fullName>Ionic.Zip.AddProgressEventArgs Ionic.Zip.AddProgressEventArgs.Started(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipEntry</name>
        <fullName>Ionic.Zip.ZipEntry</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>&lt;&gt;c__DisplayClass1</name>
        <fullName>Ionic.Zip.ZipEntry.&lt;&gt;c__DisplayClass1</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.&lt;&gt;c__DisplayClass1..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>&lt;ProcessExtraFieldZip64&gt;b__0</name>
            <fullName>System.Int64 Ionic.Zip.ZipEntry.&lt;&gt;c__DisplayClass1.&lt;ProcessExtraFieldZip64&gt;b__0()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>&lt;&gt;c__DisplayClass4</name>
        <fullName>Ionic.Zip.ZipEntry.&lt;&gt;c__DisplayClass4</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.&lt;&gt;c__DisplayClass4..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>&lt;ProcessExtraFieldUnixTimes&gt;b__3</name>
            <fullName>System.DateTime Ionic.Zip.ZipEntry.&lt;&gt;c__DisplayClass4.&lt;ProcessExtraFieldUnixTimes&gt;b__3()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CopyHelper</name>
        <fullName>Ionic.Zip.ZipEntry.CopyHelper</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.CopyHelper..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AppendCopyToFileName</name>
            <fullName>System.String Ionic.Zip.ZipEntry.CopyHelper.AppendCopyToFileName(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Func</name>
        <fullName>Ionic.Zip.ZipEntry.Func</fullName>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipEntry..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_CheckRead</name>
            <fullName>System.Void Ionic.Zip.ZipEntry._CheckRead(System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_SetTimes</name>
            <fullName>System.Void Ionic.Zip.ZipEntry._SetTimes(System.String, System.Boolean)</fullName>
            <visibility>internal</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>IOException</name>
                  <baseName>System.IO.IOException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>_WriteEntryData</name>
            <fullName>System.Void Ionic.Zip.ZipEntry._WriteEntryData(System.IO.Stream)</fullName>
            <visibility>private</visibility>
            <qtdTry>2</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>CheckExtractExistingFile</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.CheckExtractExistingFile(System.String, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ConstructExtraField</name>
            <fullName>System.Byte[] Ionic.Zip.ZipEntry.ConstructExtraField(System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CopyMetaData</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.CopyMetaData(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CopyThroughOneEntry</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.CopyThroughOneEntry(System.IO.Stream)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CopyThroughWithNoChange</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.CopyThroughWithNoChange(System.IO.Stream)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CopyThroughWithRecompute</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.CopyThroughWithRecompute(System.IO.Stream)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Create</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipEntry.Create(System.String, Ionic.Zip.ZipEntrySource, System.Object, System.Object)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CreateForJitStreamProvider</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipEntry.CreateForJitStreamProvider(System.String, Ionic.Zip.OpenDelegate, Ionic.Zip.CloseDelegate)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CreateForStream</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipEntry.CreateForStream(System.String, System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CreateForWriter</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipEntry.CreateForWriter(System.String, Ionic.Zip.WriteDelegate)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CreateForZipOutputStream</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipEntry.CreateForZipOutputStream(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CreateFromFile</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipEntry.CreateFromFile(System.String, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CreateFromNothing</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipEntry.CreateFromNothing(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Extract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.Extract()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Extract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.Extract(Ionic.Zip.ExtractExistingFileAction)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Extract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.Extract(System.String, Ionic.Zip.ExtractExistingFileAction)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Extract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.Extract(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Extract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.Extract(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractOne</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.ExtractOne(System.IO.Stream)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractWithPassword</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ExtractWithPassword(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractWithPassword</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ExtractWithPassword(Ionic.Zip.ExtractExistingFileAction, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractWithPassword</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ExtractWithPassword(System.IO.Stream, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractWithPassword</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ExtractWithPassword(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractWithPassword</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ExtractWithPassword(System.String, Ionic.Zip.ExtractExistingFileAction, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>FigureCrc32</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.FigureCrc32()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>FindExtraFieldSegment</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.FindExtraFieldSegment(System.Byte[], System.Int32, System.UInt16)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>FinishOutputStream</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.FinishOutputStream(System.IO.Stream, Ionic.Zip.CountingStream, System.IO.Stream, System.IO.Stream, Ionic.Crc.CrcCalculatorStream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetEncodedFileNameBytes</name>
            <fullName>System.Byte[] Ionic.Zip.ZipEntry.GetEncodedFileNameBytes()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetExtractDecompressor</name>
            <fullName>System.IO.Stream Ionic.Zip.ZipEntry.GetExtractDecompressor(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetExtractDecryptor</name>
            <fullName>System.IO.Stream Ionic.Zip.ZipEntry.GetExtractDecryptor(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetKeyStrengthInBits</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.GetKeyStrengthInBits(Ionic.Zip.EncryptionAlgorithm)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetLengthOfCryptoHeaderBytes</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.GetLengthOfCryptoHeaderBytes(Ionic.Zip.EncryptionAlgorithm)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>HandlePK00Prefix</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.HandlePK00Prefix(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>HandleUnexpectedDataDescriptor</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.HandleUnexpectedDataDescriptor(Ionic.Zip.ZipEntry)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InternalExtract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.InternalExtract(System.String, System.IO.Stream, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>InternalOpenReader</name>
            <fullName>Ionic.Crc.CrcCalculatorStream Ionic.Zip.ZipEntry.InternalOpenReader(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IsNotValidSig</name>
            <fullName>System.Boolean Ionic.Zip.ZipEntry.IsNotValidSig(System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IsNotValidZipDirEntrySig</name>
            <fullName>System.Boolean Ionic.Zip.ZipEntry.IsNotValidZipDirEntrySig(System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>MarkAsDirectory</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.MarkAsDirectory()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>MaybeApplyCompression</name>
            <fullName>System.IO.Stream Ionic.Zip.ZipEntry.MaybeApplyCompression(System.IO.Stream, System.Int64)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>MaybeApplyEncryption</name>
            <fullName>System.IO.Stream Ionic.Zip.ZipEntry.MaybeApplyEncryption(System.IO.Stream)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>MaybeUnsetCompressionMethodForWriting</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.MaybeUnsetCompressionMethodForWriting(System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>NameInArchive</name>
            <fullName>System.String Ionic.Zip.ZipEntry.NameInArchive(System.String, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>NormalizeFileName</name>
            <fullName>System.String Ionic.Zip.ZipEntry.NormalizeFileName()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>NotifySaveComplete</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.NotifySaveComplete()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnAfterExtract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.OnAfterExtract(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnBeforeExtract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.OnBeforeExtract(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnExtractExisting</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.OnExtractExisting(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnExtractProgress</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.OnExtractProgress(System.Int64, System.Int64)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnWriteBlock</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.OnWriteBlock(System.Int64, System.Int64)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnZipErrorWhileSaving</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.OnZipErrorWhileSaving(System.Exception)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OpenReader</name>
            <fullName>Ionic.Crc.CrcCalculatorStream Ionic.Zip.ZipEntry.OpenReader(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OpenReader</name>
            <fullName>Ionic.Crc.CrcCalculatorStream Ionic.Zip.ZipEntry.OpenReader()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>PostProcessOutput</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.PostProcessOutput(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>PrepOutputStream</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.PrepOutputStream(System.IO.Stream, System.Int64, Ionic.Zip.CountingStream, System.IO.Stream, System.IO.Stream, Ionic.Crc.CrcCalculatorStream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>PrepSourceStream</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.PrepSourceStream()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ProcessExtraField</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.ProcessExtraField(System.IO.Stream, System.Int16)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ProcessExtraFieldInfoZipTimes</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.ProcessExtraFieldInfoZipTimes(System.Byte[], System.Int32, System.Int16, System.Int64)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ProcessExtraFieldPkwareStrongEncryption</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.ProcessExtraFieldPkwareStrongEncryption(System.Byte[], System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ProcessExtraFieldUnixTimes</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.ProcessExtraFieldUnixTimes(System.Byte[], System.Int32, System.Int16, System.Int64)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ProcessExtraFieldWindowsTimes</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.ProcessExtraFieldWindowsTimes(System.Byte[], System.Int32, System.Int16, System.Int64)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ProcessExtraFieldWinZipAes</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.ProcessExtraFieldWinZipAes(System.Byte[], System.Int32, System.Int16, System.Int64)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ProcessExtraFieldZip64</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.ProcessExtraFieldZip64(System.Byte[], System.Int32, System.Int16, System.Int64)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadDirEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipEntry.ReadDirEntry(Ionic.Zip.ZipFile, System.Collections.Generic.Dictionary&lt;System.String, System.Object&gt;)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipEntry.ReadEntry(Ionic.Zip.ZipContainer, System.Boolean)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadExtraField</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ReadExtraField()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadHeader</name>
            <fullName>System.Boolean Ionic.Zip.ZipEntry.ReadHeader(Ionic.Zip.ZipEntry, System.Text.Encoding)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadWeakEncryptionHeader</name>
            <fullName>System.Int32 Ionic.Zip.ZipEntry.ReadWeakEncryptionHeader(System.IO.Stream, System.Byte[])</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReallyDelete</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ReallyDelete(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ResetDirEntry</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ResetDirEntry()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetEntryTimes</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.SetEntryTimes(System.DateTime, System.DateTime, System.DateTime)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetFdpLoh</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.SetFdpLoh()</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>1</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Throw</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <throwsIntoCatch>
                  <string>Ionic.Zip.BadStateException</string>
                </throwsIntoCatch>
                <ExceptionReference>
                  <name>IOException</name>
                  <baseName>System.IO.IOException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>SetInputAndFigureFileLength</name>
            <fullName>System.Int64 Ionic.Zip.ZipEntry.SetInputAndFigureFileLength(System.IO.Stream)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetupCryptoForExtract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.SetupCryptoForExtract(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetZip64Flags</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.SetZip64Flags()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>StoreRelativeOffset</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.StoreRelativeOffset()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.Zip.ZipEntry.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>TraceWriteLine</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.TraceWriteLine(System.String, System.Object[])</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ValidateCompression</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ValidateCompression()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ValidateEncryption</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.ValidateEncryption()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ValidateOutput</name>
            <fullName>System.Boolean Ionic.Zip.ZipEntry.ValidateOutput(System.String, System.IO.Stream, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>VerifyCrcAfterExtract</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.VerifyCrcAfterExtract(System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WantReadAgain</name>
            <fullName>System.Boolean Ionic.Zip.ZipEntry.WantReadAgain()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.Write(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>WriteCentralDirectoryEntry</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.WriteCentralDirectoryEntry(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteHeader</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.WriteHeader(System.IO.Stream, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteSecurityMetadata</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.WriteSecurityMetadata(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteStatus</name>
            <fullName>System.Void Ionic.Zip.ZipEntry.WriteStatus(System.String, System.Object[])</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WriteDelegate</name>
        <fullName>Ionic.Zip.WriteDelegate</fullName>
        <methods />
      </type>
      <type>
        <name>ZipErrorAction</name>
        <fullName>Ionic.Zip.ZipErrorAction</fullName>
        <methods />
      </type>
      <type>
        <name>SetCompressionCallback</name>
        <fullName>Ionic.Zip.SetCompressionCallback</fullName>
        <methods />
      </type>
      <type>
        <name>ZipEntrySource</name>
        <fullName>Ionic.Zip.ZipEntrySource</fullName>
        <methods />
      </type>
      <type>
        <name>ZipCrypto</name>
        <fullName>Ionic.Zip.ZipCrypto</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipCrypto..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DecryptMessage</name>
            <fullName>System.Byte[] Ionic.Zip.ZipCrypto.DecryptMessage(System.Byte[], System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EncryptMessage</name>
            <fullName>System.Byte[] Ionic.Zip.ZipCrypto.EncryptMessage(System.Byte[], System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ForRead</name>
            <fullName>Ionic.Zip.ZipCrypto Ionic.Zip.ZipCrypto.ForRead(System.String, Ionic.Zip.ZipEntry)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ForWrite</name>
            <fullName>Ionic.Zip.ZipCrypto Ionic.Zip.ZipCrypto.ForWrite(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InitCipher</name>
            <fullName>System.Void Ionic.Zip.ZipCrypto.InitCipher(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateKeys</name>
            <fullName>System.Void Ionic.Zip.ZipCrypto.UpdateKeys(System.Byte)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BadStateException</name>
        <fullName>Ionic.Zip.BadStateException</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadStateException..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadStateException..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadStateException..ctor(System.String, System.Exception)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadStateException..ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>Zip64Option</name>
        <fullName>Ionic.Zip.Zip64Option</fullName>
        <methods />
      </type>
      <type>
        <name>OpenDelegate</name>
        <fullName>Ionic.Zip.OpenDelegate</fullName>
        <methods />
      </type>
      <type>
        <name>ZipOutputStream</name>
        <fullName>Ionic.Zip.ZipOutputStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream..ctor(System.IO.Stream, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_FinishCurrentEntry</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream._FinishCurrentEntry()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_Init</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream._Init(System.IO.Stream, System.Boolean, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InitiateCurrentEntry</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream._InitiateCurrentEntry(System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ContainsEntry</name>
            <fullName>System.Boolean Ionic.Zip.ZipOutputStream.ContainsEntry(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream.Dispose(System.Boolean)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InsureUniqueEntry</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream.InsureUniqueEntry(Ionic.Zip.ZipEntry)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>PutNextEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipOutputStream.PutNextEntry(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zip.ZipOutputStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zip.ZipOutputStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.Zip.ZipOutputStream.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zip.ZipOutputStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipContainer</name>
        <fullName>Ionic.Zip.ZipContainer</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipContainer..ctor(System.Object)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipCipherStream</name>
        <fullName>Ionic.Zip.ZipCipherStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipCipherStream..ctor(System.IO.Stream, Ionic.Zip.ZipCrypto, Ionic.Zip.CryptoMode)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zip.ZipCipherStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zip.ZipCipherStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zip.ZipCipherStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zip.ZipCipherStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zip.ZipCipherStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WinZipAesCipherStream</name>
        <fullName>Ionic.Zip.WinZipAesCipherStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream..ctor(System.IO.Stream, Ionic.Zip.WinZipAesCrypto, System.Int64, Ionic.Zip.CryptoMode)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream..ctor(System.IO.Stream, Ionic.Zip.WinZipAesCrypto, Ionic.Zip.CryptoMode)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Close</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.Close()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zip.WinZipAesCipherStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadTransformBlocks</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.ReadTransformBlocks(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadTransformOneBlock</name>
            <fullName>System.Int32 Ionic.Zip.WinZipAesCipherStream.ReadTransformOneBlock(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zip.WinZipAesCipherStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>TraceOutput</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.TraceOutput(System.String, System.Object[])</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteTransformBlocks</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.WriteTransformBlocks(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteTransformFinalBlock</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.WriteTransformFinalBlock()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteTransformOneBlock</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.WriteTransformOneBlock(System.Byte[], System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>XorInPlace</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCipherStream.XorInPlace(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipProgressEventArgs</name>
        <fullName>Ionic.Zip.ZipProgressEventArgs</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipProgressEventArgs..ctor()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipProgressEventArgs..ctor(System.String, Ionic.Zip.ZipProgressEventType)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CompressionMethod</name>
        <fullName>Ionic.Zip.CompressionMethod</fullName>
        <methods />
      </type>
      <type>
        <name>ZipOutput</name>
        <fullName>Ionic.Zip.ZipOutput</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>CountEntries</name>
            <fullName>System.Int32 Ionic.Zip.ZipOutput.CountEntries(System.Collections.Generic.ICollection&lt;Ionic.Zip.ZipEntry&gt;)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GenCentralDirectoryFooter</name>
            <fullName>System.Byte[] Ionic.Zip.ZipOutput.GenCentralDirectoryFooter(System.Int64, System.Int64, Ionic.Zip.Zip64Option, System.Int32, System.String, Ionic.Zip.ZipContainer)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GenZip64EndOfCentralDirectory</name>
            <fullName>System.Byte[] Ionic.Zip.ZipOutput.GenZip64EndOfCentralDirectory(System.Int64, System.Int64, System.Int32, System.UInt32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetEncoding</name>
            <fullName>System.Text.Encoding Ionic.Zip.ZipOutput.GetEncoding(Ionic.Zip.ZipContainer, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>WriteCentralDirectoryStructure</name>
            <fullName>System.Boolean Ionic.Zip.ZipOutput.WriteCentralDirectoryStructure(System.IO.Stream, System.Collections.Generic.ICollection&lt;Ionic.Zip.ZipEntry&gt;, System.UInt32, Ionic.Zip.Zip64Option, System.String, Ionic.Zip.ZipContainer)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtractExistingFileAction</name>
        <fullName>Ionic.Zip.ExtractExistingFileAction</fullName>
        <methods />
      </type>
      <type>
        <name>CountingStream</name>
        <fullName>Ionic.Zip.CountingStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.CountingStream..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>Object</name>
                  <baseName>System.Object</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>Adjust</name>
            <fullName>System.Void Ionic.Zip.CountingStream.Adjust(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zip.CountingStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zip.CountingStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zip.CountingStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zip.CountingStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zip.CountingStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SelfExtractorSaveOptions</name>
        <fullName>Ionic.Zip.SelfExtractorSaveOptions</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.SelfExtractorSaveOptions..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BadPasswordException</name>
        <fullName>Ionic.Zip.BadPasswordException</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadPasswordException..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadPasswordException..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadPasswordException..ctor(System.String, System.Exception)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadPasswordException..ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipConstants</name>
        <fullName>Ionic.Zip.ZipConstants</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>ZipErrorEventArgs</name>
        <fullName>Ionic.Zip.ZipErrorEventArgs</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipErrorEventArgs..ctor()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Saving</name>
            <fullName>Ionic.Zip.ZipErrorEventArgs Ionic.Zip.ZipErrorEventArgs.Saving(System.String, Ionic.Zip.ZipEntry, System.Exception)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>CryptoMode</name>
        <fullName>Ionic.Zip.CryptoMode</fullName>
        <methods />
      </type>
      <type>
        <name>SharedUtilities</name>
        <fullName>Ionic.Zip.SharedUtilities</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>_HRForException</name>
            <fullName>System.UInt32 Ionic.Zip.SharedUtilities._HRForException(System.Exception)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_ReadFourBytes</name>
            <fullName>System.Int32 Ionic.Zip.SharedUtilities._ReadFourBytes(System.IO.Stream, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AdjustTime_Reverse</name>
            <fullName>System.DateTime Ionic.Zip.SharedUtilities.AdjustTime_Reverse(System.DateTime)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CreateAndOpenUniqueTempFile</name>
            <fullName>System.Void Ionic.Zip.SharedUtilities.CreateAndOpenUniqueTempFile(System.String, System.IO.Stream, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>IOException</name>
                  <baseName>System.IO.IOException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>DateTimeToPacked</name>
            <fullName>System.Int32 Ionic.Zip.SharedUtilities.DateTimeToPacked(System.DateTime)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>FindSignature</name>
            <fullName>System.Int64 Ionic.Zip.SharedUtilities.FindSignature(System.IO.Stream, System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetFileLength</name>
            <fullName>System.Int64 Ionic.Zip.SharedUtilities.GetFileLength(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>InternalGetTempFileName</name>
            <fullName>System.String Ionic.Zip.SharedUtilities.InternalGetTempFileName()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>NormalizePathForUseInZipFile</name>
            <fullName>System.String Ionic.Zip.SharedUtilities.NormalizePathForUseInZipFile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>PackedToDateTime</name>
            <fullName>System.DateTime Ionic.Zip.SharedUtilities.PackedToDateTime(System.Int32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadEntrySignature</name>
            <fullName>System.Int32 Ionic.Zip.SharedUtilities.ReadEntrySignature(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>ReadInt</name>
            <fullName>System.Int32 Ionic.Zip.SharedUtilities.ReadInt(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadSignature</name>
            <fullName>System.Int32 Ionic.Zip.SharedUtilities.ReadSignature(System.IO.Stream)</fullName>
            <visibility>internal</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>ReadWithRetry</name>
            <fullName>System.Int32 Ionic.Zip.SharedUtilities.ReadWithRetry(System.IO.Stream, System.Byte[], System.Int32, System.Int32, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>IOException</name>
                  <baseName>System.IO.IOException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>SimplifyFwdSlashPath</name>
            <fullName>System.String Ionic.Zip.SharedUtilities.SimplifyFwdSlashPath(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>StringFromBuffer</name>
            <fullName>System.String Ionic.Zip.SharedUtilities.StringFromBuffer(System.Byte[], System.Text.Encoding)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>StringToByteArray</name>
            <fullName>System.Byte[] Ionic.Zip.SharedUtilities.StringToByteArray(System.String, System.Text.Encoding)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>StringToByteArray</name>
            <fullName>System.Byte[] Ionic.Zip.SharedUtilities.StringToByteArray(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Utf8StringFromBuffer</name>
            <fullName>System.String Ionic.Zip.SharedUtilities.Utf8StringFromBuffer(System.Byte[])</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Workaround_Ladybug318918</name>
            <fullName>System.Void Ionic.Zip.SharedUtilities.Workaround_Ladybug318918(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipOption</name>
        <fullName>Ionic.Zip.ZipOption</fullName>
        <methods />
      </type>
      <type>
        <name>ZipProgressEventType</name>
        <fullName>Ionic.Zip.ZipProgressEventType</fullName>
        <methods />
      </type>
      <type>
        <name>ZipInputStream</name>
        <fullName>Ionic.Zip.ZipInputStream</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipInputStream..ctor(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipInputStream..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipInputStream..ctor(System.IO.Stream, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_Init</name>
            <fullName>System.Void Ionic.Zip.ZipInputStream._Init(System.IO.Stream, System.Boolean, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zip.ZipInputStream.Dispose(System.Boolean)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Flush</name>
            <fullName>System.Void Ionic.Zip.ZipInputStream.Flush()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetNextEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipInputStream.GetNextEntry()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>System.Int32 Ionic.Zip.ZipInputStream.Read(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Seek</name>
            <fullName>System.Int64 Ionic.Zip.ZipInputStream.Seek(System.Int64, System.IO.SeekOrigin)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetLength</name>
            <fullName>System.Void Ionic.Zip.ZipInputStream.SetLength(System.Int64)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SetupStream</name>
            <fullName>System.Void Ionic.Zip.ZipInputStream.SetupStream()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.Zip.ZipInputStream.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Write</name>
            <fullName>System.Void Ionic.Zip.ZipInputStream.Write(System.Byte[], System.Int32, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipFile</name>
        <fullName>Ionic.Zip.ZipFile</fullName>
        <kind>class</kind>
        <methods />
      </type>
      <type>
        <name>&lt;&gt;c__DisplayClass1</name>
        <fullName>Ionic.Zip.ZipFile.&lt;&gt;c__DisplayClass1</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipFile.&lt;&gt;c__DisplayClass1..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>&lt;get_EntriesSorted&gt;b__0</name>
            <fullName>System.Int32 Ionic.Zip.ZipFile.&lt;&gt;c__DisplayClass1.&lt;get_EntriesSorted&gt;b__0(Ionic.Zip.ZipEntry, Ionic.Zip.ZipEntry)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>&lt;GetEnumerator&gt;d__3</name>
        <fullName>Ionic.Zip.ZipFile.&lt;GetEnumerator&gt;d__3</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipFile.&lt;GetEnumerator&gt;d__3..ctor(System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>&lt;&gt;m__Finally6</name>
            <fullName>System.Void Ionic.Zip.ZipFile.&lt;GetEnumerator&gt;d__3.&lt;&gt;m__Finally6()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>MoveNext</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.&lt;GetEnumerator&gt;d__3.MoveNext()</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>System.Collections.IEnumerator.Reset</name>
            <fullName>System.Void Ionic.Zip.ZipFile.&lt;GetEnumerator&gt;d__3.System.Collections.IEnumerator.Reset()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>System.IDisposable.Dispose</name>
            <fullName>System.Void Ionic.Zip.ZipFile.&lt;GetEnumerator&gt;d__3.System.IDisposable.Dispose()</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ExtractorSettings</name>
        <fullName>Ionic.Zip.ZipFile.ExtractorSettings</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ExtractorSettings..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipFile..ctor(System.String, System.IO.TextWriter)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>1</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Throw</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <throwsIntoCatch>
                  <string>Ionic.Zip.ZipException</string>
                </throwsIntoCatch>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipFile..ctor(System.Text.Encoding)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipFile..ctor(System.String, System.IO.TextWriter, System.Text.Encoding)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>1</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Throw</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <throwsIntoCatch>
                  <string>Ionic.Zip.ZipException</string>
                </throwsIntoCatch>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipFile..ctor(System.String, System.Text.Encoding)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>1</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Throw</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <throwsIntoCatch>
                  <string>Ionic.Zip.ZipException</string>
                </throwsIntoCatch>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipFile..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipFile..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>1</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Throw</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <throwsIntoCatch>
                  <string>Ionic.Zip.ZipException</string>
                </throwsIntoCatch>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>_AddOrUpdateSelectedFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile._AddOrUpdateSelectedFiles(System.String, System.String, System.String, System.Boolean, System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_initEntriesDictionary</name>
            <fullName>System.Void Ionic.Zip.ZipFile._initEntriesDictionary()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InitInstance</name>
            <fullName>System.Void Ionic.Zip.ZipFile._InitInstance(System.String, System.IO.TextWriter)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InternalAddEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile._InternalAddEntry(Ionic.Zip.ZipEntry)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_InternalExtractAll</name>
            <fullName>System.Void Ionic.Zip.ZipFile._InternalExtractAll(System.String, System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_SaveSfxStub</name>
            <fullName>System.Void Ionic.Zip.ZipFile._SaveSfxStub(System.String, Ionic.Zip.SelfExtractorSaveOptions)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddDirectory</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddDirectory</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddDirectory(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddDirectoryByName</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddDirectoryByName(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddEntry(System.String, Ionic.Zip.WriteDelegate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddEntry(System.String, System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddEntry(System.String, Ionic.Zip.OpenDelegate, Ionic.Zip.CloseDelegate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddEntry(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddEntry(System.String, System.String, System.Text.Encoding)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddEntry(System.String, System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddFile</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddFile(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddFile</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddFile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AddFiles(System.Collections.Generic.IEnumerable&lt;System.String&gt;)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AddFiles(System.Collections.Generic.IEnumerable&lt;System.String&gt;, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AddFiles(System.Collections.Generic.IEnumerable&lt;System.String&gt;, System.Boolean, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddItem</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddItem(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddItem</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddItem(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddOrUpdateDirectoryImpl</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddOrUpdateDirectoryImpl(System.String, System.String, Ionic.Zip.AddOrUpdateAction, System.Boolean, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddOrUpdateDirectoryImpl</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.AddOrUpdateDirectoryImpl(System.String, System.String, Ionic.Zip.AddOrUpdateAction)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddSelectedFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AddSelectedFiles(System.String, System.String, System.String, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddSelectedFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AddSelectedFiles(System.String, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddSelectedFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AddSelectedFiles(System.String, System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddSelectedFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AddSelectedFiles(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddSelectedFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AddSelectedFiles(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AddSelectedFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AddSelectedFiles(System.String, System.String, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AfterAddEntry</name>
            <fullName>System.Void Ionic.Zip.ZipFile.AfterAddEntry(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CheckZip</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.CheckZip(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CheckZip</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.CheckZip(System.String, System.Boolean, System.IO.TextWriter)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CheckZipPassword</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.CheckZipPassword(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>CleanupAfterSaveOperation</name>
            <fullName>System.Void Ionic.Zip.ZipFile.CleanupAfterSaveOperation()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ContainsEntry</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.ContainsEntry(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>DeleteFileWithRetry</name>
            <fullName>System.Void Ionic.Zip.ZipFile.DeleteFileWithRetry(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>UnauthorizedAccessException</name>
                  <baseName>System.UnauthorizedAccessException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zip.ZipFile.Dispose(System.Boolean)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Dispose</name>
            <fullName>System.Void Ionic.Zip.ZipFile.Dispose()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>EnsureendInSlash</name>
            <fullName>System.String Ionic.Zip.ZipFile.EnsureendInSlash(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractAll</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ExtractAll(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractAll</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ExtractAll(System.String, Ionic.Zip.ExtractExistingFileAction)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractResourceToFile</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ExtractResourceToFile(System.Reflection.Assembly, System.String, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractSelectedEntries</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ExtractSelectedEntries(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractSelectedEntries</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ExtractSelectedEntries(System.String, System.String, System.String, Ionic.Zip.ExtractExistingFileAction)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractSelectedEntries</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ExtractSelectedEntries(System.String, Ionic.Zip.ExtractExistingFileAction)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractSelectedEntries</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ExtractSelectedEntries(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractSelectedEntries</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ExtractSelectedEntries(System.String, System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>FixZipDirectory</name>
            <fullName>System.Void Ionic.Zip.ZipFile.FixZipDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GenerateTempPathname</name>
            <fullName>System.String Ionic.Zip.ZipFile.GenerateTempPathname(System.String, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetEnumerator</name>
            <fullName>System.Collections.Generic.IEnumerator&lt;Ionic.Zip.ZipEntry&gt; Ionic.Zip.ZipFile.GetEnumerator()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetNewEnum</name>
            <fullName>System.Collections.IEnumerator Ionic.Zip.ZipFile.GetNewEnum()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Initialize</name>
            <fullName>System.Void Ionic.Zip.ZipFile.Initialize(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>1</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Throw</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <throwsIntoCatch>
                  <string>Ionic.Zip.ZipException</string>
                </throwsIntoCatch>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>InternalAddEntry</name>
            <fullName>System.Void Ionic.Zip.ZipFile.InternalAddEntry(System.String, Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IsZipFile</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.IsZipFile(System.String, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>2</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>IOException</name>
                  <baseName>System.IO.IOException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>IsZipFile</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.IsZipFile(System.IO.Stream, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>2</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>IOException</name>
                  <baseName>System.IO.IOException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>IsZipFile</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.IsZipFile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>NotifyEntriesSaveComplete</name>
            <fullName>System.Void Ionic.Zip.ZipFile.NotifyEntriesSaveComplete(System.Collections.Generic.ICollection&lt;Ionic.Zip.ZipEntry&gt;)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>NotifyEntryChanged</name>
            <fullName>System.Void Ionic.Zip.ZipFile.NotifyEntryChanged()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnAddCompleted</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnAddCompleted()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnAddStarted</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnAddStarted()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnExtractAllCompleted</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnExtractAllCompleted(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnExtractAllStarted</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnExtractAllStarted(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnExtractBlock</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.OnExtractBlock(Ionic.Zip.ZipEntry, System.Int64, System.Int64)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnExtractEntry</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnExtractEntry(System.Int32, System.Boolean, Ionic.Zip.ZipEntry, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnExtractExisting</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.OnExtractExisting(Ionic.Zip.ZipEntry, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnReadBytes</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnReadBytes(Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnReadCompleted</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnReadCompleted()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnReadEntry</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnReadEntry(System.Boolean, Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnReadStarted</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnReadStarted()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnSaveBlock</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.OnSaveBlock(Ionic.Zip.ZipEntry, System.Int64, System.Int64)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnSaveCompleted</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnSaveCompleted()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnSaveEntry</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnSaveEntry(System.Int32, Ionic.Zip.ZipEntry, System.Boolean)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnSaveEvent</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnSaveEvent(Ionic.Zip.ZipProgressEventType)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnSaveStarted</name>
            <fullName>System.Void Ionic.Zip.ZipFile.OnSaveStarted()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnSingleEntryExtract</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.OnSingleEntryExtract(Ionic.Zip.ZipEntry, System.String, System.Boolean)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>OnZipErrorSaving</name>
            <fullName>System.Boolean Ionic.Zip.ZipFile.OnZipErrorSaving(Ionic.Zip.ZipEntry, System.Exception)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>Ionic.Zip.ZipFile Ionic.Zip.ZipFile.Read(System.String, System.IO.TextWriter, System.Text.Encoding, System.EventHandler&lt;Ionic.Zip.ReadProgressEventArgs&gt;)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>Ionic.Zip.ZipFile Ionic.Zip.ZipFile.Read(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>Ionic.Zip.ZipFile Ionic.Zip.ZipFile.Read(System.String, Ionic.Zip.ReadOptions)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>Ionic.Zip.ZipFile Ionic.Zip.ZipFile.Read(System.IO.Stream, Ionic.Zip.ReadOptions)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>Ionic.Zip.ZipFile Ionic.Zip.ZipFile.Read(System.IO.Stream, System.IO.TextWriter, System.Text.Encoding, System.EventHandler&lt;Ionic.Zip.ReadProgressEventArgs&gt;)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Read</name>
            <fullName>Ionic.Zip.ZipFile Ionic.Zip.ZipFile.Read(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadCentralDirectory</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ReadCentralDirectory(Ionic.Zip.ZipFile)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadCentralDirectoryFooter</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ReadCentralDirectoryFooter(Ionic.Zip.ZipFile)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadFirstFourBytes</name>
            <fullName>System.UInt32 Ionic.Zip.ZipFile.ReadFirstFourBytes(System.IO.Stream)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadIntoInstance</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ReadIntoInstance(Ionic.Zip.ZipFile)</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>1</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>1</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <kind>Throw</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
              <methodException>
                <throwsIntoCatch>
                  <string>Ionic.Zip.ZipException</string>
                </throwsIntoCatch>
                <ExceptionReference>
                  <name>Exception</name>
                  <baseName>System.Exception</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>true</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>ReadIntoInstance_Orig</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ReadIntoInstance_Orig(Ionic.Zip.ZipFile)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadZipFileComment</name>
            <fullName>System.Void Ionic.Zip.ZipFile.ReadZipFileComment(Ionic.Zip.ZipFile)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>RemoveEntries</name>
            <fullName>System.Void Ionic.Zip.ZipFile.RemoveEntries(System.Collections.Generic.ICollection&lt;Ionic.Zip.ZipEntry&gt;)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>RemoveEntries</name>
            <fullName>System.Void Ionic.Zip.ZipFile.RemoveEntries(System.Collections.Generic.ICollection&lt;System.String&gt;)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>RemoveEntry</name>
            <fullName>System.Void Ionic.Zip.ZipFile.RemoveEntry(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>RemoveEntry</name>
            <fullName>System.Void Ionic.Zip.ZipFile.RemoveEntry(Ionic.Zip.ZipEntry)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>RemoveEntryForUpdate</name>
            <fullName>System.Void Ionic.Zip.ZipFile.RemoveEntryForUpdate(System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>RemoveSelectedEntries</name>
            <fullName>System.Int32 Ionic.Zip.ZipFile.RemoveSelectedEntries(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>RemoveSelectedEntries</name>
            <fullName>System.Int32 Ionic.Zip.ZipFile.RemoveSelectedEntries(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>RemoveTempFile</name>
            <fullName>System.Void Ionic.Zip.ZipFile.RemoveTempFile()</fullName>
            <visibility>private</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>1</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>1</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions>
              <methodException>
                <ExceptionReference>
                  <name>IOException</name>
                  <baseName>System.IO.IOException</baseName>
                </ExceptionReference>
                <kind>Catch</kind>
                <isGeneric>false</isGeneric>
                <startOffSet>0</startOffSet>
                <endOffSet>0</endOffSet>
              </methodException>
            </methodExceptions>
          </method>
          <method>
            <name>ReplaceLeadingDirectory</name>
            <fullName>System.String Ionic.Zip.ZipFile.ReplaceLeadingDirectory(System.String, System.String, System.String)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Reset</name>
            <fullName>System.Void Ionic.Zip.ZipFile.Reset(System.Boolean)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Save</name>
            <fullName>System.Void Ionic.Zip.ZipFile.Save(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Save</name>
            <fullName>System.Void Ionic.Zip.ZipFile.Save()</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Save</name>
            <fullName>System.Void Ionic.Zip.ZipFile.Save(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SaveSelfExtractor</name>
            <fullName>System.Void Ionic.Zip.ZipFile.SaveSelfExtractor(System.String, Ionic.Zip.SelfExtractorSaveOptions)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SaveSelfExtractor</name>
            <fullName>System.Void Ionic.Zip.ZipFile.SaveSelfExtractor(System.String, Ionic.Zip.SelfExtractorFlavor)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SelectEntries</name>
            <fullName>System.Collections.Generic.ICollection&lt;Ionic.Zip.ZipEntry&gt; Ionic.Zip.ZipFile.SelectEntries(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>SelectEntries</name>
            <fullName>System.Collections.Generic.ICollection&lt;Ionic.Zip.ZipEntry&gt; Ionic.Zip.ZipFile.SelectEntries(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>StreamForDiskNumber</name>
            <fullName>System.IO.Stream Ionic.Zip.ZipFile.StreamForDiskNumber(System.UInt32)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>System.Collections.IEnumerable.GetEnumerator</name>
            <fullName>System.Collections.IEnumerator Ionic.Zip.ZipFile.System.Collections.IEnumerable.GetEnumerator()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ToString</name>
            <fullName>System.String Ionic.Zip.ZipFile.ToString()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateDirectory</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateDirectory</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateDirectory(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateEntry(System.String, System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateEntry(System.String, Ionic.Zip.OpenDelegate, Ionic.Zip.CloseDelegate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateEntry(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateEntry(System.String, System.Byte[])</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateEntry(System.String, Ionic.Zip.WriteDelegate)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateEntry</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateEntry(System.String, System.String, System.Text.Encoding)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateFile</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateFile(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateFile</name>
            <fullName>Ionic.Zip.ZipEntry Ionic.Zip.ZipFile.UpdateFile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.UpdateFiles(System.Collections.Generic.IEnumerable&lt;System.String&gt;, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>1</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>1</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.UpdateFiles(System.Collections.Generic.IEnumerable&lt;System.String&gt;)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateItem</name>
            <fullName>System.Void Ionic.Zip.ZipFile.UpdateItem(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateItem</name>
            <fullName>System.Void Ionic.Zip.ZipFile.UpdateItem(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>UpdateSelectedFiles</name>
            <fullName>System.Void Ionic.Zip.ZipFile.UpdateSelectedFiles(System.String, System.String, System.String, System.Boolean)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Zip64SeekToCentralDirectory</name>
            <fullName>System.Void Ionic.Zip.ZipFile.Zip64SeekToCentralDirectory(Ionic.Zip.ZipFile)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipEntryTimestamp</name>
        <fullName>Ionic.Zip.ZipEntryTimestamp</fullName>
        <methods />
      </type>
      <type>
        <name>SaveProgressEventArgs</name>
        <fullName>Ionic.Zip.SaveProgressEventArgs</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.SaveProgressEventArgs..ctor(System.String, System.Boolean, System.Int32, System.Int32, Ionic.Zip.ZipEntry)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.SaveProgressEventArgs..ctor()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.SaveProgressEventArgs..ctor(System.String, Ionic.Zip.ZipProgressEventType)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ByteUpdate</name>
            <fullName>Ionic.Zip.SaveProgressEventArgs Ionic.Zip.SaveProgressEventArgs.ByteUpdate(System.String, Ionic.Zip.ZipEntry, System.Int64, System.Int64)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Completed</name>
            <fullName>Ionic.Zip.SaveProgressEventArgs Ionic.Zip.SaveProgressEventArgs.Completed(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Started</name>
            <fullName>Ionic.Zip.SaveProgressEventArgs Ionic.Zip.SaveProgressEventArgs.Started(System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BadReadException</name>
        <fullName>Ionic.Zip.BadReadException</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadReadException..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadReadException..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadReadException..ctor(System.String, System.Exception)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadReadException..ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>SelfExtractorFlavor</name>
        <fullName>Ionic.Zip.SelfExtractorFlavor</fullName>
        <methods />
      </type>
      <type>
        <name>CloseDelegate</name>
        <fullName>Ionic.Zip.CloseDelegate</fullName>
        <methods />
      </type>
      <type>
        <name>ExtractProgressEventArgs</name>
        <fullName>Ionic.Zip.ExtractProgressEventArgs</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ExtractProgressEventArgs..ctor(System.String, System.Boolean, System.Int32, System.Int32, Ionic.Zip.ZipEntry, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ExtractProgressEventArgs..ctor(System.String, Ionic.Zip.ZipProgressEventType)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ExtractProgressEventArgs..ctor()</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>AfterExtractEntry</name>
            <fullName>Ionic.Zip.ExtractProgressEventArgs Ionic.Zip.ExtractProgressEventArgs.AfterExtractEntry(System.String, Ionic.Zip.ZipEntry, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>BeforeExtractEntry</name>
            <fullName>Ionic.Zip.ExtractProgressEventArgs Ionic.Zip.ExtractProgressEventArgs.BeforeExtractEntry(System.String, Ionic.Zip.ZipEntry, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ByteUpdate</name>
            <fullName>Ionic.Zip.ExtractProgressEventArgs Ionic.Zip.ExtractProgressEventArgs.ByteUpdate(System.String, Ionic.Zip.ZipEntry, System.Int64, System.Int64)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractAllCompleted</name>
            <fullName>Ionic.Zip.ExtractProgressEventArgs Ionic.Zip.ExtractProgressEventArgs.ExtractAllCompleted(System.String, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractAllStarted</name>
            <fullName>Ionic.Zip.ExtractProgressEventArgs Ionic.Zip.ExtractProgressEventArgs.ExtractAllStarted(System.String, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ExtractExisting</name>
            <fullName>Ionic.Zip.ExtractProgressEventArgs Ionic.Zip.ExtractProgressEventArgs.ExtractExisting(System.String, Ionic.Zip.ZipEntry, System.String)</fullName>
            <visibility>internal</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>BadCrcException</name>
        <fullName>Ionic.Zip.BadCrcException</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadCrcException..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadCrcException..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.BadCrcException..ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ComHelper</name>
        <fullName>Ionic.Zip.ComHelper</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ComHelper..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CheckZip</name>
            <fullName>System.Boolean Ionic.Zip.ComHelper.CheckZip(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>CheckZipPassword</name>
            <fullName>System.Boolean Ionic.Zip.ComHelper.CheckZipPassword(System.String, System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>FixZipDirectory</name>
            <fullName>System.Void Ionic.Zip.ComHelper.FixZipDirectory(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>GetZipLibraryVersion</name>
            <fullName>System.String Ionic.Zip.ComHelper.GetZipLibraryVersion()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IsZipFile</name>
            <fullName>System.Boolean Ionic.Zip.ComHelper.IsZipFile(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>IsZipFileWithExtract</name>
            <fullName>System.Boolean Ionic.Zip.ComHelper.IsZipFileWithExtract(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>WinZipAesCrypto</name>
        <fullName>Ionic.Zip.WinZipAesCrypto</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCrypto..ctor(System.String, System.Int32)</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>_GenerateCryptoBytes</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCrypto._GenerateCryptoBytes()</fullName>
            <visibility>private</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>Generate</name>
            <fullName>Ionic.Zip.WinZipAesCrypto Ionic.Zip.WinZipAesCrypto.Generate(System.String, System.Int32)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadAndVerifyMac</name>
            <fullName>System.Void Ionic.Zip.WinZipAesCrypto.ReadAndVerifyMac(System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>ReadFromStream</name>
            <fullName>Ionic.Zip.WinZipAesCrypto Ionic.Zip.WinZipAesCrypto.ReadFromStream(System.String, System.Int32, System.IO.Stream)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>ZipException</name>
        <fullName>Ionic.Zip.ZipException</fullName>
        <kind>class</kind>
        <methods>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipException..ctor()</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipException..ctor(System.String)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipException..ctor(System.String, System.Exception)</fullName>
            <visibility>public</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
          <method>
            <name>.ctor</name>
            <fullName>System.Void Ionic.Zip.ZipException..ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</fullName>
            <visibility>protected</visibility>
            <qtdTry>0</qtdTry>
            <qtdCatch>0</qtdCatch>
            <qtdCatchGeneric>0</qtdCatchGeneric>
            <qtdCatchSpecialized>0</qtdCatchSpecialized>
            <qtdThrow>0</qtdThrow>
            <qtdFinally>0</qtdFinally>
            <methodExceptions />
          </method>
        </methods>
      </type>
      <type>
        <name>AddOrUpdateAction</name>
        <fullName>Ionic.Zip.AddOrUpdateAction</fullName>
        <methods />
      </type>
    </types>
    <methodCalls>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>4</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>4</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>2</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>3</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>8</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>2</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>3</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>4</offSet>
        <order>3</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>6</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>7</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>8</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>2</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>3</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>4</offSet>
        <order>3</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>4</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>23</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>1</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>2</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>1</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>2</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>1</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>2</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>7</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>4</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>4</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>4</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>4</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>4</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>1</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>2</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>0</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>2</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="0" />
        <offSet>11</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>9</offSet>
        <order>1</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>21</offSet>
        <order>2</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>27</offSet>
        <order>3</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>28</offSet>
        <order>4</order>
      </methodCall>
      <methodCall>
        <methodSource reference="0" />
        <methodTarget reference="1" />
        <offSet>3</offSet>
        <order>0</order>
      </methodCall>
    </methodCalls>
  </assembly>
</list>